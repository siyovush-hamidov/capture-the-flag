{
	"id": "d6a0d3f253840cf3a244b8f7e3f544cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/level22.sol": {
				"content": "// The goal of this level is for you to hack the basic DEX contract below and steal the funds by price manipulation.\n\n// You will start with 10 tokens of token1 and 10 of token2. The DEX contract starts with 100 of each token.\n\n// You will be successful in this level if you manage to drain all of at least 1 of the 2 tokens from the contract, and allow the contract to report a \"bad\" price of the assets.\n\n \n// Quick note\n\n// Normally, when you make a swap with an ERC20 token, you have to approve the contract to spend your tokens for you. To keep with the syntax of the game, we've just added the approve method to the contract itself. So feel free to use contract.approve(contract.address, <uint amount>) instead of calling the tokens directly, and it will automatically approve spending the two tokens by the desired amount. Feel free to ignore the SwappableToken contract otherwise.\n\n//   Things that might help:\n\n//     How is the price of the token calculated?\n//     How does the swap method work?\n//     How do you approve a transaction of an ERC20?\n//     Theres more than one way to interact with a contract!\n//     Remix might help\n//     What does \"At Address\" do?\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\n\ncontract Dex is Ownable {\n    address public token1;\n    address public token2;\n\n    // Pass the initial owner address to the Ownable constructor\n    constructor() Ownable(msg.sender) {}\n\n    function setTokens(address _token1, address _token2) public onlyOwner {\n        token1 = _token1;\n        token2 = _token2;\n    }\n\n    function addLiquidity(address token_address, uint256 amount) public onlyOwner {\n        IERC20(token_address).transferFrom(msg.sender, address(this), amount);\n    }\n\n    function swap(address from, address to, uint256 amount) public {\n        require((from == token1 && to == token2) || (from == token2 && to == token1), \"Invalid tokens\");\n        require(IERC20(from).balanceOf(msg.sender) >= amount, \"Not enough to swap\");\n        uint256 swapAmount = getSwapPrice(from, to, amount);\n        IERC20(from).transferFrom(msg.sender, address(this), amount);\n        IERC20(to).approve(address(this), swapAmount);\n        IERC20(to).transferFrom(address(this), msg.sender, swapAmount);\n    }\n\n    function getSwapPrice(address from, address to, uint256 amount) public view returns (uint256) {\n        return ((amount * IERC20(to).balanceOf(address(this))) / IERC20(from).balanceOf(address(this)));\n    }\n\n    function approve(address spender, uint256 amount) public {\n        SwappableToken(token1).approve(msg.sender, spender, amount);\n        SwappableToken(token2).approve(msg.sender, spender, amount);\n    }\n\n    function balanceOf(address token, address account) public view returns (uint256) {\n        return IERC20(token).balanceOf(account);\n    }\n}\n\n\ncontract SwappableToken is ERC20 {\n    address private _dex;\n\n    constructor(address dexInstance, string memory name, string memory symbol, uint256 initialSupply)\n        ERC20(name, symbol)\n    {\n        _mint(msg.sender, initialSupply);\n        _dex = dexInstance;\n    }\n\n    function approve(address owner, address spender, uint256 amount) public {\n        require(owner != _dex, \"InvalidApprover\");\n        super._approve(owner, spender, amount);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/level22.sol": {
				"Dex": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getSwapPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token2",
									"type": "address"
								}
							],
							"name": "setTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/level22.sol\":1563:3143  contract Dex is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/level22.sol\":1713:1749  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/level22.sol\":1735:1745  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/level22.sol\":1563:3143  contract Dex is Ownable {... */\n  jump(tag_11)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/level22.sol\":1563:3143  contract Dex is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/level22.sol\":1563:3143  contract Dex is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbfd7e00d\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xbfd7e00d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcbc7854e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdf791e50\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf7888aec\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x25be124e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56688700\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/level22.sol\":2796:2998  function approve(address spender, uint256 amount) public {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"src/level22.sol\":1620:1641  address public token2 */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level22.sol\":1890:2054  function addLiquidity(address token_address, uint256 amount) public onlyOwner {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level22.sol\":2584:2790  function getSwapPrice(address from, address to, uint256 amount) public view returns (uint256) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level22.sol\":1755:1884  function setTokens(address _token1, address _token2) public onlyOwner {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"src/level22.sol\":1593:1614  address public token1 */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level22.sol\":2060:2578  function swap(address from, address to, uint256 amount) public {... */\n    tag_11:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"src/level22.sol\":3004:3141  function balanceOf(address token, address account) public view returns (uint256) {... */\n    tag_13:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level22.sol\":2796:2998  function approve(address spender, uint256 amount) public {... */\n    tag_18:\n        /* \"src/level22.sol\":2878:2884  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2863:2893  SwappableToken(token1).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1f21c67\n        /* \"src/level22.sol\":2894:2904  msg.sender */\n      caller\n        /* \"src/level22.sol\":2906:2913  spender */\n      dup5\n        /* \"src/level22.sol\":2915:2921  amount */\n      dup5\n        /* \"src/level22.sol\":2863:2922  SwappableToken(token1).approve(msg.sender, spender, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/level22.sol\":2947:2953  token2 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2932:2962  SwappableToken(token2).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1f21c67\n        /* \"src/level22.sol\":2963:2973  msg.sender */\n      caller\n        /* \"src/level22.sol\":2975:2982  spender */\n      dup5\n        /* \"src/level22.sol\":2984:2990  amount */\n      dup5\n        /* \"src/level22.sol\":2932:2991  SwappableToken(token2).approve(msg.sender, spender, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_61:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/level22.sol\":2796:2998  function approve(address spender, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/level22.sol\":1620:1641  address public token2 */\n    tag_20:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/level22.sol\":1890:2054  function addLiquidity(address token_address, uint256 amount) public onlyOwner {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"src/level22.sol\":1985:1998  token_address */\n      dup2\n        /* \"src/level22.sol\":1978:2012  IERC20(token_address).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/level22.sol\":2013:2023  msg.sender */\n      caller\n        /* \"src/level22.sol\":2033:2037  this */\n      address\n        /* \"src/level22.sol\":2040:2046  amount */\n      dup5\n        /* \"src/level22.sol\":1978:2047  IERC20(token_address).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_69:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"src/level22.sol\":1890:2054  function addLiquidity(address token_address, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/level22.sol\":2584:2790  function getSwapPrice(address from, address to, uint256 amount) public view returns (uint256) {... */\n    tag_34:\n        /* \"src/level22.sol\":2669:2676  uint256 */\n      0x00\n        /* \"src/level22.sol\":2752:2756  from */\n      dup4\n        /* \"src/level22.sol\":2745:2767  IERC20(from).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/level22.sol\":2776:2780  this */\n      address\n        /* \"src/level22.sol\":2745:2782  IERC20(from).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"src/level22.sol\":2713:2715  to */\n      dup4\n        /* \"src/level22.sol\":2706:2726  IERC20(to).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/level22.sol\":2735:2739  this */\n      address\n        /* \"src/level22.sol\":2706:2741  IERC20(to).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_89:\n        /* \"src/level22.sol\":2697:2703  amount */\n      dup4\n        /* \"src/level22.sol\":2697:2741  amount * IERC20(to).balanceOf(address(this)) */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"src/level22.sol\":2696:2782  (amount * IERC20(to).balanceOf(address(this))) / IERC20(from).balanceOf(address(this)) */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"src/level22.sol\":2688:2783  return ((amount * IERC20(to).balanceOf(address(this))) / IERC20(from).balanceOf(address(this))) */\n      swap1\n      pop\n        /* \"src/level22.sol\":2584:2790  function getSwapPrice(address from, address to, uint256 amount) public view returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/level22.sol\":1755:1884  function setTokens(address _token1, address _token2) public onlyOwner {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_95:\n        /* \"src/level22.sol\":1844:1851  _token1 */\n      dup2\n        /* \"src/level22.sol\":1835:1841  token1 */\n      0x01\n      0x00\n        /* \"src/level22.sol\":1835:1851  token1 = _token1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/level22.sol\":1870:1877  _token2 */\n      dup1\n        /* \"src/level22.sol\":1861:1867  token2 */\n      0x02\n      0x00\n        /* \"src/level22.sol\":1861:1877  token2 = _token2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/level22.sol\":1755:1884  function setTokens(address _token1, address _token2) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/level22.sol\":1593:1614  address public token1 */\n    tag_42:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/level22.sol\":2060:2578  function swap(address from, address to, uint256 amount) public {... */\n    tag_46:\n        /* \"src/level22.sol\":2150:2156  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2142:2156  from == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2142:2146  from */\n      dup4\n        /* \"src/level22.sol\":2142:2156  from == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/level22.sol\":2142:2172  from == token1 && to == token2 */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n        /* \"src/level22.sol\":2166:2172  token2 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2160:2172  to == token2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2160:2162  to */\n      dup3\n        /* \"src/level22.sol\":2160:2172  to == token2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/level22.sol\":2142:2172  from == token1 && to == token2 */\n    tag_98:\n        /* \"src/level22.sol\":2141:2209  (from == token1 && to == token2) || (from == token2 && to == token1) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"src/level22.sol\":2186:2192  token2 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2178:2192  from == token2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2178:2182  from */\n      dup4\n        /* \"src/level22.sol\":2178:2192  from == token2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/level22.sol\":2178:2208  from == token2 && to == token1 */\n      dup1\n      iszero\n      tag_100\n      jumpi\n      pop\n        /* \"src/level22.sol\":2202:2208  token1 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2196:2208  to == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":2196:2198  to */\n      dup3\n        /* \"src/level22.sol\":2196:2208  to == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/level22.sol\":2178:2208  from == token2 && to == token1 */\n    tag_100:\n        /* \"src/level22.sol\":2141:2209  (from == token1 && to == token2) || (from == token2 && to == token1) */\n    tag_99:\n        /* \"src/level22.sol\":2133:2228  require((from == token1 && to == token2) || (from == token2 && to == token1), \"Invalid tokens\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"src/level22.sol\":2284:2290  amount */\n      dup1\n        /* \"src/level22.sol\":2253:2257  from */\n      dup4\n        /* \"src/level22.sol\":2246:2268  IERC20(from).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/level22.sol\":2269:2279  msg.sender */\n      caller\n        /* \"src/level22.sol\":2246:2280  IERC20(from).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_107:\n        /* \"src/level22.sol\":2246:2290  IERC20(from).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"src/level22.sol\":2238:2313  require(IERC20(from).balanceOf(msg.sender) >= amount, \"Not enough to swap\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"src/level22.sol\":2323:2341  uint256 swapAmount */\n      0x00\n        /* \"src/level22.sol\":2344:2374  getSwapPrice(from, to, amount) */\n      tag_111\n        /* \"src/level22.sol\":2357:2361  from */\n      dup5\n        /* \"src/level22.sol\":2363:2365  to */\n      dup5\n        /* \"src/level22.sol\":2367:2373  amount */\n      dup5\n        /* \"src/level22.sol\":2344:2356  getSwapPrice */\n      tag_34\n        /* \"src/level22.sol\":2344:2374  getSwapPrice(from, to, amount) */\n      jump\t// in\n    tag_111:\n        /* \"src/level22.sol\":2323:2374  uint256 swapAmount = getSwapPrice(from, to, amount) */\n      swap1\n      pop\n        /* \"src/level22.sol\":2391:2395  from */\n      dup4\n        /* \"src/level22.sol\":2384:2409  IERC20(from).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/level22.sol\":2410:2420  msg.sender */\n      caller\n        /* \"src/level22.sol\":2430:2434  this */\n      address\n        /* \"src/level22.sol\":2437:2443  amount */\n      dup6\n        /* \"src/level22.sol\":2384:2444  IERC20(from).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_112:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_115:\n      pop\n        /* \"src/level22.sol\":2461:2463  to */\n      dup3\n        /* \"src/level22.sol\":2454:2472  IERC20(to).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"src/level22.sol\":2481:2485  this */\n      address\n        /* \"src/level22.sol\":2488:2498  swapAmount */\n      dup4\n        /* \"src/level22.sol\":2454:2499  IERC20(to).approve(address(this), swapAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_120:\n      pop\n        /* \"src/level22.sol\":2516:2518  to */\n      dup3\n        /* \"src/level22.sol\":2509:2532  IERC20(to).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/level22.sol\":2541:2545  this */\n      address\n        /* \"src/level22.sol\":2548:2558  msg.sender */\n      caller\n        /* \"src/level22.sol\":2560:2570  swapAmount */\n      dup5\n        /* \"src/level22.sol\":2509:2571  IERC20(to).transferFrom(address(this), msg.sender, swapAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_124:\n      pop\n        /* \"src/level22.sol\":2123:2578  {... */\n      pop\n        /* \"src/level22.sol\":2060:2578  function swap(address from, address to, uint256 amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_126\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/level22.sol\":3004:3141  function balanceOf(address token, address account) public view returns (uint256) {... */\n    tag_53:\n        /* \"src/level22.sol\":3076:3083  uint256 */\n      0x00\n        /* \"src/level22.sol\":3109:3114  token */\n      dup3\n        /* \"src/level22.sol\":3102:3125  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/level22.sol\":3126:3133  account */\n      dup4\n        /* \"src/level22.sol\":3102:3134  IERC20(token).balanceOf(account) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_135:\n        /* \"src/level22.sol\":3095:3134  return IERC20(token).balanceOf(account) */\n      swap1\n      pop\n        /* \"src/level22.sol\":3004:3141  function balanceOf(address token, address account) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_29\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_140\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_141\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_146:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_148:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_149:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_174\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_148\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_150:\n        /* \"#utility.yul\":641:665   */\n      tag_176\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_149\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_177:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_151:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_179\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_150\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_152:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_153:\n        /* \"#utility.yul\":997:1021   */\n      tag_182\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_152\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_183:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_154:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_185\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_153\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_17:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_188\n      tag_146\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1290:1409   */\n    tag_187:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_189\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_151\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_190\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_154\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_155:\n        /* \"#utility.yul\":1764:1788   */\n      tag_192\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_149\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_22:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_194\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_155\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2648   */\n    tag_33:\n        /* \"#utility.yul\":2106:2112   */\n      0x00\n        /* \"#utility.yul\":2114:2120   */\n      dup1\n        /* \"#utility.yul\":2122:2128   */\n      0x00\n        /* \"#utility.yul\":2171:2173   */\n      0x60\n        /* \"#utility.yul\":2159:2168   */\n      dup5\n        /* \"#utility.yul\":2150:2157   */\n      dup7\n        /* \"#utility.yul\":2146:2169   */\n      sub\n        /* \"#utility.yul\":2142:2174   */\n      slt\n        /* \"#utility.yul\":2139:2258   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2177:2256   */\n      tag_197\n      tag_146\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2139:2258   */\n    tag_196:\n        /* \"#utility.yul\":2297:2298   */\n      0x00\n        /* \"#utility.yul\":2322:2375   */\n      tag_198\n        /* \"#utility.yul\":2367:2374   */\n      dup7\n        /* \"#utility.yul\":2358:2364   */\n      dup3\n        /* \"#utility.yul\":2347:2356   */\n      dup8\n        /* \"#utility.yul\":2343:2365   */\n      add\n        /* \"#utility.yul\":2322:2375   */\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2312:2375   */\n      swap4\n      pop\n        /* \"#utility.yul\":2268:2385   */\n      pop\n        /* \"#utility.yul\":2424:2426   */\n      0x20\n        /* \"#utility.yul\":2450:2503   */\n      tag_199\n        /* \"#utility.yul\":2495:2502   */\n      dup7\n        /* \"#utility.yul\":2486:2492   */\n      dup3\n        /* \"#utility.yul\":2475:2484   */\n      dup8\n        /* \"#utility.yul\":2471:2493   */\n      add\n        /* \"#utility.yul\":2450:2503   */\n      tag_151\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2440:2503   */\n      swap3\n      pop\n        /* \"#utility.yul\":2395:2513   */\n      pop\n        /* \"#utility.yul\":2552:2554   */\n      0x40\n        /* \"#utility.yul\":2578:2631   */\n      tag_200\n        /* \"#utility.yul\":2623:2630   */\n      dup7\n        /* \"#utility.yul\":2614:2620   */\n      dup3\n        /* \"#utility.yul\":2603:2612   */\n      dup8\n        /* \"#utility.yul\":2599:2621   */\n      add\n        /* \"#utility.yul\":2578:2631   */\n      tag_154\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2568:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2523:2641   */\n      pop\n        /* \"#utility.yul\":2029:2648   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2654:2772   */\n    tag_156:\n        /* \"#utility.yul\":2741:2765   */\n      tag_202\n        /* \"#utility.yul\":2759:2764   */\n      dup2\n        /* \"#utility.yul\":2741:2765   */\n      tag_152\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2736:2739   */\n      dup3\n        /* \"#utility.yul\":2729:2766   */\n      mstore\n        /* \"#utility.yul\":2654:2772   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2778:3000   */\n    tag_36:\n        /* \"#utility.yul\":2871:2875   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x20\n        /* \"#utility.yul\":2898:2907   */\n      dup3\n        /* \"#utility.yul\":2894:2912   */\n      add\n        /* \"#utility.yul\":2886:2912   */\n      swap1\n      pop\n        /* \"#utility.yul\":2922:2993   */\n      tag_204\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2979:2988   */\n      dup4\n        /* \"#utility.yul\":2975:2992   */\n      add\n        /* \"#utility.yul\":2966:2972   */\n      dup5\n        /* \"#utility.yul\":2922:2993   */\n      tag_156\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2778:3000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3480   */\n    tag_39:\n        /* \"#utility.yul\":3074:3080   */\n      0x00\n        /* \"#utility.yul\":3082:3088   */\n      dup1\n        /* \"#utility.yul\":3131:3133   */\n      0x40\n        /* \"#utility.yul\":3119:3128   */\n      dup4\n        /* \"#utility.yul\":3110:3117   */\n      dup6\n        /* \"#utility.yul\":3106:3129   */\n      sub\n        /* \"#utility.yul\":3102:3134   */\n      slt\n        /* \"#utility.yul\":3099:3218   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":3137:3216   */\n      tag_207\n      tag_146\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3099:3218   */\n    tag_206:\n        /* \"#utility.yul\":3257:3258   */\n      0x00\n        /* \"#utility.yul\":3282:3335   */\n      tag_208\n        /* \"#utility.yul\":3327:3334   */\n      dup6\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3307:3316   */\n      dup7\n        /* \"#utility.yul\":3303:3325   */\n      add\n        /* \"#utility.yul\":3282:3335   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3272:3335   */\n      swap3\n      pop\n        /* \"#utility.yul\":3228:3345   */\n      pop\n        /* \"#utility.yul\":3384:3386   */\n      0x20\n        /* \"#utility.yul\":3410:3463   */\n      tag_209\n        /* \"#utility.yul\":3455:3462   */\n      dup6\n        /* \"#utility.yul\":3446:3452   */\n      dup3\n        /* \"#utility.yul\":3435:3444   */\n      dup7\n        /* \"#utility.yul\":3431:3453   */\n      add\n        /* \"#utility.yul\":3410:3463   */\n      tag_151\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3400:3463   */\n      swap2\n      pop\n        /* \"#utility.yul\":3355:3473   */\n      pop\n        /* \"#utility.yul\":3006:3480   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3815   */\n    tag_49:\n        /* \"#utility.yul\":3545:3551   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3582:3591   */\n      dup3\n        /* \"#utility.yul\":3573:3580   */\n      dup5\n        /* \"#utility.yul\":3569:3592   */\n      sub\n        /* \"#utility.yul\":3565:3597   */\n      slt\n        /* \"#utility.yul\":3562:3681   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3600:3679   */\n      tag_212\n      tag_146\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3562:3681   */\n    tag_211:\n        /* \"#utility.yul\":3720:3721   */\n      0x00\n        /* \"#utility.yul\":3745:3798   */\n      tag_213\n        /* \"#utility.yul\":3790:3797   */\n      dup5\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3770:3779   */\n      dup6\n        /* \"#utility.yul\":3766:3788   */\n      add\n        /* \"#utility.yul\":3745:3798   */\n      tag_151\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3735:3798   */\n      swap2\n      pop\n        /* \"#utility.yul\":3691:3808   */\n      pop\n        /* \"#utility.yul\":3486:3815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3821:4263   */\n    tag_57:\n        /* \"#utility.yul\":3970:3974   */\n      0x00\n        /* \"#utility.yul\":4008:4010   */\n      0x60\n        /* \"#utility.yul\":3997:4006   */\n      dup3\n        /* \"#utility.yul\":3993:4011   */\n      add\n        /* \"#utility.yul\":3985:4011   */\n      swap1\n      pop\n        /* \"#utility.yul\":4021:4092   */\n      tag_215\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4078:4087   */\n      dup4\n        /* \"#utility.yul\":4074:4091   */\n      add\n        /* \"#utility.yul\":4065:4071   */\n      dup7\n        /* \"#utility.yul\":4021:4092   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4102:4174   */\n      tag_216\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"#utility.yul\":4159:4168   */\n      dup4\n        /* \"#utility.yul\":4155:4173   */\n      add\n        /* \"#utility.yul\":4146:4152   */\n      dup6\n        /* \"#utility.yul\":4102:4174   */\n      tag_155\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4184:4256   */\n      tag_217\n        /* \"#utility.yul\":4252:4254   */\n      0x40\n        /* \"#utility.yul\":4241:4250   */\n      dup4\n        /* \"#utility.yul\":4237:4255   */\n      add\n        /* \"#utility.yul\":4228:4234   */\n      dup5\n        /* \"#utility.yul\":4184:4256   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3821:4263   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4269:4359   */\n    tag_157:\n        /* \"#utility.yul\":4303:4310   */\n      0x00\n        /* \"#utility.yul\":4346:4351   */\n      dup2\n        /* \"#utility.yul\":4339:4352   */\n      iszero\n        /* \"#utility.yul\":4332:4353   */\n      iszero\n        /* \"#utility.yul\":4321:4353   */\n      swap1\n      pop\n        /* \"#utility.yul\":4269:4359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4365:4481   */\n    tag_158:\n        /* \"#utility.yul\":4435:4456   */\n      tag_220\n        /* \"#utility.yul\":4450:4455   */\n      dup2\n        /* \"#utility.yul\":4435:4456   */\n      tag_157\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4428:4433   */\n      dup2\n        /* \"#utility.yul\":4425:4457   */\n      eq\n        /* \"#utility.yul\":4415:4475   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":4471:4472   */\n      0x00\n        /* \"#utility.yul\":4468:4469   */\n      dup1\n        /* \"#utility.yul\":4461:4473   */\n      revert\n        /* \"#utility.yul\":4415:4475   */\n    tag_221:\n        /* \"#utility.yul\":4365:4481   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4487:4624   */\n    tag_159:\n        /* \"#utility.yul\":4541:4546   */\n      0x00\n        /* \"#utility.yul\":4572:4578   */\n      dup2\n        /* \"#utility.yul\":4566:4579   */\n      mload\n        /* \"#utility.yul\":4557:4579   */\n      swap1\n      pop\n        /* \"#utility.yul\":4588:4618   */\n      tag_223\n        /* \"#utility.yul\":4612:4617   */\n      dup2\n        /* \"#utility.yul\":4588:4618   */\n      tag_158\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4487:4624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4630:4975   */\n    tag_73:\n        /* \"#utility.yul\":4697:4703   */\n      0x00\n        /* \"#utility.yul\":4746:4748   */\n      0x20\n        /* \"#utility.yul\":4734:4743   */\n      dup3\n        /* \"#utility.yul\":4725:4732   */\n      dup5\n        /* \"#utility.yul\":4721:4744   */\n      sub\n        /* \"#utility.yul\":4717:4749   */\n      slt\n        /* \"#utility.yul\":4714:4833   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":4752:4831   */\n      tag_226\n      tag_146\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4714:4833   */\n    tag_225:\n        /* \"#utility.yul\":4872:4873   */\n      0x00\n        /* \"#utility.yul\":4897:4958   */\n      tag_227\n        /* \"#utility.yul\":4950:4957   */\n      dup5\n        /* \"#utility.yul\":4941:4947   */\n      dup3\n        /* \"#utility.yul\":4930:4939   */\n      dup6\n        /* \"#utility.yul\":4926:4948   */\n      add\n        /* \"#utility.yul\":4897:4958   */\n      tag_159\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4887:4958   */\n      swap2\n      pop\n        /* \"#utility.yul\":4843:4968   */\n      pop\n        /* \"#utility.yul\":4630:4975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4981:5124   */\n    tag_160:\n        /* \"#utility.yul\":5038:5043   */\n      0x00\n        /* \"#utility.yul\":5069:5075   */\n      dup2\n        /* \"#utility.yul\":5063:5076   */\n      mload\n        /* \"#utility.yul\":5054:5076   */\n      swap1\n      pop\n        /* \"#utility.yul\":5085:5118   */\n      tag_229\n        /* \"#utility.yul\":5112:5117   */\n      dup2\n        /* \"#utility.yul\":5085:5118   */\n      tag_153\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4981:5124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5130:5481   */\n    tag_85:\n        /* \"#utility.yul\":5200:5206   */\n      0x00\n        /* \"#utility.yul\":5249:5251   */\n      0x20\n        /* \"#utility.yul\":5237:5246   */\n      dup3\n        /* \"#utility.yul\":5228:5235   */\n      dup5\n        /* \"#utility.yul\":5224:5247   */\n      sub\n        /* \"#utility.yul\":5220:5252   */\n      slt\n        /* \"#utility.yul\":5217:5336   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":5255:5334   */\n      tag_232\n      tag_146\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5217:5336   */\n    tag_231:\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5400:5464   */\n      tag_233\n        /* \"#utility.yul\":5456:5463   */\n      dup5\n        /* \"#utility.yul\":5447:5453   */\n      dup3\n        /* \"#utility.yul\":5436:5445   */\n      dup6\n        /* \"#utility.yul\":5432:5454   */\n      add\n        /* \"#utility.yul\":5400:5464   */\n      tag_160\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5390:5464   */\n      swap2\n      pop\n        /* \"#utility.yul\":5346:5474   */\n      pop\n        /* \"#utility.yul\":5130:5481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5487:5667   */\n    tag_161:\n        /* \"#utility.yul\":5535:5612   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5532:5533   */\n      0x00\n        /* \"#utility.yul\":5525:5613   */\n      mstore\n        /* \"#utility.yul\":5632:5636   */\n      0x11\n        /* \"#utility.yul\":5629:5630   */\n      0x04\n        /* \"#utility.yul\":5622:5637   */\n      mstore\n        /* \"#utility.yul\":5656:5660   */\n      0x24\n        /* \"#utility.yul\":5653:5654   */\n      0x00\n        /* \"#utility.yul\":5646:5661   */\n      revert\n        /* \"#utility.yul\":5673:6083   */\n    tag_91:\n        /* \"#utility.yul\":5713:5720   */\n      0x00\n        /* \"#utility.yul\":5736:5756   */\n      tag_236\n        /* \"#utility.yul\":5754:5755   */\n      dup3\n        /* \"#utility.yul\":5736:5756   */\n      tag_152\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5731:5756   */\n      swap2\n      pop\n        /* \"#utility.yul\":5770:5790   */\n      tag_237\n        /* \"#utility.yul\":5788:5789   */\n      dup4\n        /* \"#utility.yul\":5770:5790   */\n      tag_152\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5765:5790   */\n      swap3\n      pop\n        /* \"#utility.yul\":5825:5826   */\n      dup3\n        /* \"#utility.yul\":5822:5823   */\n      dup3\n        /* \"#utility.yul\":5818:5827   */\n      mul\n        /* \"#utility.yul\":5847:5877   */\n      tag_238\n        /* \"#utility.yul\":5865:5876   */\n      dup2\n        /* \"#utility.yul\":5847:5877   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5836:5877   */\n      swap2\n      pop\n        /* \"#utility.yul\":6026:6027   */\n      dup3\n        /* \"#utility.yul\":6017:6024   */\n      dup3\n        /* \"#utility.yul\":6013:6028   */\n      div\n        /* \"#utility.yul\":6010:6011   */\n      dup5\n        /* \"#utility.yul\":6007:6029   */\n      eq\n        /* \"#utility.yul\":5987:5988   */\n      dup4\n        /* \"#utility.yul\":5980:5989   */\n      iszero\n        /* \"#utility.yul\":5960:6043   */\n      or\n        /* \"#utility.yul\":5937:6076   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6056:6074   */\n      tag_240\n      tag_161\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5937:6076   */\n    tag_239:\n        /* \"#utility.yul\":5721:6083   */\n      pop\n        /* \"#utility.yul\":5673:6083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6269   */\n    tag_162:\n        /* \"#utility.yul\":6137:6214   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6134:6135   */\n      0x00\n        /* \"#utility.yul\":6127:6215   */\n      mstore\n        /* \"#utility.yul\":6234:6238   */\n      0x12\n        /* \"#utility.yul\":6231:6232   */\n      0x04\n        /* \"#utility.yul\":6224:6239   */\n      mstore\n        /* \"#utility.yul\":6258:6262   */\n      0x24\n        /* \"#utility.yul\":6255:6256   */\n      0x00\n        /* \"#utility.yul\":6248:6263   */\n      revert\n        /* \"#utility.yul\":6275:6460   */\n    tag_93:\n        /* \"#utility.yul\":6315:6316   */\n      0x00\n        /* \"#utility.yul\":6332:6352   */\n      tag_243\n        /* \"#utility.yul\":6350:6351   */\n      dup3\n        /* \"#utility.yul\":6332:6352   */\n      tag_152\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6327:6352   */\n      swap2\n      pop\n        /* \"#utility.yul\":6366:6386   */\n      tag_244\n        /* \"#utility.yul\":6384:6385   */\n      dup4\n        /* \"#utility.yul\":6366:6386   */\n      tag_152\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6361:6386   */\n      swap3\n      pop\n        /* \"#utility.yul\":6405:6406   */\n      dup3\n        /* \"#utility.yul\":6395:6430   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6410:6428   */\n      tag_246\n      tag_162\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6395:6430   */\n    tag_245:\n        /* \"#utility.yul\":6452:6453   */\n      dup3\n        /* \"#utility.yul\":6449:6450   */\n      dup3\n        /* \"#utility.yul\":6445:6454   */\n      div\n        /* \"#utility.yul\":6440:6454   */\n      swap1\n      pop\n        /* \"#utility.yul\":6275:6460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6466:6635   */\n    tag_163:\n        /* \"#utility.yul\":6550:6561   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup3\n        /* \"#utility.yul\":6579:6582   */\n      dup3\n        /* \"#utility.yul\":6572:6591   */\n      mstore\n        /* \"#utility.yul\":6624:6628   */\n      0x20\n        /* \"#utility.yul\":6619:6622   */\n      dup3\n        /* \"#utility.yul\":6615:6629   */\n      add\n        /* \"#utility.yul\":6600:6629   */\n      swap1\n      pop\n        /* \"#utility.yul\":6466:6635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6641:6805   */\n    tag_164:\n        /* \"#utility.yul\":6781:6797   */\n      0x496e76616c696420746f6b656e73000000000000000000000000000000000000\n        /* \"#utility.yul\":6777:6778   */\n      0x00\n        /* \"#utility.yul\":6769:6775   */\n      dup3\n        /* \"#utility.yul\":6765:6779   */\n      add\n        /* \"#utility.yul\":6758:6798   */\n      mstore\n        /* \"#utility.yul\":6641:6805   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7177   */\n    tag_165:\n        /* \"#utility.yul\":6953:6956   */\n      0x00\n        /* \"#utility.yul\":6974:7041   */\n      tag_250\n        /* \"#utility.yul\":7038:7040   */\n      0x0e\n        /* \"#utility.yul\":7033:7036   */\n      dup4\n        /* \"#utility.yul\":6974:7041   */\n      tag_163\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6967:7041   */\n      swap2\n      pop\n        /* \"#utility.yul\":7050:7143   */\n      tag_251\n        /* \"#utility.yul\":7139:7142   */\n      dup3\n        /* \"#utility.yul\":7050:7143   */\n      tag_164\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7168:7170   */\n      0x20\n        /* \"#utility.yul\":7163:7166   */\n      dup3\n        /* \"#utility.yul\":7159:7171   */\n      add\n        /* \"#utility.yul\":7152:7171   */\n      swap1\n      pop\n        /* \"#utility.yul\":6811:7177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7183:7602   */\n    tag_103:\n        /* \"#utility.yul\":7349:7353   */\n      0x00\n        /* \"#utility.yul\":7387:7389   */\n      0x20\n        /* \"#utility.yul\":7376:7385   */\n      dup3\n        /* \"#utility.yul\":7372:7390   */\n      add\n        /* \"#utility.yul\":7364:7390   */\n      swap1\n      pop\n        /* \"#utility.yul\":7436:7445   */\n      dup2\n        /* \"#utility.yul\":7430:7434   */\n      dup2\n        /* \"#utility.yul\":7426:7446   */\n      sub\n        /* \"#utility.yul\":7422:7423   */\n      0x00\n        /* \"#utility.yul\":7411:7420   */\n      dup4\n        /* \"#utility.yul\":7407:7424   */\n      add\n        /* \"#utility.yul\":7400:7447   */\n      mstore\n        /* \"#utility.yul\":7464:7595   */\n      tag_253\n        /* \"#utility.yul\":7590:7594   */\n      dup2\n        /* \"#utility.yul\":7464:7595   */\n      tag_165\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7456:7595   */\n      swap1\n      pop\n        /* \"#utility.yul\":7183:7602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7608:7776   */\n    tag_166:\n        /* \"#utility.yul\":7748:7768   */\n      0x4e6f7420656e6f75676820746f20737761700000000000000000000000000000\n        /* \"#utility.yul\":7744:7745   */\n      0x00\n        /* \"#utility.yul\":7736:7742   */\n      dup3\n        /* \"#utility.yul\":7732:7746   */\n      add\n        /* \"#utility.yul\":7725:7769   */\n      mstore\n        /* \"#utility.yul\":7608:7776   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7782:8148   */\n    tag_167:\n        /* \"#utility.yul\":7924:7927   */\n      0x00\n        /* \"#utility.yul\":7945:8012   */\n      tag_256\n        /* \"#utility.yul\":8009:8011   */\n      0x12\n        /* \"#utility.yul\":8004:8007   */\n      dup4\n        /* \"#utility.yul\":7945:8012   */\n      tag_163\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7938:8012   */\n      swap2\n      pop\n        /* \"#utility.yul\":8021:8114   */\n      tag_257\n        /* \"#utility.yul\":8110:8113   */\n      dup3\n        /* \"#utility.yul\":8021:8114   */\n      tag_166\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8139:8141   */\n      0x20\n        /* \"#utility.yul\":8134:8137   */\n      dup3\n        /* \"#utility.yul\":8130:8142   */\n      add\n        /* \"#utility.yul\":8123:8142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7782:8148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8154:8573   */\n    tag_110:\n        /* \"#utility.yul\":8320:8324   */\n      0x00\n        /* \"#utility.yul\":8358:8360   */\n      0x20\n        /* \"#utility.yul\":8347:8356   */\n      dup3\n        /* \"#utility.yul\":8343:8361   */\n      add\n        /* \"#utility.yul\":8335:8361   */\n      swap1\n      pop\n        /* \"#utility.yul\":8407:8416   */\n      dup2\n        /* \"#utility.yul\":8401:8405   */\n      dup2\n        /* \"#utility.yul\":8397:8417   */\n      sub\n        /* \"#utility.yul\":8393:8394   */\n      0x00\n        /* \"#utility.yul\":8382:8391   */\n      dup4\n        /* \"#utility.yul\":8378:8395   */\n      add\n        /* \"#utility.yul\":8371:8418   */\n      mstore\n        /* \"#utility.yul\":8435:8566   */\n      tag_259\n        /* \"#utility.yul\":8561:8565   */\n      dup2\n        /* \"#utility.yul\":8435:8566   */\n      tag_167\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8427:8566   */\n      swap1\n      pop\n        /* \"#utility.yul\":8154:8573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8579:8911   */\n    tag_117:\n        /* \"#utility.yul\":8700:8704   */\n      0x00\n        /* \"#utility.yul\":8738:8740   */\n      0x40\n        /* \"#utility.yul\":8727:8736   */\n      dup3\n        /* \"#utility.yul\":8723:8741   */\n      add\n        /* \"#utility.yul\":8715:8741   */\n      swap1\n      pop\n        /* \"#utility.yul\":8751:8822   */\n      tag_261\n        /* \"#utility.yul\":8819:8820   */\n      0x00\n        /* \"#utility.yul\":8808:8817   */\n      dup4\n        /* \"#utility.yul\":8804:8821   */\n      add\n        /* \"#utility.yul\":8795:8801   */\n      dup6\n        /* \"#utility.yul\":8751:8822   */\n      tag_155\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8832:8904   */\n      tag_262\n        /* \"#utility.yul\":8900:8902   */\n      0x20\n        /* \"#utility.yul\":8889:8898   */\n      dup4\n        /* \"#utility.yul\":8885:8903   */\n      add\n        /* \"#utility.yul\":8876:8882   */\n      dup5\n        /* \"#utility.yul\":8832:8904   */\n      tag_156\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8579:8911   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122086d646c8ef1c33404ad15e30bb22109fc236fb4b829cd8ab4b0a78267d539c4364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_952": {
									"entryPoint": null,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:7",
										"nodeType": "YulBlock",
										"src": "0:590:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:7",
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nativeSrc": "62:65:7",
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:7",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nativeSrc": "73:54:7",
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nativeSrc": "184:51:7",
													"nodeType": "YulBlock",
													"src": "184:51:7",
													"statements": [
														{
															"nativeSrc": "194:35:7",
															"nodeType": "YulAssignment",
															"src": "194:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:7"
																},
																"nativeSrc": "205:24:7",
																"nodeType": "YulFunctionCall",
																"src": "205:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:7",
														"nodeType": "YulTypedName",
														"src": "166:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:7",
														"nodeType": "YulTypedName",
														"src": "176:7:7",
														"type": ""
													}
												],
												"src": "139:96:7"
											},
											{
												"body": {
													"nativeSrc": "306:53:7",
													"nodeType": "YulBlock",
													"src": "306:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:7"
																		},
																		"nativeSrc": "328:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:7"
																},
																"nativeSrc": "316:37:7",
																"nodeType": "YulFunctionCall",
																"src": "316:37:7"
															},
															"nativeSrc": "316:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:7",
														"nodeType": "YulTypedName",
														"src": "294:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:7",
														"nodeType": "YulTypedName",
														"src": "301:3:7",
														"type": ""
													}
												],
												"src": "241:118:7"
											},
											{
												"body": {
													"nativeSrc": "463:124:7",
													"nodeType": "YulBlock",
													"src": "463:124:7",
													"statements": [
														{
															"nativeSrc": "473:26:7",
															"nodeType": "YulAssignment",
															"src": "473:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "496:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:7"
																},
																"nativeSrc": "481:18:7",
																"nodeType": "YulFunctionCall",
																"src": "481:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:7",
																				"nodeType": "YulLiteral",
																				"src": "577:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:7"
																		},
																		"nativeSrc": "562:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:7"
																},
																"nativeSrc": "509:71:7",
																"nodeType": "YulFunctionCall",
																"src": "509:71:7"
															},
															"nativeSrc": "509:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:7",
														"nodeType": "YulTypedName",
														"src": "435:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:7",
														"nodeType": "YulTypedName",
														"src": "447:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:7",
														"nodeType": "YulTypedName",
														"src": "458:4:7",
														"type": ""
													}
												],
												"src": "365:222:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b6110a2806101bc5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063bfd7e00d1161006f578063bfd7e00d14610129578063cbc7854e14610159578063d21220a714610175578063df791e5014610193578063f2fde38b146101af578063f7888aec146101cb576100a7565b8063095ea7b3146100ab57806325be124e146100c757806356688700146100e5578063715018a6146101015780638da5cb5b1461010b575b5f80fd5b6100c560048036038101906100c09190610c7f565b6101fb565b005b6100cf610315565b6040516100dc9190610ccc565b60405180910390f35b6100ff60048036038101906100fa9190610c7f565b61033a565b005b6101096103c4565b005b6101136103d7565b6040516101209190610ccc565b60405180910390f35b610143600480360381019061013e9190610ce5565b6103fe565b6040516101509190610d44565b60405180910390f35b610173600480360381019061016e9190610d5d565b61050d565b005b61017d610599565b60405161018a9190610ccc565b60405180910390f35b6101ad60048036038101906101a89190610ce5565b6105be565b005b6101c960048036038101906101c49190610d9b565b61099a565b005b6101e560048036038101906101e09190610d5d565b610a1e565b6040516101f29190610d44565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1f21c673384846040518463ffffffff1660e01b815260040161025993929190610dc6565b5f604051808303815f87803b158015610270575f80fd5b505af1158015610282573d5f803e3d5ffd5b5050505060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1f21c673384846040518463ffffffff1660e01b81526004016102e493929190610dc6565b5f604051808303815f87803b1580156102fb575f80fd5b505af115801561030d573d5f803e3d5ffd5b505050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610342610a9f565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161037f93929190610dc6565b6020604051808303815f875af115801561039b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103bf9190610e30565b505050565b6103cc610a9f565b6103d55f610b26565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104389190610ccc565b602060405180830381865afa158015610453573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104779190610e6f565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b09190610ccc565b602060405180830381865afa1580156104cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ef9190610e6f565b836104fa9190610ec7565b6105049190610f35565b90509392505050565b610515610a9f565b8160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015610666575060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80610715575060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015610714575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b5b610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90610fbf565b60405180910390fd5b808373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161078e9190610ccc565b602060405180830381865afa1580156107a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107cd9190610e6f565b101561080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590611027565b60405180910390fd5b5f61081a8484846103fe565b90508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161085993929190610dc6565b6020604051808303815f875af1158015610875573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108999190610e30565b508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016108d5929190611045565b6020604051808303815f875af11580156108f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109159190610e30565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161095393929190610dc6565b6020604051808303815f875af115801561096f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109939190610e30565b5050505050565b6109a2610a9f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a12575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a099190610ccc565b60405180910390fd5b610a1b81610b26565b50565b5f8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610a589190610ccc565b602060405180830381865afa158015610a73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a979190610e6f565b905092915050565b610aa7610be7565b73ffffffffffffffffffffffffffffffffffffffff16610ac56103d7565b73ffffffffffffffffffffffffffffffffffffffff1614610b2457610ae8610be7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b1b9190610ccc565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1b82610bf2565b9050919050565b610c2b81610c11565b8114610c35575f80fd5b50565b5f81359050610c4681610c22565b92915050565b5f819050919050565b610c5e81610c4c565b8114610c68575f80fd5b50565b5f81359050610c7981610c55565b92915050565b5f8060408385031215610c9557610c94610bee565b5b5f610ca285828601610c38565b9250506020610cb385828601610c6b565b9150509250929050565b610cc681610c11565b82525050565b5f602082019050610cdf5f830184610cbd565b92915050565b5f805f60608486031215610cfc57610cfb610bee565b5b5f610d0986828701610c38565b9350506020610d1a86828701610c38565b9250506040610d2b86828701610c6b565b9150509250925092565b610d3e81610c4c565b82525050565b5f602082019050610d575f830184610d35565b92915050565b5f8060408385031215610d7357610d72610bee565b5b5f610d8085828601610c38565b9250506020610d9185828601610c38565b9150509250929050565b5f60208284031215610db057610daf610bee565b5b5f610dbd84828501610c38565b91505092915050565b5f606082019050610dd95f830186610cbd565b610de66020830185610cbd565b610df36040830184610d35565b949350505050565b5f8115159050919050565b610e0f81610dfb565b8114610e19575f80fd5b50565b5f81519050610e2a81610e06565b92915050565b5f60208284031215610e4557610e44610bee565b5b5f610e5284828501610e1c565b91505092915050565b5f81519050610e6981610c55565b92915050565b5f60208284031215610e8457610e83610bee565b5b5f610e9184828501610e5b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ed182610c4c565b9150610edc83610c4c565b9250828202610eea81610c4c565b91508282048414831517610f0157610f00610e9a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f3f82610c4c565b9150610f4a83610c4c565b925082610f5a57610f59610f08565b5b828204905092915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e730000000000000000000000000000000000005f82015250565b5f610fa9600e83610f65565b9150610fb482610f75565b602082019050919050565b5f6020820190508181035f830152610fd681610f9d565b9050919050565b7f4e6f7420656e6f75676820746f207377617000000000000000000000000000005f82015250565b5f611011601283610f65565b915061101c82610fdd565b602082019050919050565b5f6020820190508181035f83015261103e81611005565b9050919050565b5f6040820190506110585f830185610cbd565b6110656020830184610d35565b939250505056fea264697066735822122086d646c8ef1c33404ad15e30bb22109fc236fb4b829cd8ab4b0a78267d539c4364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A2 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBFD7E00D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBFD7E00D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xCBC7854E EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x1CB JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x25BE124E EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCF PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x3C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE1F21C67 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x282 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE1F21C67 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x342 PUSH2 0xA9F JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3CC PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x3D5 PUSH0 PUSH2 0xB26 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST DUP4 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x515 PUSH2 0xA9F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x666 JUMPI POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x715 JUMPI POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x714 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST LT ISZERO PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x81A DUP5 DUP5 DUP5 PUSH2 0x3FE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x915 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x953 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A2 PUSH2 0xA9F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1B DUP2 PUSH2 0xB26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0xBE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC5 PUSH2 0x3D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB24 JUMPI PUSH2 0xAE8 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC1B DUP3 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2B DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP2 EQ PUSH2 0xC35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC46 DUP2 PUSH2 0xC22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5E DUP2 PUSH2 0xC4C JUMP JUMPDEST DUP2 EQ PUSH2 0xC68 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC79 DUP2 PUSH2 0xC55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCA2 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB3 DUP6 DUP3 DUP7 ADD PUSH2 0xC6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDF PUSH0 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD09 DUP7 DUP3 DUP8 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD1A DUP7 DUP3 DUP8 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD2B DUP7 DUP3 DUP8 ADD PUSH2 0xC6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xD3E DUP2 PUSH2 0xC4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD57 PUSH0 DUP4 ADD DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH2 0xD72 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD80 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD91 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBD DUP5 DUP3 DUP6 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDD9 PUSH0 DUP4 ADD DUP7 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xDE6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xDF3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0F DUP2 PUSH2 0xDFB JUMP JUMPDEST DUP2 EQ PUSH2 0xE19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE2A DUP2 PUSH2 0xE06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH2 0xE44 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE52 DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE69 DUP2 PUSH2 0xC55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE84 JUMPI PUSH2 0xE83 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE91 DUP5 DUP3 DUP6 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xED1 DUP3 PUSH2 0xC4C JUMP JUMPDEST SWAP2 POP PUSH2 0xEDC DUP4 PUSH2 0xC4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEEA DUP2 PUSH2 0xC4C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF01 JUMPI PUSH2 0xF00 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF3F DUP3 PUSH2 0xC4C JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP4 PUSH2 0xC4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF5A JUMPI PUSH2 0xF59 PUSH2 0xF08 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E73000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFA9 PUSH1 0xE DUP4 PUSH2 0xF65 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB4 DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFD6 DUP2 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F20737761700000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1011 PUSH1 0x12 DUP4 PUSH2 0xF65 JUMP JUMPDEST SWAP2 POP PUSH2 0x101C DUP3 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x103E DUP2 PUSH2 0x1005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1058 PUSH0 DUP4 ADD DUP6 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0x1065 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xD6 CHAINID 0xC8 0xEF SHR CALLER BLOCKHASH BLOBBASEFEE 0xD1 MCOPY ADDRESS 0xBB 0x22 LT SWAP16 0xC2 CALLDATASIZE 0xFB 0x4B DUP3 SWAP13 0xD8 0xAB 0x4B EXP PUSH25 0x267D539C4364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "1563:1580:6:-:0;;;1713:36;;;;;;;;;;1735:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1563:1580:6;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;1563:1580:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2719,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3047,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2854,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_993": {
									"entryPoint": 826,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approve_1146": {
									"entryPoint": 507,
									"id": 1146,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1163": {
									"entryPoint": 2590,
									"id": 1163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getSwapPrice_1118": {
									"entryPoint": 1022,
									"id": 1118,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 983,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 964,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTokens_970": {
									"entryPoint": 1293,
									"id": 970,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swap_1082": {
									"entryPoint": 1470,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token1_942": {
									"entryPoint": 1433,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token2_944": {
									"entryPoint": 789,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2458,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8914:7",
										"nodeType": "YulBlock",
										"src": "0:8914:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "886:32:7",
													"nodeType": "YulBlock",
													"src": "886:32:7",
													"statements": [
														{
															"nativeSrc": "896:16:7",
															"nodeType": "YulAssignment",
															"src": "896:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:7",
																"nodeType": "YulIdentifier",
																"src": "907:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:7",
														"nodeType": "YulTypedName",
														"src": "868:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:7",
														"nodeType": "YulTypedName",
														"src": "878:7:7",
														"type": ""
													}
												],
												"src": "841:77:7"
											},
											{
												"body": {
													"nativeSrc": "967:79:7",
													"nodeType": "YulBlock",
													"src": "967:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:7",
																"nodeType": "YulBlock",
																"src": "1024:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:7"
																			},
																			"nativeSrc": "1026:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:7"
																		},
																		"nativeSrc": "1026:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:7"
																				},
																				"nativeSrc": "997:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:7"
																		},
																		"nativeSrc": "987:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:7"
																},
																"nativeSrc": "980:43:7",
																"nodeType": "YulFunctionCall",
																"src": "980:43:7"
															},
															"nativeSrc": "977:63:7",
															"nodeType": "YulIf",
															"src": "977:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:7",
														"nodeType": "YulTypedName",
														"src": "960:5:7",
														"type": ""
													}
												],
												"src": "924:122:7"
											},
											{
												"body": {
													"nativeSrc": "1104:87:7",
													"nodeType": "YulBlock",
													"src": "1104:87:7",
													"statements": [
														{
															"nativeSrc": "1114:29:7",
															"nodeType": "YulAssignment",
															"src": "1114:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:7"
																},
																"nativeSrc": "1123:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:7"
																},
																"nativeSrc": "1152:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:7"
															},
															"nativeSrc": "1152:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:7",
														"nodeType": "YulTypedName",
														"src": "1082:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:7",
														"nodeType": "YulTypedName",
														"src": "1090:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:7",
														"nodeType": "YulTypedName",
														"src": "1098:5:7",
														"type": ""
													}
												],
												"src": "1052:139:7"
											},
											{
												"body": {
													"nativeSrc": "1280:391:7",
													"nodeType": "YulBlock",
													"src": "1280:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:7",
																"nodeType": "YulBlock",
																"src": "1326:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:7"
																			},
																			"nativeSrc": "1328:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:7"
																		},
																		"nativeSrc": "1328:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:7"
																		},
																		"nativeSrc": "1297:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:7"
																},
																"nativeSrc": "1293:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:7"
															},
															"nativeSrc": "1290:119:7",
															"nodeType": "YulIf",
															"src": "1290:119:7"
														},
														{
															"nativeSrc": "1419:117:7",
															"nodeType": "YulBlock",
															"src": "1419:117:7",
															"statements": [
																{
																	"nativeSrc": "1434:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:7"
																				},
																				"nativeSrc": "1494:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:7"
																		},
																		"nativeSrc": "1473:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:7",
															"nodeType": "YulBlock",
															"src": "1546:118:7",
															"statements": [
																{
																	"nativeSrc": "1561:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:7"
																				},
																				"nativeSrc": "1622:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:7"
																		},
																		"nativeSrc": "1601:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:7",
														"nodeType": "YulTypedName",
														"src": "1242:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:7",
														"nodeType": "YulTypedName",
														"src": "1253:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:7",
														"nodeType": "YulTypedName",
														"src": "1265:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:7",
														"nodeType": "YulTypedName",
														"src": "1273:6:7",
														"type": ""
													}
												],
												"src": "1197:474:7"
											},
											{
												"body": {
													"nativeSrc": "1742:53:7",
													"nodeType": "YulBlock",
													"src": "1742:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1764:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:7"
																		},
																		"nativeSrc": "1764:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:7"
																},
																"nativeSrc": "1752:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:7"
															},
															"nativeSrc": "1752:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1677:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:7",
														"nodeType": "YulTypedName",
														"src": "1730:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:7",
														"nodeType": "YulTypedName",
														"src": "1737:3:7",
														"type": ""
													}
												],
												"src": "1677:118:7"
											},
											{
												"body": {
													"nativeSrc": "1899:124:7",
													"nodeType": "YulBlock",
													"src": "1899:124:7",
													"statements": [
														{
															"nativeSrc": "1909:26:7",
															"nodeType": "YulAssignment",
															"src": "1909:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:7"
																},
																"nativeSrc": "1917:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:7"
																		},
																		"nativeSrc": "1998:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1945:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:7"
																},
																"nativeSrc": "1945:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:7"
															},
															"nativeSrc": "1945:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1801:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:7",
														"nodeType": "YulTypedName",
														"src": "1871:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:7",
														"nodeType": "YulTypedName",
														"src": "1883:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:7",
														"nodeType": "YulTypedName",
														"src": "1894:4:7",
														"type": ""
													}
												],
												"src": "1801:222:7"
											},
											{
												"body": {
													"nativeSrc": "2129:519:7",
													"nodeType": "YulBlock",
													"src": "2129:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2175:83:7",
																"nodeType": "YulBlock",
																"src": "2175:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2177:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2177:77:7"
																			},
																			"nativeSrc": "2177:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2177:79:7"
																		},
																		"nativeSrc": "2177:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2177:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2150:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2150:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2159:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2159:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2146:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2146:3:7"
																		},
																		"nativeSrc": "2146:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2146:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2171:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2142:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2142:3:7"
																},
																"nativeSrc": "2142:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2142:32:7"
															},
															"nativeSrc": "2139:119:7",
															"nodeType": "YulIf",
															"src": "2139:119:7"
														},
														{
															"nativeSrc": "2268:117:7",
															"nodeType": "YulBlock",
															"src": "2268:117:7",
															"statements": [
																{
																	"nativeSrc": "2283:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2283:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2297:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2297:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2287:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2287:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2312:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2312:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2347:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2347:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2358:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2358:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2343:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2343:3:7"
																				},
																				"nativeSrc": "2343:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2343:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2367:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2367:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2322:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2322:20:7"
																		},
																		"nativeSrc": "2322:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2312:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2312:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2395:118:7",
															"nodeType": "YulBlock",
															"src": "2395:118:7",
															"statements": [
																{
																	"nativeSrc": "2410:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2410:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2424:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2424:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2414:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2414:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2440:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2440:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2475:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2475:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2486:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2486:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2471:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2471:3:7"
																				},
																				"nativeSrc": "2471:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2471:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2495:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2495:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2450:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2450:20:7"
																		},
																		"nativeSrc": "2450:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2450:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2440:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2440:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2523:118:7",
															"nodeType": "YulBlock",
															"src": "2523:118:7",
															"statements": [
																{
																	"nativeSrc": "2538:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2538:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2552:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2552:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2542:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2542:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2568:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2568:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2603:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2603:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2614:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2614:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2599:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2599:3:7"
																				},
																				"nativeSrc": "2599:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2599:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2623:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2623:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2578:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2578:20:7"
																		},
																		"nativeSrc": "2578:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2578:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2568:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2568:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2029:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2083:9:7",
														"nodeType": "YulTypedName",
														"src": "2083:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2094:7:7",
														"nodeType": "YulTypedName",
														"src": "2094:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2106:6:7",
														"nodeType": "YulTypedName",
														"src": "2106:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2114:6:7",
														"nodeType": "YulTypedName",
														"src": "2114:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2122:6:7",
														"nodeType": "YulTypedName",
														"src": "2122:6:7",
														"type": ""
													}
												],
												"src": "2029:619:7"
											},
											{
												"body": {
													"nativeSrc": "2719:53:7",
													"nodeType": "YulBlock",
													"src": "2719:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2736:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2736:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2759:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2759:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2741:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2741:17:7"
																		},
																		"nativeSrc": "2741:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2741:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2729:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:7"
																},
																"nativeSrc": "2729:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2729:37:7"
															},
															"nativeSrc": "2729:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2729:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2654:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2707:5:7",
														"nodeType": "YulTypedName",
														"src": "2707:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2714:3:7",
														"nodeType": "YulTypedName",
														"src": "2714:3:7",
														"type": ""
													}
												],
												"src": "2654:118:7"
											},
											{
												"body": {
													"nativeSrc": "2876:124:7",
													"nodeType": "YulBlock",
													"src": "2876:124:7",
													"statements": [
														{
															"nativeSrc": "2886:26:7",
															"nodeType": "YulAssignment",
															"src": "2886:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2898:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2898:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2894:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:7"
																},
																"nativeSrc": "2894:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2894:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2886:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2886:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2966:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2966:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2979:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2979:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2990:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2990:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2975:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:7"
																		},
																		"nativeSrc": "2975:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2922:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2922:43:7"
																},
																"nativeSrc": "2922:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2922:71:7"
															},
															"nativeSrc": "2922:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2922:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2778:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2848:9:7",
														"nodeType": "YulTypedName",
														"src": "2848:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2871:4:7",
														"nodeType": "YulTypedName",
														"src": "2871:4:7",
														"type": ""
													}
												],
												"src": "2778:222:7"
											},
											{
												"body": {
													"nativeSrc": "3089:391:7",
													"nodeType": "YulBlock",
													"src": "3089:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3135:83:7",
																"nodeType": "YulBlock",
																"src": "3135:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3137:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3137:77:7"
																			},
																			"nativeSrc": "3137:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3137:79:7"
																		},
																		"nativeSrc": "3137:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3137:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3110:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3110:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3119:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3119:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3106:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3106:3:7"
																		},
																		"nativeSrc": "3106:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3106:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3131:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3131:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3102:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3102:3:7"
																},
																"nativeSrc": "3102:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3102:32:7"
															},
															"nativeSrc": "3099:119:7",
															"nodeType": "YulIf",
															"src": "3099:119:7"
														},
														{
															"nativeSrc": "3228:117:7",
															"nodeType": "YulBlock",
															"src": "3228:117:7",
															"statements": [
																{
																	"nativeSrc": "3243:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3243:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3257:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3257:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3247:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3247:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3272:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3272:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3307:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3307:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3318:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3318:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3303:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3303:3:7"
																				},
																				"nativeSrc": "3303:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3303:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3327:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3327:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3282:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3282:20:7"
																		},
																		"nativeSrc": "3282:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3272:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3272:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3355:118:7",
															"nodeType": "YulBlock",
															"src": "3355:118:7",
															"statements": [
																{
																	"nativeSrc": "3370:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3370:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3384:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3384:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3374:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3374:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3400:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3400:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3435:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3435:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3446:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3446:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3431:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3431:3:7"
																				},
																				"nativeSrc": "3431:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3455:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3455:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3410:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3410:20:7"
																		},
																		"nativeSrc": "3410:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3400:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3400:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3006:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3051:9:7",
														"nodeType": "YulTypedName",
														"src": "3051:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3062:7:7",
														"nodeType": "YulTypedName",
														"src": "3062:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3074:6:7",
														"nodeType": "YulTypedName",
														"src": "3074:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3082:6:7",
														"nodeType": "YulTypedName",
														"src": "3082:6:7",
														"type": ""
													}
												],
												"src": "3006:474:7"
											},
											{
												"body": {
													"nativeSrc": "3552:263:7",
													"nodeType": "YulBlock",
													"src": "3552:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3598:83:7",
																"nodeType": "YulBlock",
																"src": "3598:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3600:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3600:77:7"
																			},
																			"nativeSrc": "3600:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3600:79:7"
																		},
																		"nativeSrc": "3600:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3573:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3573:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3582:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3582:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3569:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:7"
																		},
																		"nativeSrc": "3569:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3569:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3565:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:7"
																},
																"nativeSrc": "3565:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3565:32:7"
															},
															"nativeSrc": "3562:119:7",
															"nodeType": "YulIf",
															"src": "3562:119:7"
														},
														{
															"nativeSrc": "3691:117:7",
															"nodeType": "YulBlock",
															"src": "3691:117:7",
															"statements": [
																{
																	"nativeSrc": "3706:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3706:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3720:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3720:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3710:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3710:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3735:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3735:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3770:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3770:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3781:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3781:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3766:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3766:3:7"
																				},
																				"nativeSrc": "3766:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3766:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3790:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3790:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3745:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3745:20:7"
																		},
																		"nativeSrc": "3745:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3735:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3735:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3486:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3522:9:7",
														"nodeType": "YulTypedName",
														"src": "3522:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3533:7:7",
														"nodeType": "YulTypedName",
														"src": "3533:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"src": "3486:329:7"
											},
											{
												"body": {
													"nativeSrc": "3975:288:7",
													"nodeType": "YulBlock",
													"src": "3975:288:7",
													"statements": [
														{
															"nativeSrc": "3985:26:7",
															"nodeType": "YulAssignment",
															"src": "3985:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3997:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3997:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4008:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3993:3:7"
																},
																"nativeSrc": "3993:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3993:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3985:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3985:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4065:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4065:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4089:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4089:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4074:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:7"
																		},
																		"nativeSrc": "4074:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4074:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4021:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4021:43:7"
																},
																"nativeSrc": "4021:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4021:71:7"
															},
															"nativeSrc": "4021:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4021:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4146:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4146:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4159:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4170:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4170:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4155:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:7"
																		},
																		"nativeSrc": "4155:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4155:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4102:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4102:43:7"
																},
																"nativeSrc": "4102:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4102:72:7"
															},
															"nativeSrc": "4102:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4102:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4228:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4228:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4241:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4241:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4252:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4252:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4237:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4237:3:7"
																		},
																		"nativeSrc": "4237:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4237:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4184:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4184:43:7"
																},
																"nativeSrc": "4184:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4184:72:7"
															},
															"nativeSrc": "4184:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4184:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3821:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3931:9:7",
														"nodeType": "YulTypedName",
														"src": "3931:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3943:6:7",
														"nodeType": "YulTypedName",
														"src": "3943:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3951:6:7",
														"nodeType": "YulTypedName",
														"src": "3951:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3959:6:7",
														"nodeType": "YulTypedName",
														"src": "3959:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3970:4:7",
														"nodeType": "YulTypedName",
														"src": "3970:4:7",
														"type": ""
													}
												],
												"src": "3821:442:7"
											},
											{
												"body": {
													"nativeSrc": "4311:48:7",
													"nodeType": "YulBlock",
													"src": "4311:48:7",
													"statements": [
														{
															"nativeSrc": "4321:32:7",
															"nodeType": "YulAssignment",
															"src": "4321:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4346:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:7"
																		},
																		"nativeSrc": "4339:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4339:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4332:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4332:6:7"
																},
																"nativeSrc": "4332:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4332:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4321:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4321:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4269:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4293:5:7",
														"nodeType": "YulTypedName",
														"src": "4293:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4303:7:7",
														"nodeType": "YulTypedName",
														"src": "4303:7:7",
														"type": ""
													}
												],
												"src": "4269:90:7"
											},
											{
												"body": {
													"nativeSrc": "4405:76:7",
													"nodeType": "YulBlock",
													"src": "4405:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4459:16:7",
																"nodeType": "YulBlock",
																"src": "4459:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4468:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4468:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4471:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4471:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4461:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4461:6:7"
																			},
																			"nativeSrc": "4461:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4461:12:7"
																		},
																		"nativeSrc": "4461:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4461:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4428:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4428:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4450:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4450:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4435:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "4435:14:7"
																				},
																				"nativeSrc": "4435:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4435:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4425:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4425:2:7"
																		},
																		"nativeSrc": "4425:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4425:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4418:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nativeSrc": "4418:40:7",
																"nodeType": "YulFunctionCall",
																"src": "4418:40:7"
															},
															"nativeSrc": "4415:60:7",
															"nodeType": "YulIf",
															"src": "4415:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4365:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4398:5:7",
														"nodeType": "YulTypedName",
														"src": "4398:5:7",
														"type": ""
													}
												],
												"src": "4365:116:7"
											},
											{
												"body": {
													"nativeSrc": "4547:77:7",
													"nodeType": "YulBlock",
													"src": "4547:77:7",
													"statements": [
														{
															"nativeSrc": "4557:22:7",
															"nodeType": "YulAssignment",
															"src": "4557:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4572:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4572:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4566:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4566:5:7"
																},
																"nativeSrc": "4566:13:7",
																"nodeType": "YulFunctionCall",
																"src": "4566:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4557:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4557:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4612:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4612:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4588:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "4588:23:7"
																},
																"nativeSrc": "4588:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4588:30:7"
															},
															"nativeSrc": "4588:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4588:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4487:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4525:6:7",
														"nodeType": "YulTypedName",
														"src": "4525:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4533:3:7",
														"nodeType": "YulTypedName",
														"src": "4533:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4541:5:7",
														"nodeType": "YulTypedName",
														"src": "4541:5:7",
														"type": ""
													}
												],
												"src": "4487:137:7"
											},
											{
												"body": {
													"nativeSrc": "4704:271:7",
													"nodeType": "YulBlock",
													"src": "4704:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4750:83:7",
																"nodeType": "YulBlock",
																"src": "4750:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4752:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4752:77:7"
																			},
																			"nativeSrc": "4752:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4752:79:7"
																		},
																		"nativeSrc": "4752:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4752:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4725:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4725:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4734:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4734:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4721:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:7"
																		},
																		"nativeSrc": "4721:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4721:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4746:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4746:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4717:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4717:3:7"
																},
																"nativeSrc": "4717:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4717:32:7"
															},
															"nativeSrc": "4714:119:7",
															"nodeType": "YulIf",
															"src": "4714:119:7"
														},
														{
															"nativeSrc": "4843:125:7",
															"nodeType": "YulBlock",
															"src": "4843:125:7",
															"statements": [
																{
																	"nativeSrc": "4858:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4862:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4887:71:7",
																	"nodeType": "YulAssignment",
																	"src": "4887:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4930:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4930:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4941:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4941:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4926:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4926:3:7"
																				},
																				"nativeSrc": "4926:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4926:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4950:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4950:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4897:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4897:28:7"
																		},
																		"nativeSrc": "4897:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4897:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4887:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4887:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4630:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4674:9:7",
														"nodeType": "YulTypedName",
														"src": "4674:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4685:7:7",
														"nodeType": "YulTypedName",
														"src": "4685:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4697:6:7",
														"nodeType": "YulTypedName",
														"src": "4697:6:7",
														"type": ""
													}
												],
												"src": "4630:345:7"
											},
											{
												"body": {
													"nativeSrc": "5044:80:7",
													"nodeType": "YulBlock",
													"src": "5044:80:7",
													"statements": [
														{
															"nativeSrc": "5054:22:7",
															"nodeType": "YulAssignment",
															"src": "5054:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5069:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5069:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5063:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5063:5:7"
																},
																"nativeSrc": "5063:13:7",
																"nodeType": "YulFunctionCall",
																"src": "5063:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5054:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5054:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5112:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5112:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5085:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "5085:26:7"
																},
																"nativeSrc": "5085:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5085:33:7"
															},
															"nativeSrc": "5085:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5085:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4981:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5022:6:7",
														"nodeType": "YulTypedName",
														"src": "5022:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5030:3:7",
														"nodeType": "YulTypedName",
														"src": "5030:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5038:5:7",
														"nodeType": "YulTypedName",
														"src": "5038:5:7",
														"type": ""
													}
												],
												"src": "4981:143:7"
											},
											{
												"body": {
													"nativeSrc": "5207:274:7",
													"nodeType": "YulBlock",
													"src": "5207:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5253:83:7",
																"nodeType": "YulBlock",
																"src": "5253:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5255:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5255:77:7"
																			},
																			"nativeSrc": "5255:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5255:79:7"
																		},
																		"nativeSrc": "5255:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5255:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5237:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5237:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5224:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:7"
																		},
																		"nativeSrc": "5224:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5224:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5249:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5249:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5220:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5220:3:7"
																},
																"nativeSrc": "5220:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5220:32:7"
															},
															"nativeSrc": "5217:119:7",
															"nodeType": "YulIf",
															"src": "5217:119:7"
														},
														{
															"nativeSrc": "5346:128:7",
															"nodeType": "YulBlock",
															"src": "5346:128:7",
															"statements": [
																{
																	"nativeSrc": "5361:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5361:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5375:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5375:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5365:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5365:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5390:74:7",
																	"nodeType": "YulAssignment",
																	"src": "5390:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5436:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5436:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5447:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5447:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5432:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5432:3:7"
																				},
																				"nativeSrc": "5432:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5432:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5456:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5456:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5400:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "5400:31:7"
																		},
																		"nativeSrc": "5400:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5390:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5390:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5130:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5177:9:7",
														"nodeType": "YulTypedName",
														"src": "5177:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5188:7:7",
														"nodeType": "YulTypedName",
														"src": "5188:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5200:6:7",
														"nodeType": "YulTypedName",
														"src": "5200:6:7",
														"type": ""
													}
												],
												"src": "5130:351:7"
											},
											{
												"body": {
													"nativeSrc": "5515:152:7",
													"nodeType": "YulBlock",
													"src": "5515:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5532:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5532:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5535:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5535:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5525:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5525:6:7"
																},
																"nativeSrc": "5525:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5525:88:7"
															},
															"nativeSrc": "5525:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5525:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5629:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5632:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5632:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5622:6:7"
																},
																"nativeSrc": "5622:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5622:15:7"
															},
															"nativeSrc": "5622:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5622:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5653:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5653:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5656:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5656:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5646:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:7"
																},
																"nativeSrc": "5646:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5646:15:7"
															},
															"nativeSrc": "5646:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5646:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5487:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5487:180:7"
											},
											{
												"body": {
													"nativeSrc": "5721:362:7",
													"nodeType": "YulBlock",
													"src": "5721:362:7",
													"statements": [
														{
															"nativeSrc": "5731:25:7",
															"nodeType": "YulAssignment",
															"src": "5731:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5754:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5754:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5736:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5736:17:7"
																},
																"nativeSrc": "5736:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5736:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5731:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5731:1:7"
																}
															]
														},
														{
															"nativeSrc": "5765:25:7",
															"nodeType": "YulAssignment",
															"src": "5765:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5788:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5788:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5770:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5770:17:7"
																},
																"nativeSrc": "5770:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5770:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5765:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5765:1:7"
																}
															]
														},
														{
															"nativeSrc": "5799:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5799:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5822:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5822:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5825:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5825:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5818:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:7"
																},
																"nativeSrc": "5818:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5818:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5803:11:7",
																	"nodeType": "YulTypedName",
																	"src": "5803:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5836:41:7",
															"nodeType": "YulAssignment",
															"src": "5836:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5865:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "5865:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5847:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5847:17:7"
																},
																"nativeSrc": "5847:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5847:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5836:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5836:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6054:22:7",
																"nodeType": "YulBlock",
																"src": "6054:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6056:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6056:16:7"
																			},
																			"nativeSrc": "6056:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6056:18:7"
																		},
																		"nativeSrc": "6056:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6056:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5987:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5987:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5980:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5980:6:7"
																				},
																				"nativeSrc": "5980:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5980:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6010:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "6010:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6017:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "6017:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6026:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "6026:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6013:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6013:3:7"
																						},
																						"nativeSrc": "6013:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6013:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6007:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6007:2:7"
																				},
																				"nativeSrc": "6007:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6007:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5960:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5960:2:7"
																		},
																		"nativeSrc": "5960:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5960:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:7"
																},
																"nativeSrc": "5940:113:7",
																"nodeType": "YulFunctionCall",
																"src": "5940:113:7"
															},
															"nativeSrc": "5937:139:7",
															"nodeType": "YulIf",
															"src": "5937:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5673:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5704:1:7",
														"nodeType": "YulTypedName",
														"src": "5704:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5707:1:7",
														"nodeType": "YulTypedName",
														"src": "5707:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5713:7:7",
														"nodeType": "YulTypedName",
														"src": "5713:7:7",
														"type": ""
													}
												],
												"src": "5673:410:7"
											},
											{
												"body": {
													"nativeSrc": "6117:152:7",
													"nodeType": "YulBlock",
													"src": "6117:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6134:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6134:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6137:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6137:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6127:6:7"
																},
																"nativeSrc": "6127:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6127:88:7"
															},
															"nativeSrc": "6127:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6127:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6231:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6231:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6234:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6224:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:7"
																},
																"nativeSrc": "6224:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6224:15:7"
															},
															"nativeSrc": "6224:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6224:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6255:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6255:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6258:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6258:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6248:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6248:6:7"
																},
																"nativeSrc": "6248:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6248:15:7"
															},
															"nativeSrc": "6248:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6248:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6089:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6089:180:7"
											},
											{
												"body": {
													"nativeSrc": "6317:143:7",
													"nodeType": "YulBlock",
													"src": "6317:143:7",
													"statements": [
														{
															"nativeSrc": "6327:25:7",
															"nodeType": "YulAssignment",
															"src": "6327:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6350:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6350:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6332:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:17:7"
																},
																"nativeSrc": "6332:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6327:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6327:1:7"
																}
															]
														},
														{
															"nativeSrc": "6361:25:7",
															"nodeType": "YulAssignment",
															"src": "6361:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6384:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6384:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6366:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6366:17:7"
																},
																"nativeSrc": "6366:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6366:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6361:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6361:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6408:22:7",
																"nodeType": "YulBlock",
																"src": "6408:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6410:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6410:16:7"
																			},
																			"nativeSrc": "6410:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6410:18:7"
																		},
																		"nativeSrc": "6410:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6410:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6405:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6405:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6398:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:7"
																},
																"nativeSrc": "6398:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6398:9:7"
															},
															"nativeSrc": "6395:35:7",
															"nodeType": "YulIf",
															"src": "6395:35:7"
														},
														{
															"nativeSrc": "6440:14:7",
															"nodeType": "YulAssignment",
															"src": "6440:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6449:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6449:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6452:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6452:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6445:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6445:3:7"
																},
																"nativeSrc": "6445:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6445:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6440:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6440:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6275:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6306:1:7",
														"nodeType": "YulTypedName",
														"src": "6306:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6309:1:7",
														"nodeType": "YulTypedName",
														"src": "6309:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6315:1:7",
														"nodeType": "YulTypedName",
														"src": "6315:1:7",
														"type": ""
													}
												],
												"src": "6275:185:7"
											},
											{
												"body": {
													"nativeSrc": "6562:73:7",
													"nodeType": "YulBlock",
													"src": "6562:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6579:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6579:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6584:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6584:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6572:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6572:6:7"
																},
																"nativeSrc": "6572:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6572:19:7"
															},
															"nativeSrc": "6572:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "6572:19:7"
														},
														{
															"nativeSrc": "6600:29:7",
															"nodeType": "YulAssignment",
															"src": "6600:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6619:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6619:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6624:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6624:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6615:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:7"
																},
																"nativeSrc": "6615:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6615:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6600:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "6600:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6466:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6534:3:7",
														"nodeType": "YulTypedName",
														"src": "6534:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6539:6:7",
														"nodeType": "YulTypedName",
														"src": "6539:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6550:11:7",
														"nodeType": "YulTypedName",
														"src": "6550:11:7",
														"type": ""
													}
												],
												"src": "6466:169:7"
											},
											{
												"body": {
													"nativeSrc": "6747:58:7",
													"nodeType": "YulBlock",
													"src": "6747:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6769:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6769:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6777:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6777:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6765:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:7"
																		},
																		"nativeSrc": "6765:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6765:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "6781:16:7",
																		"nodeType": "YulLiteral",
																		"src": "6781:16:7",
																		"type": "",
																		"value": "Invalid tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6758:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:7"
																},
																"nativeSrc": "6758:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6758:40:7"
															},
															"nativeSrc": "6758:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "6758:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3",
												"nativeSrc": "6641:164:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6739:6:7",
														"nodeType": "YulTypedName",
														"src": "6739:6:7",
														"type": ""
													}
												],
												"src": "6641:164:7"
											},
											{
												"body": {
													"nativeSrc": "6957:220:7",
													"nodeType": "YulBlock",
													"src": "6957:220:7",
													"statements": [
														{
															"nativeSrc": "6967:74:7",
															"nodeType": "YulAssignment",
															"src": "6967:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7033:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7033:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7038:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7038:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6974:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6974:58:7"
																},
																"nativeSrc": "6974:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6974:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6967:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6967:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7139:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7139:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3",
																	"nativeSrc": "7050:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7050:88:7"
																},
																"nativeSrc": "7050:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7050:93:7"
															},
															"nativeSrc": "7050:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7050:93:7"
														},
														{
															"nativeSrc": "7152:19:7",
															"nodeType": "YulAssignment",
															"src": "7152:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7163:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7168:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7159:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7159:3:7"
																},
																"nativeSrc": "7159:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7152:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7152:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6811:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6945:3:7",
														"nodeType": "YulTypedName",
														"src": "6945:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6953:3:7",
														"nodeType": "YulTypedName",
														"src": "6953:3:7",
														"type": ""
													}
												],
												"src": "6811:366:7"
											},
											{
												"body": {
													"nativeSrc": "7354:248:7",
													"nodeType": "YulBlock",
													"src": "7354:248:7",
													"statements": [
														{
															"nativeSrc": "7364:26:7",
															"nodeType": "YulAssignment",
															"src": "7364:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7376:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7376:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7387:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7387:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7372:3:7"
																},
																"nativeSrc": "7372:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7372:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7364:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7364:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7411:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7411:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7422:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7422:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7407:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:7"
																		},
																		"nativeSrc": "7407:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7407:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7430:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7430:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7436:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7436:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:7"
																		},
																		"nativeSrc": "7426:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7426:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:7"
																},
																"nativeSrc": "7400:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7400:47:7"
															},
															"nativeSrc": "7400:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7400:47:7"
														},
														{
															"nativeSrc": "7456:139:7",
															"nodeType": "YulAssignment",
															"src": "7456:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7590:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7590:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7464:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7464:124:7"
																},
																"nativeSrc": "7464:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7464:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7456:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7456:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7183:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7334:9:7",
														"nodeType": "YulTypedName",
														"src": "7334:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7349:4:7",
														"nodeType": "YulTypedName",
														"src": "7349:4:7",
														"type": ""
													}
												],
												"src": "7183:419:7"
											},
											{
												"body": {
													"nativeSrc": "7714:62:7",
													"nodeType": "YulBlock",
													"src": "7714:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7736:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7736:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7744:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7744:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7732:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7732:3:7"
																		},
																		"nativeSrc": "7732:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7732:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f2073776170",
																		"kind": "string",
																		"nativeSrc": "7748:20:7",
																		"nodeType": "YulLiteral",
																		"src": "7748:20:7",
																		"type": "",
																		"value": "Not enough to swap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7725:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7725:6:7"
																},
																"nativeSrc": "7725:44:7",
																"nodeType": "YulFunctionCall",
																"src": "7725:44:7"
															},
															"nativeSrc": "7725:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "7725:44:7"
														}
													]
												},
												"name": "store_literal_in_memory_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc",
												"nativeSrc": "7608:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7706:6:7",
														"nodeType": "YulTypedName",
														"src": "7706:6:7",
														"type": ""
													}
												],
												"src": "7608:168:7"
											},
											{
												"body": {
													"nativeSrc": "7928:220:7",
													"nodeType": "YulBlock",
													"src": "7928:220:7",
													"statements": [
														{
															"nativeSrc": "7938:74:7",
															"nodeType": "YulAssignment",
															"src": "7938:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8004:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8004:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8009:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8009:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7945:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7945:58:7"
																},
																"nativeSrc": "7945:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7945:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7938:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8110:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8110:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc",
																	"nativeSrc": "8021:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8021:88:7"
																},
																"nativeSrc": "8021:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8021:93:7"
															},
															"nativeSrc": "8021:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8021:93:7"
														},
														{
															"nativeSrc": "8123:19:7",
															"nodeType": "YulAssignment",
															"src": "8123:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8134:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8134:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8139:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8130:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8130:3:7"
																},
																"nativeSrc": "8130:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8130:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8123:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7782:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7916:3:7",
														"nodeType": "YulTypedName",
														"src": "7916:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7924:3:7",
														"nodeType": "YulTypedName",
														"src": "7924:3:7",
														"type": ""
													}
												],
												"src": "7782:366:7"
											},
											{
												"body": {
													"nativeSrc": "8325:248:7",
													"nodeType": "YulBlock",
													"src": "8325:248:7",
													"statements": [
														{
															"nativeSrc": "8335:26:7",
															"nodeType": "YulAssignment",
															"src": "8335:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8347:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8347:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8358:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8343:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8343:3:7"
																},
																"nativeSrc": "8343:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8343:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8335:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8335:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8382:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8382:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8393:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8393:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8378:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8378:3:7"
																		},
																		"nativeSrc": "8378:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8378:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8401:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8401:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8407:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8407:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8397:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:7"
																		},
																		"nativeSrc": "8397:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8397:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8371:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8371:6:7"
																},
																"nativeSrc": "8371:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8371:47:7"
															},
															"nativeSrc": "8371:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8371:47:7"
														},
														{
															"nativeSrc": "8427:139:7",
															"nodeType": "YulAssignment",
															"src": "8427:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8561:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8561:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8435:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8435:124:7"
																},
																"nativeSrc": "8435:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8435:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8427:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8427:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8154:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8305:9:7",
														"nodeType": "YulTypedName",
														"src": "8305:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8320:4:7",
														"nodeType": "YulTypedName",
														"src": "8320:4:7",
														"type": ""
													}
												],
												"src": "8154:419:7"
											},
											{
												"body": {
													"nativeSrc": "8705:206:7",
													"nodeType": "YulBlock",
													"src": "8705:206:7",
													"statements": [
														{
															"nativeSrc": "8715:26:7",
															"nodeType": "YulAssignment",
															"src": "8715:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8727:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8727:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8738:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8738:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8723:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8723:3:7"
																},
																"nativeSrc": "8723:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8723:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8715:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8715:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8795:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8795:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8808:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8808:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8819:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8819:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8804:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8804:3:7"
																		},
																		"nativeSrc": "8804:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8804:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8751:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8751:43:7"
																},
																"nativeSrc": "8751:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8751:71:7"
															},
															"nativeSrc": "8751:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8751:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8876:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8876:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8889:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8889:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8900:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8900:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8885:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8885:3:7"
																		},
																		"nativeSrc": "8885:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8885:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8832:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8832:43:7"
																},
																"nativeSrc": "8832:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8832:72:7"
															},
															"nativeSrc": "8832:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8832:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8579:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8669:9:7",
														"nodeType": "YulTypedName",
														"src": "8669:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8681:6:7",
														"nodeType": "YulTypedName",
														"src": "8681:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8689:6:7",
														"nodeType": "YulTypedName",
														"src": "8689:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8700:4:7",
														"nodeType": "YulTypedName",
														"src": "8700:4:7",
														"type": ""
													}
												],
												"src": "8579:332:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough to swap\")\n\n    }\n\n    function abi_encode_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063bfd7e00d1161006f578063bfd7e00d14610129578063cbc7854e14610159578063d21220a714610175578063df791e5014610193578063f2fde38b146101af578063f7888aec146101cb576100a7565b8063095ea7b3146100ab57806325be124e146100c757806356688700146100e5578063715018a6146101015780638da5cb5b1461010b575b5f80fd5b6100c560048036038101906100c09190610c7f565b6101fb565b005b6100cf610315565b6040516100dc9190610ccc565b60405180910390f35b6100ff60048036038101906100fa9190610c7f565b61033a565b005b6101096103c4565b005b6101136103d7565b6040516101209190610ccc565b60405180910390f35b610143600480360381019061013e9190610ce5565b6103fe565b6040516101509190610d44565b60405180910390f35b610173600480360381019061016e9190610d5d565b61050d565b005b61017d610599565b60405161018a9190610ccc565b60405180910390f35b6101ad60048036038101906101a89190610ce5565b6105be565b005b6101c960048036038101906101c49190610d9b565b61099a565b005b6101e560048036038101906101e09190610d5d565b610a1e565b6040516101f29190610d44565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1f21c673384846040518463ffffffff1660e01b815260040161025993929190610dc6565b5f604051808303815f87803b158015610270575f80fd5b505af1158015610282573d5f803e3d5ffd5b5050505060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1f21c673384846040518463ffffffff1660e01b81526004016102e493929190610dc6565b5f604051808303815f87803b1580156102fb575f80fd5b505af115801561030d573d5f803e3d5ffd5b505050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610342610a9f565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161037f93929190610dc6565b6020604051808303815f875af115801561039b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103bf9190610e30565b505050565b6103cc610a9f565b6103d55f610b26565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104389190610ccc565b602060405180830381865afa158015610453573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104779190610e6f565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b09190610ccc565b602060405180830381865afa1580156104cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ef9190610e6f565b836104fa9190610ec7565b6105049190610f35565b90509392505050565b610515610a9f565b8160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015610666575060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80610715575060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015610714575060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b5b610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90610fbf565b60405180910390fd5b808373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161078e9190610ccc565b602060405180830381865afa1580156107a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107cd9190610e6f565b101561080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590611027565b60405180910390fd5b5f61081a8484846103fe565b90508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161085993929190610dc6565b6020604051808303815f875af1158015610875573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108999190610e30565b508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b81526004016108d5929190611045565b6020604051808303815f875af11580156108f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109159190610e30565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161095393929190610dc6565b6020604051808303815f875af115801561096f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109939190610e30565b5050505050565b6109a2610a9f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a12575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a099190610ccc565b60405180910390fd5b610a1b81610b26565b50565b5f8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610a589190610ccc565b602060405180830381865afa158015610a73573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a979190610e6f565b905092915050565b610aa7610be7565b73ffffffffffffffffffffffffffffffffffffffff16610ac56103d7565b73ffffffffffffffffffffffffffffffffffffffff1614610b2457610ae8610be7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b1b9190610ccc565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1b82610bf2565b9050919050565b610c2b81610c11565b8114610c35575f80fd5b50565b5f81359050610c4681610c22565b92915050565b5f819050919050565b610c5e81610c4c565b8114610c68575f80fd5b50565b5f81359050610c7981610c55565b92915050565b5f8060408385031215610c9557610c94610bee565b5b5f610ca285828601610c38565b9250506020610cb385828601610c6b565b9150509250929050565b610cc681610c11565b82525050565b5f602082019050610cdf5f830184610cbd565b92915050565b5f805f60608486031215610cfc57610cfb610bee565b5b5f610d0986828701610c38565b9350506020610d1a86828701610c38565b9250506040610d2b86828701610c6b565b9150509250925092565b610d3e81610c4c565b82525050565b5f602082019050610d575f830184610d35565b92915050565b5f8060408385031215610d7357610d72610bee565b5b5f610d8085828601610c38565b9250506020610d9185828601610c38565b9150509250929050565b5f60208284031215610db057610daf610bee565b5b5f610dbd84828501610c38565b91505092915050565b5f606082019050610dd95f830186610cbd565b610de66020830185610cbd565b610df36040830184610d35565b949350505050565b5f8115159050919050565b610e0f81610dfb565b8114610e19575f80fd5b50565b5f81519050610e2a81610e06565b92915050565b5f60208284031215610e4557610e44610bee565b5b5f610e5284828501610e1c565b91505092915050565b5f81519050610e6981610c55565b92915050565b5f60208284031215610e8457610e83610bee565b5b5f610e9184828501610e5b565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ed182610c4c565b9150610edc83610c4c565b9250828202610eea81610c4c565b91508282048414831517610f0157610f00610e9a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f3f82610c4c565b9150610f4a83610c4c565b925082610f5a57610f59610f08565b5b828204905092915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e730000000000000000000000000000000000005f82015250565b5f610fa9600e83610f65565b9150610fb482610f75565b602082019050919050565b5f6020820190508181035f830152610fd681610f9d565b9050919050565b7f4e6f7420656e6f75676820746f207377617000000000000000000000000000005f82015250565b5f611011601283610f65565b915061101c82610fdd565b602082019050919050565b5f6020820190508181035f83015261103e81611005565b9050919050565b5f6040820190506110585f830185610cbd565b6110656020830184610d35565b939250505056fea264697066735822122086d646c8ef1c33404ad15e30bb22109fc236fb4b829cd8ab4b0a78267d539c4364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBFD7E00D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBFD7E00D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xCBC7854E EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDF791E50 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x1CB JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x25BE124E EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCF PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x3C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE1F21C67 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x282 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE1F21C67 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x342 PUSH2 0xA9F JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3CC PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x3D5 PUSH0 PUSH2 0xB26 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST DUP4 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x504 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x515 PUSH2 0xA9F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x666 JUMPI POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x715 JUMPI POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x714 JUMPI POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP1 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST LT ISZERO PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x81A DUP5 DUP5 DUP5 PUSH2 0x3FE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x915 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x953 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A2 PUSH2 0xA9F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1B DUP2 PUSH2 0xB26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0xBE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC5 PUSH2 0x3D7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB24 JUMPI PUSH2 0xAE8 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC1B DUP3 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2B DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP2 EQ PUSH2 0xC35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC46 DUP2 PUSH2 0xC22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5E DUP2 PUSH2 0xC4C JUMP JUMPDEST DUP2 EQ PUSH2 0xC68 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC79 DUP2 PUSH2 0xC55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCA2 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB3 DUP6 DUP3 DUP7 ADD PUSH2 0xC6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC6 DUP2 PUSH2 0xC11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDF PUSH0 DUP4 ADD DUP5 PUSH2 0xCBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCFC JUMPI PUSH2 0xCFB PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD09 DUP7 DUP3 DUP8 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD1A DUP7 DUP3 DUP8 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD2B DUP7 DUP3 DUP8 ADD PUSH2 0xC6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xD3E DUP2 PUSH2 0xC4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD57 PUSH0 DUP4 ADD DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH2 0xD72 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD80 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD91 DUP6 DUP3 DUP7 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBD DUP5 DUP3 DUP6 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDD9 PUSH0 DUP4 ADD DUP7 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xDE6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xDF3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0F DUP2 PUSH2 0xDFB JUMP JUMPDEST DUP2 EQ PUSH2 0xE19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE2A DUP2 PUSH2 0xE06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH2 0xE44 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE52 DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE69 DUP2 PUSH2 0xC55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE84 JUMPI PUSH2 0xE83 PUSH2 0xBEE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE91 DUP5 DUP3 DUP6 ADD PUSH2 0xE5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xED1 DUP3 PUSH2 0xC4C JUMP JUMPDEST SWAP2 POP PUSH2 0xEDC DUP4 PUSH2 0xC4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEEA DUP2 PUSH2 0xC4C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF01 JUMPI PUSH2 0xF00 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF3F DUP3 PUSH2 0xC4C JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP4 PUSH2 0xC4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF5A JUMPI PUSH2 0xF59 PUSH2 0xF08 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E73000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFA9 PUSH1 0xE DUP4 PUSH2 0xF65 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB4 DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFD6 DUP2 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F20737761700000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1011 PUSH1 0x12 DUP4 PUSH2 0xF65 JUMP JUMPDEST SWAP2 POP PUSH2 0x101C DUP3 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x103E DUP2 PUSH2 0x1005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1058 PUSH0 DUP4 ADD DUP6 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0x1065 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD35 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xD6 CHAINID 0xC8 0xEF SHR CALLER BLOCKHASH BLOBBASEFEE 0xD1 MCOPY ADDRESS 0xBB 0x22 LT SWAP16 0xC2 CALLDATASIZE 0xFB 0x4B DUP3 SWAP13 0xD8 0xAB 0x4B EXP PUSH25 0x267D539C4364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "1563:1580:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1620:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2584:206:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1755:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1593:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2060:518;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:137:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2796:202;2878:6;;;;;;;;;;;2863:30;;;2894:10;2906:7;2915:6;2863:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2947:6;;;;;;;;;;;2932:30;;;2963:10;2975:7;2984:6;2932:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:202;;:::o;1620:21::-;;;;;;;;;;;;;:::o;1890:164::-;1531:13:0;:11;:13::i;:::-;1985::6::1;1978:34;;;2013:10;2033:4;2040:6;1978:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1890:164:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2584:206:6:-;2669:7;2752:4;2745:22;;;2776:4;2745:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2713:2;2706:20;;;2735:4;2706:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2697:6;:44;;;;:::i;:::-;2696:86;;;;:::i;:::-;2688:95;;2584:206;;;;;:::o;1755:129::-;1531:13:0;:11;:13::i;:::-;1844:7:6::1;1835:6;;:16;;;;;;;;;;;;;;;;;;1870:7;1861:6;;:16;;;;;;;;;;;;;;;;;;1755:129:::0;;:::o;1593:21::-;;;;;;;;;;;;;:::o;2060:518::-;2150:6;;;;;;;;;;;2142:14;;:4;:14;;;:30;;;;;2166:6;;;;;;;;;;;2160:12;;:2;:12;;;2142:30;2141:68;;;;2186:6;;;;;;;;;;;2178:14;;:4;:14;;;:30;;;;;2202:6;;;;;;;;;;;2196:12;;:2;:12;;;2178:30;2141:68;2133:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2284:6;2253:4;2246:22;;;2269:10;2246:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;2238:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2323:18;2344:30;2357:4;2363:2;2367:6;2344:12;:30::i;:::-;2323:51;;2391:4;2384:25;;;2410:10;2430:4;2437:6;2384:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2461:2;2454:18;;;2481:4;2488:10;2454:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2516:2;2509:23;;;2541:4;2548:10;2560;2509:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2123:455;2060:518;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3004:137:6:-;3076:7;3109:5;3102:23;;;3126:7;3102:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3095:39;;3004:137;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:619::-;2106:6;2114;2122;2171:2;2159:9;2150:7;2146:23;2142:32;2139:119;;;2177:79;;:::i;:::-;2139:119;2297:1;2322:53;2367:7;2358:6;2347:9;2343:22;2322:53;:::i;:::-;2312:63;;2268:117;2424:2;2450:53;2495:7;2486:6;2475:9;2471:22;2450:53;:::i;:::-;2440:63;;2395:118;2552:2;2578:53;2623:7;2614:6;2603:9;2599:22;2578:53;:::i;:::-;2568:63;;2523:118;2029:619;;;;;:::o;2654:118::-;2741:24;2759:5;2741:24;:::i;:::-;2736:3;2729:37;2654:118;;:::o;2778:222::-;2871:4;2909:2;2898:9;2894:18;2886:26;;2922:71;2990:1;2979:9;2975:17;2966:6;2922:71;:::i;:::-;2778:222;;;;:::o;3006:474::-;3074:6;3082;3131:2;3119:9;3110:7;3106:23;3102:32;3099:119;;;3137:79;;:::i;:::-;3099:119;3257:1;3282:53;3327:7;3318:6;3307:9;3303:22;3282:53;:::i;:::-;3272:63;;3228:117;3384:2;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;:::i;:::-;3400:63;;3355:118;3006:474;;;;;:::o;3486:329::-;3545:6;3594:2;3582:9;3573:7;3569:23;3565:32;3562:119;;;3600:79;;:::i;:::-;3562:119;3720:1;3745:53;3790:7;3781:6;3770:9;3766:22;3745:53;:::i;:::-;3735:63;;3691:117;3486:329;;;;:::o;3821:442::-;3970:4;4008:2;3997:9;3993:18;3985:26;;4021:71;4089:1;4078:9;4074:17;4065:6;4021:71;:::i;:::-;4102:72;4170:2;4159:9;4155:18;4146:6;4102:72;:::i;:::-;4184;4252:2;4241:9;4237:18;4228:6;4184:72;:::i;:::-;3821:442;;;;;;:::o;4269:90::-;4303:7;4346:5;4339:13;4332:21;4321:32;;4269:90;;;:::o;4365:116::-;4435:21;4450:5;4435:21;:::i;:::-;4428:5;4425:32;4415:60;;4471:1;4468;4461:12;4415:60;4365:116;:::o;4487:137::-;4541:5;4572:6;4566:13;4557:22;;4588:30;4612:5;4588:30;:::i;:::-;4487:137;;;;:::o;4630:345::-;4697:6;4746:2;4734:9;4725:7;4721:23;4717:32;4714:119;;;4752:79;;:::i;:::-;4714:119;4872:1;4897:61;4950:7;4941:6;4930:9;4926:22;4897:61;:::i;:::-;4887:71;;4843:125;4630:345;;;;:::o;4981:143::-;5038:5;5069:6;5063:13;5054:22;;5085:33;5112:5;5085:33;:::i;:::-;4981:143;;;;:::o;5130:351::-;5200:6;5249:2;5237:9;5228:7;5224:23;5220:32;5217:119;;;5255:79;;:::i;:::-;5217:119;5375:1;5400:64;5456:7;5447:6;5436:9;5432:22;5400:64;:::i;:::-;5390:74;;5346:128;5130:351;;;;:::o;5487:180::-;5535:77;5532:1;5525:88;5632:4;5629:1;5622:15;5656:4;5653:1;5646:15;5673:410;5713:7;5736:20;5754:1;5736:20;:::i;:::-;5731:25;;5770:20;5788:1;5770:20;:::i;:::-;5765:25;;5825:1;5822;5818:9;5847:30;5865:11;5847:30;:::i;:::-;5836:41;;6026:1;6017:7;6013:15;6010:1;6007:22;5987:1;5980:9;5960:83;5937:139;;6056:18;;:::i;:::-;5937:139;5721:362;5673:410;;;;:::o;6089:180::-;6137:77;6134:1;6127:88;6234:4;6231:1;6224:15;6258:4;6255:1;6248:15;6275:185;6315:1;6332:20;6350:1;6332:20;:::i;:::-;6327:25;;6366:20;6384:1;6366:20;:::i;:::-;6361:25;;6405:1;6395:35;;6410:18;;:::i;:::-;6395:35;6452:1;6449;6445:9;6440:14;;6275:185;;;;:::o;6466:169::-;6550:11;6584:6;6579:3;6572:19;6624:4;6619:3;6615:14;6600:29;;6466:169;;;;:::o;6641:164::-;6781:16;6777:1;6769:6;6765:14;6758:40;6641:164;:::o;6811:366::-;6953:3;6974:67;7038:2;7033:3;6974:67;:::i;:::-;6967:74;;7050:93;7139:3;7050:93;:::i;:::-;7168:2;7163:3;7159:12;7152:19;;6811:366;;;:::o;7183:419::-;7349:4;7387:2;7376:9;7372:18;7364:26;;7436:9;7430:4;7426:20;7422:1;7411:9;7407:17;7400:47;7464:131;7590:4;7464:131;:::i;:::-;7456:139;;7183:419;;;:::o;7608:168::-;7748:20;7744:1;7736:6;7732:14;7725:44;7608:168;:::o;7782:366::-;7924:3;7945:67;8009:2;8004:3;7945:67;:::i;:::-;7938:74;;8021:93;8110:3;8021:93;:::i;:::-;8139:2;8134:3;8130:12;8123:19;;7782:366;;;:::o;8154:419::-;8320:4;8358:2;8347:9;8343:18;8335:26;;8407:9;8401:4;8397:20;8393:1;8382:9;8378:17;8371:47;8435:131;8561:4;8435:131;:::i;:::-;8427:139;;8154:419;;;:::o;8579:332::-;8700:4;8738:2;8727:9;8723:18;8715:26;;8751:71;8819:1;8808:9;8804:17;8795:6;8751:71;:::i;:::-;8832:72;8900:2;8889:9;8885:18;8876:6;8832:72;:::i;:::-;8579:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "851600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(address,uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address,address)": "infinite",
								"getSwapPrice(address,address,uint256)": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"setTokens(address,address)": "infinite",
								"swap(address,address,uint256)": "infinite",
								"token1()": "2552",
								"token2()": "2531",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1563,
									"end": 3143,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1735,
									"end": 1745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 3143,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086d646c8ef1c33404ad15e30bb22109fc236fb4b829cd8ab4b0a78267d539c4364736f6c634300081a0033",
									".code": [
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "BFD7E00D"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "BFD7E00D"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "CBC7854E"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "D21220A7"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "DF791E50"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "F7888AEC"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "25BE124E"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "56688700"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 3143,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2796,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2796,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1620,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1890,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1890,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2584,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2584,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2584,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1755,
											"end": 1884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1593,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1593,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2060,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2060,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3004,
											"end": 3141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2863,
											"end": 2893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "E1F21C67"
										},
										{
											"begin": 2894,
											"end": 2904,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 2913,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2863,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2962,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2962,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2962,
											"name": "PUSH",
											"source": 6,
											"value": "E1F21C67"
										},
										{
											"begin": 2963,
											"end": 2973,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 2990,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2932,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 1998,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2013,
											"end": 2023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1978,
											"end": 2047,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2047,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1978,
											"end": 2047,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2756,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2767,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2767,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2745,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2745,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2726,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2726,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2726,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2706,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2706,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2706,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2697,
											"end": 2741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2697,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2697,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2696,
											"end": 2782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2696,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2782,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2696,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1835,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1861,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2142,
											"end": 2156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2142,
											"end": 2156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2156,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2141,
											"end": 2209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2208,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2209,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2141,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2133,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2133,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2269,
											"end": 2279,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2246,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2246,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2290,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2290,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2238,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2238,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2344,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2374,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2344,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2395,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2409,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2409,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2409,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2410,
											"end": 2420,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2434,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2384,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2384,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2472,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2472,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2472,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2498,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2454,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2454,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2532,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2532,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2532,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2541,
											"end": 2545,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2558,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2509,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2509,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3125,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3126,
											"end": 3133,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3102,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3102,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2648,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2029,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2159,
											"end": 2168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2139,
											"end": 2258,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2139,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2139,
											"end": 2258,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2177,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2177,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2177,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2139,
											"end": 2258,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2139,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2367,
											"end": 2374,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2356,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2322,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2375,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2322,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2375,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2426,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2495,
											"end": 2502,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2450,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2552,
											"end": 2554,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2623,
											"end": 2630,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 2612,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2578,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2631,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2578,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2648,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2648,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2648,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2741,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2922,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3480,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3006,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3117,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3129,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3218,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3099,
											"end": 3218,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3137,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3137,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3137,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3137,
											"end": 3216,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3137,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3218,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3099,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3327,
											"end": 3334,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3316,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3282,
											"end": 3335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3335,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3410,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3355,
											"end": 3473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3815,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3486,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3597,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3681,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3562,
											"end": 3681,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3600,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3600,
											"end": 3679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3679,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3600,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3681,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3562,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3790,
											"end": 3797,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3745,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3815,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3815,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4021,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4021,
											"end": 4092,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4021,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4159,
											"end": 4168,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4102,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4174,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4102,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4252,
											"end": 4254,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4228,
											"end": 4234,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4184,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 4263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4359,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4269,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4352,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4353,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4481,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4365,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4450,
											"end": 4455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4435,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4456,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4435,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4457,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4415,
											"end": 4475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4475,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4415,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4624,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4487,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4579,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4612,
											"end": 4617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4588,
											"end": 4618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4618,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4588,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4975,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4630,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4732,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4744,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4752,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4752,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4714,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4950,
											"end": 4957,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4926,
											"end": 4948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4897,
											"end": 4958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4958,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4897,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5124,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4981,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5069,
											"end": 5075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5076,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5112,
											"end": 5117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 5085,
											"end": 5118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5118,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5085,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5124,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5481,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5130,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5251,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5237,
											"end": 5246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5224,
											"end": 5247,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5220,
											"end": 5252,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5217,
											"end": 5336,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5217,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5217,
											"end": 5336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5255,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5255,
											"end": 5334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5255,
											"end": 5334,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5255,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5217,
											"end": 5336,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5217,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5400,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5456,
											"end": 5463,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5400,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5464,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5400,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5481,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5667,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5487,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5612,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5532,
											"end": 5533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5636,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5629,
											"end": 5630,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5622,
											"end": 5637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5661,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 6083,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5673,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5736,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5736,
											"end": 5756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5756,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5736,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5731,
											"end": 5756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5731,
											"end": 5756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5788,
											"end": 5789,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5770,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5790,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5770,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5823,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5865,
											"end": 5876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5847,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5877,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5847,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6029,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 5988,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5989,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 6043,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5937,
											"end": 6076,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6056,
											"end": 6074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 6076,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5937,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 6083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 6083,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 6083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 6083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 6083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 6083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6269,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6089,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6214,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6134,
											"end": 6135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6238,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6231,
											"end": 6232,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6224,
											"end": 6239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6258,
											"end": 6262,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6255,
											"end": 6256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6248,
											"end": 6263,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6460,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6275,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6332,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6384,
											"end": 6385,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6366,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6386,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6366,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6386,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6395,
											"end": 6430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6410,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6430,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6395,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6460,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6635,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6466,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6550,
											"end": 6561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6591,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6619,
											"end": 6622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6615,
											"end": 6629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6805,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6641,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6797,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420746F6B656E73000000000000000000000000000000000000"
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7177,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6811,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 7038,
											"end": 7040,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 7033,
											"end": 7036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6974,
											"end": 7041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7041,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6974,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 7041,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 7041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7139,
											"end": 7142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7050,
											"end": 7143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7143,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7050,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7602,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 7183,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7389,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7376,
											"end": 7385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7430,
											"end": 7434,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7446,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7422,
											"end": 7423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7420,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7590,
											"end": 7594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7464,
											"end": 7595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7595,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7464,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7456,
											"end": 7595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7456,
											"end": 7595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7183,
											"end": 7602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7776,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7608,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820746F20737761700000000000000000000000000000"
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7725,
											"end": 7769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 7776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8004,
											"end": 8007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7945,
											"end": 8012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8110,
											"end": 8113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 8021,
											"end": 8114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8139,
											"end": 8141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8130,
											"end": 8142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 8148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8154,
											"end": 8573,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 8154,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8347,
											"end": 8356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8407,
											"end": 8416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8393,
											"end": 8394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8391,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8561,
											"end": 8565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8435,
											"end": 8566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8566,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8435,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8154,
											"end": 8573,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8154,
											"end": 8573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8154,
											"end": 8573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8154,
											"end": 8573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 8579,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8700,
											"end": 8704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8727,
											"end": 8736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8819,
											"end": 8820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8808,
											"end": 8817,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8801,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 8751,
											"end": 8822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 8822,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8751,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8900,
											"end": 8902,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8889,
											"end": 8898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 8882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8832,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8904,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8832,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8911,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8911,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"src/level22.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,uint256)": "56688700",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address,address)": "f7888aec",
							"getSwapPrice(address,address,uint256)": "bfd7e00d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setTokens(address,address)": "cbc7854e",
							"swap(address,address,uint256)": "df791e50",
							"token1()": "d21220a7",
							"token2()": "25be124e",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSwapPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token2\",\"type\":\"address\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/level22.sol\":\"Dex\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/level22.sol\":{\"keccak256\":\"0x6a0332e4e92b1d079c7667fe90ff0c210f2937f63b97a6bad278d2514c8bc2a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c2a2a48f72a3b8b3b981f22bd510fc66ba1766e81cb7c725dc384fb1721d7d\",\"dweb:/ipfs/Qmco2ZAHvksLiqsjaoMjeeKyV2YtEmk9Yq4CFgJ8FUZE7X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/level22.sol:Dex",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 942,
								"contract": "src/level22.sol:Dex",
								"label": "token1",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "src/level22.sol:Dex",
								"label": "token2",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SwappableToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dexInstance",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/level22.sol\":3146:3605  contract SwappableToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/level22.sol\":3212:3419  constructor(address dexInstance, string memory name, string memory symbol, uint256 initialSupply)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/level22.sol\":3324:3328  name */\n  dup3\n    /* \"src/level22.sol\":3330:3336  symbol */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/level22.sol\":3352:3384  _mint(msg.sender, initialSupply) */\n  tag_11\n    /* \"src/level22.sol\":3358:3368  msg.sender */\n  caller\n    /* \"src/level22.sol\":3370:3383  initialSupply */\n  dup3\n    /* \"src/level22.sol\":3352:3357  _mint */\n  shl(0x20, tag_12)\n    /* \"src/level22.sol\":3352:3384  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"src/level22.sol\":3401:3412  dexInstance */\n  dup4\n    /* \"src/level22.sol\":3394:3398  _dex */\n  0x05\n  0x00\n    /* \"src/level22.sol\":3394:3412  _dex = dexInstance */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/level22.sol\":3212:3419  constructor(address dexInstance, string memory name, string memory symbol, uint256 initialSupply)... */\n  pop\n  pop\n  pop\n  pop\n    /* \"src/level22.sol\":3146:3605  contract SwappableToken is ERC20 {... */\n  jump(tag_13)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_18\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_19)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_25:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_24:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_29:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_32:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_34:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_35:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_36:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_79\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_35\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_37:\n    /* \"#utility.yul\":641:665   */\n  tag_81\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_82:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_38:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_84\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_37\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_39:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_40:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_41:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_42:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_43:\n    /* \"#utility.yul\":1468:1495   */\n  tag_90\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_41\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_92\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1541:1629   */\ntag_91:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_44:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_94\n  tag_32\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_95\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_43\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_45:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_98\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1945:2001   */\ntag_97:\n    /* \"#utility.yul\":2019:2048   */\n  tag_99\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_41\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2260   */\ntag_46:\n    /* \"#utility.yul\":2210:2216   */\n  dup3\n    /* \"#utility.yul\":2205:2208   */\n  dup2\n    /* \"#utility.yul\":2200:2203   */\n  dup4\n    /* \"#utility.yul\":2194:2217   */\n  mcopy\n    /* \"#utility.yul\":2251:2252   */\n  0x00\n    /* \"#utility.yul\":2242:2248   */\n  dup4\n    /* \"#utility.yul\":2237:2240   */\n  dup4\n    /* \"#utility.yul\":2233:2249   */\n  add\n    /* \"#utility.yul\":2226:2253   */\n  mstore\n    /* \"#utility.yul\":2121:2260   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2266:2700   */\ntag_47:\n    /* \"#utility.yul\":2355:2360   */\n  0x00\n    /* \"#utility.yul\":2380:2446   */\n  tag_102\n    /* \"#utility.yul\":2396:2445   */\n  tag_103\n    /* \"#utility.yul\":2438:2444   */\n  dup5\n    /* \"#utility.yul\":2396:2445   */\n  tag_45\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2380:2446   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2371:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2462:2467   */\n  dup2\n    /* \"#utility.yul\":2455:2476   */\n  mstore\n    /* \"#utility.yul\":2507:2511   */\n  0x20\n    /* \"#utility.yul\":2500:2505   */\n  dup2\n    /* \"#utility.yul\":2496:2512   */\n  add\n    /* \"#utility.yul\":2545:2548   */\n  dup5\n    /* \"#utility.yul\":2536:2542   */\n  dup5\n    /* \"#utility.yul\":2531:2534   */\n  dup5\n    /* \"#utility.yul\":2527:2543   */\n  add\n    /* \"#utility.yul\":2524:2549   */\n  gt\n    /* \"#utility.yul\":2521:2633   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2552:2631   */\n  tag_105\n  tag_40\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2521:2633   */\ntag_104:\n    /* \"#utility.yul\":2642:2694   */\n  tag_106\n    /* \"#utility.yul\":2687:2693   */\n  dup5\n    /* \"#utility.yul\":2682:2685   */\n  dup3\n    /* \"#utility.yul\":2677:2680   */\n  dup6\n    /* \"#utility.yul\":2642:2694   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2361:2700   */\n  pop\n    /* \"#utility.yul\":2266:2700   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2720:3075   */\ntag_48:\n    /* \"#utility.yul\":2787:2792   */\n  0x00\n    /* \"#utility.yul\":2836:2839   */\n  dup3\n    /* \"#utility.yul\":2829:2833   */\n  0x1f\n    /* \"#utility.yul\":2821:2827   */\n  dup4\n    /* \"#utility.yul\":2817:2834   */\n  add\n    /* \"#utility.yul\":2813:2840   */\n  slt\n    /* \"#utility.yul\":2803:2925   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2844:2923   */\n  tag_109\n  tag_39\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2803:2925   */\ntag_108:\n    /* \"#utility.yul\":2954:2960   */\n  dup2\n    /* \"#utility.yul\":2948:2961   */\n  mload\n    /* \"#utility.yul\":2979:3069   */\n  tag_110\n    /* \"#utility.yul\":3065:3068   */\n  dup5\n    /* \"#utility.yul\":3057:3063   */\n  dup3\n    /* \"#utility.yul\":3050:3054   */\n  0x20\n    /* \"#utility.yul\":3042:3048   */\n  dup7\n    /* \"#utility.yul\":3038:3055   */\n  add\n    /* \"#utility.yul\":2979:3069   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2970:3069   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:3075   */\n  pop\n    /* \"#utility.yul\":2720:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3158   */\ntag_49:\n    /* \"#utility.yul\":3118:3125   */\n  0x00\n    /* \"#utility.yul\":3147:3152   */\n  dup2\n    /* \"#utility.yul\":3136:3152   */\n  swap1\n  pop\n    /* \"#utility.yul\":3081:3158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3164:3286   */\ntag_50:\n    /* \"#utility.yul\":3237:3261   */\n  tag_113\n    /* \"#utility.yul\":3255:3260   */\n  dup2\n    /* \"#utility.yul\":3237:3261   */\n  tag_49\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3230:3235   */\n  dup2\n    /* \"#utility.yul\":3227:3262   */\n  eq\n    /* \"#utility.yul\":3217:3280   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3217:3280   */\ntag_114:\n    /* \"#utility.yul\":3164:3286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3292:3435   */\ntag_51:\n    /* \"#utility.yul\":3349:3354   */\n  0x00\n    /* \"#utility.yul\":3380:3386   */\n  dup2\n    /* \"#utility.yul\":3374:3387   */\n  mload\n    /* \"#utility.yul\":3365:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3429   */\n  tag_116\n    /* \"#utility.yul\":3423:3428   */\n  dup2\n    /* \"#utility.yul\":3396:3429   */\n  tag_50\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3292:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:4607   */\ntag_3:\n    /* \"#utility.yul\":3558:3564   */\n  0x00\n    /* \"#utility.yul\":3566:3572   */\n  dup1\n    /* \"#utility.yul\":3574:3580   */\n  0x00\n    /* \"#utility.yul\":3582:3588   */\n  dup1\n    /* \"#utility.yul\":3631:3634   */\n  0x80\n    /* \"#utility.yul\":3619:3628   */\n  dup6\n    /* \"#utility.yul\":3610:3617   */\n  dup8\n    /* \"#utility.yul\":3606:3629   */\n  sub\n    /* \"#utility.yul\":3602:3635   */\n  slt\n    /* \"#utility.yul\":3599:3719   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3638:3717   */\n  tag_119\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3599:3719   */\ntag_118:\n    /* \"#utility.yul\":3758:3759   */\n  0x00\n    /* \"#utility.yul\":3783:3847   */\n  tag_120\n    /* \"#utility.yul\":3839:3846   */\n  dup8\n    /* \"#utility.yul\":3830:3836   */\n  dup3\n    /* \"#utility.yul\":3819:3828   */\n  dup9\n    /* \"#utility.yul\":3815:3837   */\n  add\n    /* \"#utility.yul\":3783:3847   */\n  tag_38\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3773:3847   */\n  swap5\n  pop\n    /* \"#utility.yul\":3729:3857   */\n  pop\n    /* \"#utility.yul\":3917:3919   */\n  0x20\n    /* \"#utility.yul\":3906:3915   */\n  dup6\n    /* \"#utility.yul\":3902:3920   */\n  add\n    /* \"#utility.yul\":3896:3921   */\n  mload\n    /* \"#utility.yul\":3948:3966   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3940:3946   */\n  dup2\n    /* \"#utility.yul\":3937:3967   */\n  gt\n    /* \"#utility.yul\":3934:4051   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":3970:4049   */\n  tag_122\n  tag_34\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3934:4051   */\ntag_121:\n    /* \"#utility.yul\":4075:4149   */\n  tag_123\n    /* \"#utility.yul\":4141:4148   */\n  dup8\n    /* \"#utility.yul\":4132:4138   */\n  dup3\n    /* \"#utility.yul\":4121:4130   */\n  dup9\n    /* \"#utility.yul\":4117:4139   */\n  add\n    /* \"#utility.yul\":4075:4149   */\n  tag_48\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4065:4149   */\n  swap4\n  pop\n    /* \"#utility.yul\":3867:4159   */\n  pop\n    /* \"#utility.yul\":4219:4221   */\n  0x40\n    /* \"#utility.yul\":4208:4217   */\n  dup6\n    /* \"#utility.yul\":4204:4222   */\n  add\n    /* \"#utility.yul\":4198:4223   */\n  mload\n    /* \"#utility.yul\":4250:4268   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4242:4248   */\n  dup2\n    /* \"#utility.yul\":4239:4269   */\n  gt\n    /* \"#utility.yul\":4236:4353   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4272:4351   */\n  tag_125\n  tag_34\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4236:4353   */\ntag_124:\n    /* \"#utility.yul\":4377:4451   */\n  tag_126\n    /* \"#utility.yul\":4443:4450   */\n  dup8\n    /* \"#utility.yul\":4434:4440   */\n  dup3\n    /* \"#utility.yul\":4423:4432   */\n  dup9\n    /* \"#utility.yul\":4419:4441   */\n  add\n    /* \"#utility.yul\":4377:4451   */\n  tag_48\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4367:4451   */\n  swap3\n  pop\n    /* \"#utility.yul\":4169:4461   */\n  pop\n    /* \"#utility.yul\":4500:4502   */\n  0x60\n    /* \"#utility.yul\":4526:4590   */\n  tag_127\n    /* \"#utility.yul\":4582:4589   */\n  dup8\n    /* \"#utility.yul\":4573:4579   */\n  dup3\n    /* \"#utility.yul\":4562:4571   */\n  dup9\n    /* \"#utility.yul\":4558:4580   */\n  add\n    /* \"#utility.yul\":4526:4590   */\n  tag_51\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4516:4590   */\n  swap2\n  pop\n    /* \"#utility.yul\":4471:4600   */\n  pop\n    /* \"#utility.yul\":3441:4607   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4613:4712   */\ntag_52:\n    /* \"#utility.yul\":4665:4671   */\n  0x00\n    /* \"#utility.yul\":4699:4704   */\n  dup2\n    /* \"#utility.yul\":4693:4705   */\n  mload\n    /* \"#utility.yul\":4683:4705   */\n  swap1\n  pop\n    /* \"#utility.yul\":4613:4712   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4718:4898   */\ntag_53:\n    /* \"#utility.yul\":4766:4843   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4763:4764   */\n  0x00\n    /* \"#utility.yul\":4756:4844   */\n  mstore\n    /* \"#utility.yul\":4863:4867   */\n  0x22\n    /* \"#utility.yul\":4860:4861   */\n  0x04\n    /* \"#utility.yul\":4853:4868   */\n  mstore\n    /* \"#utility.yul\":4887:4891   */\n  0x24\n    /* \"#utility.yul\":4884:4885   */\n  0x00\n    /* \"#utility.yul\":4877:4892   */\n  revert\n    /* \"#utility.yul\":4904:5224   */\ntag_54:\n    /* \"#utility.yul\":4948:4954   */\n  0x00\n    /* \"#utility.yul\":4985:4986   */\n  0x02\n    /* \"#utility.yul\":4979:4983   */\n  dup3\n    /* \"#utility.yul\":4975:4987   */\n  div\n    /* \"#utility.yul\":4965:4987   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5033   */\n  0x01\n    /* \"#utility.yul\":5026:5030   */\n  dup3\n    /* \"#utility.yul\":5022:5034   */\n  and\n    /* \"#utility.yul\":5053:5071   */\n  dup1\n    /* \"#utility.yul\":5043:5124   */\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5109:5113   */\n  0x7f\n    /* \"#utility.yul\":5101:5107   */\n  dup3\n    /* \"#utility.yul\":5097:5114   */\n  and\n    /* \"#utility.yul\":5087:5114   */\n  swap2\n  pop\n    /* \"#utility.yul\":5043:5124   */\ntag_131:\n    /* \"#utility.yul\":5171:5173   */\n  0x20\n    /* \"#utility.yul\":5163:5169   */\n  dup3\n    /* \"#utility.yul\":5160:5174   */\n  lt\n    /* \"#utility.yul\":5140:5158   */\n  dup2\n    /* \"#utility.yul\":5137:5175   */\n  sub\n    /* \"#utility.yul\":5134:5218   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":5190:5208   */\n  tag_133\n  tag_53\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5134:5218   */\ntag_132:\n    /* \"#utility.yul\":4955:5224   */\n  pop\n    /* \"#utility.yul\":4904:5224   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5230:5371   */\ntag_55:\n    /* \"#utility.yul\":5279:5283   */\n  0x00\n    /* \"#utility.yul\":5302:5305   */\n  dup2\n    /* \"#utility.yul\":5294:5305   */\n  swap1\n  pop\n    /* \"#utility.yul\":5325:5328   */\n  dup2\n    /* \"#utility.yul\":5322:5323   */\n  0x00\n    /* \"#utility.yul\":5315:5329   */\n  mstore\n    /* \"#utility.yul\":5359:5363   */\n  0x20\n    /* \"#utility.yul\":5356:5357   */\n  0x00\n    /* \"#utility.yul\":5346:5364   */\n  keccak256\n    /* \"#utility.yul\":5338:5364   */\n  swap1\n  pop\n    /* \"#utility.yul\":5230:5371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5377:5470   */\ntag_56:\n    /* \"#utility.yul\":5414:5420   */\n  0x00\n    /* \"#utility.yul\":5461:5463   */\n  0x20\n    /* \"#utility.yul\":5456:5458   */\n  0x1f\n    /* \"#utility.yul\":5449:5454   */\n  dup4\n    /* \"#utility.yul\":5445:5459   */\n  add\n    /* \"#utility.yul\":5441:5464   */\n  div\n    /* \"#utility.yul\":5431:5464   */\n  swap1\n  pop\n    /* \"#utility.yul\":5377:5470   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5476:5583   */\ntag_57:\n    /* \"#utility.yul\":5520:5528   */\n  0x00\n    /* \"#utility.yul\":5570:5575   */\n  dup3\n    /* \"#utility.yul\":5564:5568   */\n  dup3\n    /* \"#utility.yul\":5560:5576   */\n  shl\n    /* \"#utility.yul\":5539:5576   */\n  swap1\n  pop\n    /* \"#utility.yul\":5476:5583   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5589:5982   */\ntag_58:\n    /* \"#utility.yul\":5658:5664   */\n  0x00\n    /* \"#utility.yul\":5708:5709   */\n  0x08\n    /* \"#utility.yul\":5696:5706   */\n  dup4\n    /* \"#utility.yul\":5692:5710   */\n  mul\n    /* \"#utility.yul\":5731:5828   */\n  tag_138\n    /* \"#utility.yul\":5761:5827   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5750:5759   */\n  dup3\n    /* \"#utility.yul\":5731:5828   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5849:5888   */\n  tag_139\n    /* \"#utility.yul\":5879:5887   */\n  dup7\n    /* \"#utility.yul\":5868:5877   */\n  dup4\n    /* \"#utility.yul\":5849:5888   */\n  tag_57\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5837:5888   */\n  swap6\n  pop\n    /* \"#utility.yul\":5921:5925   */\n  dup1\n    /* \"#utility.yul\":5917:5926   */\n  not\n    /* \"#utility.yul\":5910:5915   */\n  dup5\n    /* \"#utility.yul\":5906:5927   */\n  and\n    /* \"#utility.yul\":5897:5927   */\n  swap4\n  pop\n    /* \"#utility.yul\":5970:5974   */\n  dup1\n    /* \"#utility.yul\":5960:5968   */\n  dup7\n    /* \"#utility.yul\":5956:5975   */\n  and\n    /* \"#utility.yul\":5949:5954   */\n  dup5\n    /* \"#utility.yul\":5946:5976   */\n  or\n    /* \"#utility.yul\":5936:5976   */\n  swap3\n  pop\n    /* \"#utility.yul\":5665:5982   */\n  pop\n  pop\n    /* \"#utility.yul\":5589:5982   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5988:6048   */\ntag_59:\n    /* \"#utility.yul\":6016:6019   */\n  0x00\n    /* \"#utility.yul\":6037:6042   */\n  dup2\n    /* \"#utility.yul\":6030:6042   */\n  swap1\n  pop\n    /* \"#utility.yul\":5988:6048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6054:6196   */\ntag_60:\n    /* \"#utility.yul\":6104:6113   */\n  0x00\n    /* \"#utility.yul\":6137:6190   */\n  tag_142\n    /* \"#utility.yul\":6155:6189   */\n  tag_143\n    /* \"#utility.yul\":6164:6188   */\n  tag_144\n    /* \"#utility.yul\":6182:6187   */\n  dup5\n    /* \"#utility.yul\":6164:6188   */\n  tag_49\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6155:6189   */\n  tag_59\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6137:6190   */\n  tag_49\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6124:6190   */\n  swap1\n  pop\n    /* \"#utility.yul\":6054:6196   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6277   */\ntag_61:\n    /* \"#utility.yul\":6245:6248   */\n  0x00\n    /* \"#utility.yul\":6266:6271   */\n  dup2\n    /* \"#utility.yul\":6259:6271   */\n  swap1\n  pop\n    /* \"#utility.yul\":6202:6277   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6283:6552   */\ntag_62:\n    /* \"#utility.yul\":6393:6432   */\n  tag_147\n    /* \"#utility.yul\":6424:6431   */\n  dup4\n    /* \"#utility.yul\":6393:6432   */\n  tag_60\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6454:6545   */\n  tag_148\n    /* \"#utility.yul\":6503:6544   */\n  tag_149\n    /* \"#utility.yul\":6527:6543   */\n  dup3\n    /* \"#utility.yul\":6503:6544   */\n  tag_61\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6495:6501   */\n  dup5\n    /* \"#utility.yul\":6488:6492   */\n  dup5\n    /* \"#utility.yul\":6482:6493   */\n  sload\n    /* \"#utility.yul\":6454:6545   */\n  tag_58\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6448:6452   */\n  dup3\n    /* \"#utility.yul\":6441:6546   */\n  sstore\n    /* \"#utility.yul\":6359:6552   */\n  pop\n    /* \"#utility.yul\":6283:6552   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6558:6631   */\ntag_63:\n    /* \"#utility.yul\":6603:6606   */\n  0x00\n    /* \"#utility.yul\":6558:6631   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6637:6826   */\ntag_64:\n    /* \"#utility.yul\":6714:6746   */\n  tag_152\n  tag_63\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6755:6820   */\n  tag_153\n    /* \"#utility.yul\":6813:6819   */\n  dup2\n    /* \"#utility.yul\":6805:6811   */\n  dup5\n    /* \"#utility.yul\":6799:6803   */\n  dup5\n    /* \"#utility.yul\":6755:6820   */\n  tag_62\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6690:6826   */\n  pop\n    /* \"#utility.yul\":6637:6826   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6832:7018   */\ntag_65:\n    /* \"#utility.yul\":6892:7012   */\ntag_155:\n    /* \"#utility.yul\":6909:6912   */\n  dup2\n    /* \"#utility.yul\":6902:6907   */\n  dup2\n    /* \"#utility.yul\":6899:6913   */\n  lt\n    /* \"#utility.yul\":6892:7012   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6963:7002   */\n  tag_158\n    /* \"#utility.yul\":7000:7001   */\n  0x00\n    /* \"#utility.yul\":6993:6998   */\n  dup3\n    /* \"#utility.yul\":6963:7002   */\n  tag_64\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6936:6937   */\n  0x01\n    /* \"#utility.yul\":6929:6934   */\n  dup2\n    /* \"#utility.yul\":6925:6938   */\n  add\n    /* \"#utility.yul\":6916:6938   */\n  swap1\n  pop\n    /* \"#utility.yul\":6892:7012   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":6832:7018   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7024:7567   */\ntag_66:\n    /* \"#utility.yul\":7125:7127   */\n  0x1f\n    /* \"#utility.yul\":7120:7123   */\n  dup3\n    /* \"#utility.yul\":7117:7128   */\n  gt\n    /* \"#utility.yul\":7114:7560   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7159:7197   */\n  tag_161\n    /* \"#utility.yul\":7191:7196   */\n  dup2\n    /* \"#utility.yul\":7159:7197   */\n  tag_55\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7243:7272   */\n  tag_162\n    /* \"#utility.yul\":7261:7271   */\n  dup5\n    /* \"#utility.yul\":7243:7272   */\n  tag_56\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7233:7241   */\n  dup2\n    /* \"#utility.yul\":7229:7273   */\n  add\n    /* \"#utility.yul\":7426:7428   */\n  0x20\n    /* \"#utility.yul\":7414:7424   */\n  dup6\n    /* \"#utility.yul\":7411:7429   */\n  lt\n    /* \"#utility.yul\":7408:7457   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7447:7455   */\n  dup2\n    /* \"#utility.yul\":7432:7455   */\n  swap1\n  pop\n    /* \"#utility.yul\":7408:7457   */\ntag_163:\n    /* \"#utility.yul\":7470:7550   */\n  tag_164\n    /* \"#utility.yul\":7526:7548   */\n  tag_165\n    /* \"#utility.yul\":7544:7547   */\n  dup6\n    /* \"#utility.yul\":7526:7548   */\n  tag_56\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7516:7524   */\n  dup4\n    /* \"#utility.yul\":7512:7549   */\n  add\n    /* \"#utility.yul\":7499:7510   */\n  dup3\n    /* \"#utility.yul\":7470:7550   */\n  tag_65\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7129:7560   */\n  pop\n  pop\n    /* \"#utility.yul\":7114:7560   */\ntag_160:\n    /* \"#utility.yul\":7024:7567   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7573:7690   */\ntag_67:\n    /* \"#utility.yul\":7627:7635   */\n  0x00\n    /* \"#utility.yul\":7677:7682   */\n  dup3\n    /* \"#utility.yul\":7671:7675   */\n  dup3\n    /* \"#utility.yul\":7667:7683   */\n  shr\n    /* \"#utility.yul\":7646:7683   */\n  swap1\n  pop\n    /* \"#utility.yul\":7573:7690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7696:7865   */\ntag_68:\n    /* \"#utility.yul\":7740:7746   */\n  0x00\n    /* \"#utility.yul\":7773:7824   */\n  tag_168\n    /* \"#utility.yul\":7821:7822   */\n  0x00\n    /* \"#utility.yul\":7817:7823   */\n  not\n    /* \"#utility.yul\":7809:7814   */\n  dup5\n    /* \"#utility.yul\":7806:7807   */\n  0x08\n    /* \"#utility.yul\":7802:7815   */\n  mul\n    /* \"#utility.yul\":7773:7824   */\n  tag_67\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7769:7825   */\n  not\n    /* \"#utility.yul\":7854:7858   */\n  dup1\n    /* \"#utility.yul\":7848:7852   */\n  dup4\n    /* \"#utility.yul\":7844:7859   */\n  and\n    /* \"#utility.yul\":7834:7859   */\n  swap2\n  pop\n    /* \"#utility.yul\":7747:7865   */\n  pop\n    /* \"#utility.yul\":7696:7865   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7870:8165   */\ntag_69:\n    /* \"#utility.yul\":7946:7950   */\n  0x00\n    /* \"#utility.yul\":8092:8121   */\n  tag_170\n    /* \"#utility.yul\":8117:8120   */\n  dup4\n    /* \"#utility.yul\":8111:8115   */\n  dup4\n    /* \"#utility.yul\":8092:8121   */\n  tag_68\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8084:8121   */\n  swap2\n  pop\n    /* \"#utility.yul\":8154:8157   */\n  dup3\n    /* \"#utility.yul\":8151:8152   */\n  0x02\n    /* \"#utility.yul\":8147:8158   */\n  mul\n    /* \"#utility.yul\":8141:8145   */\n  dup3\n    /* \"#utility.yul\":8138:8159   */\n  or\n    /* \"#utility.yul\":8130:8159   */\n  swap1\n  pop\n    /* \"#utility.yul\":7870:8165   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8170:9565   */\ntag_8:\n    /* \"#utility.yul\":8287:8324   */\n  tag_172\n    /* \"#utility.yul\":8320:8323   */\n  dup3\n    /* \"#utility.yul\":8287:8324   */\n  tag_52\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8389:8407   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8381:8387   */\n  dup2\n    /* \"#utility.yul\":8378:8408   */\n  gt\n    /* \"#utility.yul\":8375:8431   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8411:8429   */\n  tag_174\n  tag_42\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8375:8431   */\ntag_173:\n    /* \"#utility.yul\":8455:8493   */\n  tag_175\n    /* \"#utility.yul\":8487:8491   */\n  dup3\n    /* \"#utility.yul\":8481:8492   */\n  sload\n    /* \"#utility.yul\":8455:8493   */\n  tag_54\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8540:8607   */\n  tag_176\n    /* \"#utility.yul\":8600:8606   */\n  dup3\n    /* \"#utility.yul\":8592:8598   */\n  dup3\n    /* \"#utility.yul\":8586:8590   */\n  dup6\n    /* \"#utility.yul\":8540:8607   */\n  tag_66\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8634:8635   */\n  0x00\n    /* \"#utility.yul\":8658:8662   */\n  0x20\n    /* \"#utility.yul\":8645:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8690:8692   */\n  0x1f\n    /* \"#utility.yul\":8682:8688   */\n  dup4\n    /* \"#utility.yul\":8679:8693   */\n  gt\n    /* \"#utility.yul\":8707:8708   */\n  0x01\n    /* \"#utility.yul\":8702:9320   */\n  dup2\n  eq\n  tag_178\n  jumpi\n    /* \"#utility.yul\":9364:9365   */\n  0x00\n    /* \"#utility.yul\":9381:9387   */\n  dup5\n    /* \"#utility.yul\":9378:9455   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":9430:9439   */\n  dup3\n    /* \"#utility.yul\":9425:9428   */\n  dup8\n    /* \"#utility.yul\":9421:9440   */\n  add\n    /* \"#utility.yul\":9415:9441   */\n  mload\n    /* \"#utility.yul\":9406:9441   */\n  swap1\n  pop\n    /* \"#utility.yul\":9378:9455   */\ntag_179:\n    /* \"#utility.yul\":9481:9548   */\n  tag_180\n    /* \"#utility.yul\":9541:9547   */\n  dup6\n    /* \"#utility.yul\":9534:9539   */\n  dup3\n    /* \"#utility.yul\":9481:9548   */\n  tag_69\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":9475:9479   */\n  dup7\n    /* \"#utility.yul\":9468:9549   */\n  sstore\n    /* \"#utility.yul\":9337:9559   */\n  pop\n    /* \"#utility.yul\":8672:9559   */\n  jump(tag_177)\n    /* \"#utility.yul\":8702:9320   */\ntag_178:\n    /* \"#utility.yul\":8754:8758   */\n  0x1f\n    /* \"#utility.yul\":8750:8759   */\n  not\n    /* \"#utility.yul\":8742:8748   */\n  dup5\n    /* \"#utility.yul\":8738:8760   */\n  and\n    /* \"#utility.yul\":8788:8825   */\n  tag_181\n    /* \"#utility.yul\":8820:8824   */\n  dup7\n    /* \"#utility.yul\":8788:8825   */\n  tag_55\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8847:8848   */\n  0x00\n    /* \"#utility.yul\":8861:9069   */\ntag_182:\n    /* \"#utility.yul\":8875:8882   */\n  dup3\n    /* \"#utility.yul\":8872:8873   */\n  dup2\n    /* \"#utility.yul\":8869:8883   */\n  lt\n    /* \"#utility.yul\":8861:9069   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":8954:8963   */\n  dup5\n    /* \"#utility.yul\":8949:8952   */\n  dup10\n    /* \"#utility.yul\":8945:8964   */\n  add\n    /* \"#utility.yul\":8939:8965   */\n  mload\n    /* \"#utility.yul\":8931:8937   */\n  dup3\n    /* \"#utility.yul\":8924:8966   */\n  sstore\n    /* \"#utility.yul\":9005:9006   */\n  0x01\n    /* \"#utility.yul\":8997:9003   */\n  dup3\n    /* \"#utility.yul\":8993:9007   */\n  add\n    /* \"#utility.yul\":8983:9007   */\n  swap2\n  pop\n    /* \"#utility.yul\":9052:9054   */\n  0x20\n    /* \"#utility.yul\":9041:9050   */\n  dup6\n    /* \"#utility.yul\":9037:9055   */\n  add\n    /* \"#utility.yul\":9024:9055   */\n  swap5\n  pop\n    /* \"#utility.yul\":8898:8902   */\n  0x20\n    /* \"#utility.yul\":8895:8896   */\n  dup2\n    /* \"#utility.yul\":8891:8903   */\n  add\n    /* \"#utility.yul\":8886:8903   */\n  swap1\n  pop\n    /* \"#utility.yul\":8861:9069   */\n  jump(tag_182)\ntag_184:\n    /* \"#utility.yul\":9097:9103   */\n  dup7\n    /* \"#utility.yul\":9088:9095   */\n  dup4\n    /* \"#utility.yul\":9085:9104   */\n  lt\n    /* \"#utility.yul\":9082:9261   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":9155:9164   */\n  dup5\n    /* \"#utility.yul\":9150:9153   */\n  dup10\n    /* \"#utility.yul\":9146:9165   */\n  add\n    /* \"#utility.yul\":9140:9166   */\n  mload\n    /* \"#utility.yul\":9198:9246   */\n  tag_186\n    /* \"#utility.yul\":9240:9244   */\n  0x1f\n    /* \"#utility.yul\":9232:9238   */\n  dup10\n    /* \"#utility.yul\":9228:9245   */\n  and\n    /* \"#utility.yul\":9217:9226   */\n  dup3\n    /* \"#utility.yul\":9198:9246   */\n  tag_68\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9190:9196   */\n  dup4\n    /* \"#utility.yul\":9183:9247   */\n  sstore\n    /* \"#utility.yul\":9105:9261   */\n  pop\n    /* \"#utility.yul\":9082:9261   */\ntag_185:\n    /* \"#utility.yul\":9307:9308   */\n  0x01\n    /* \"#utility.yul\":9303:9304   */\n  0x02\n    /* \"#utility.yul\":9295:9301   */\n  dup9\n    /* \"#utility.yul\":9291:9305   */\n  mul\n    /* \"#utility.yul\":9287:9309   */\n  add\n    /* \"#utility.yul\":9281:9285   */\n  dup9\n    /* \"#utility.yul\":9274:9310   */\n  sstore\n    /* \"#utility.yul\":8709:9320   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8672:9559   */\ntag_177:\n  pop\n    /* \"#utility.yul\":8262:9565   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8170:9565   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9571:9689   */\ntag_70:\n    /* \"#utility.yul\":9658:9682   */\n  tag_188\n    /* \"#utility.yul\":9676:9681   */\n  dup2\n    /* \"#utility.yul\":9658:9682   */\n  tag_36\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9653:9656   */\n  dup3\n    /* \"#utility.yul\":9646:9683   */\n  mstore\n    /* \"#utility.yul\":9571:9689   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9695:9917   */\ntag_17:\n    /* \"#utility.yul\":9788:9792   */\n  0x00\n    /* \"#utility.yul\":9826:9828   */\n  0x20\n    /* \"#utility.yul\":9815:9824   */\n  dup3\n    /* \"#utility.yul\":9811:9829   */\n  add\n    /* \"#utility.yul\":9803:9829   */\n  swap1\n  pop\n    /* \"#utility.yul\":9839:9910   */\n  tag_190\n    /* \"#utility.yul\":9907:9908   */\n  0x00\n    /* \"#utility.yul\":9896:9905   */\n  dup4\n    /* \"#utility.yul\":9892:9909   */\n  add\n    /* \"#utility.yul\":9883:9889   */\n  dup5\n    /* \"#utility.yul\":9839:9910   */\n  tag_70\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9695:9917   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9923:10103   */\ntag_71:\n    /* \"#utility.yul\":9971:10048   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9968:9969   */\n  0x00\n    /* \"#utility.yul\":9961:10049   */\n  mstore\n    /* \"#utility.yul\":10068:10072   */\n  0x11\n    /* \"#utility.yul\":10065:10066   */\n  0x04\n    /* \"#utility.yul\":10058:10073   */\n  mstore\n    /* \"#utility.yul\":10092:10096   */\n  0x24\n    /* \"#utility.yul\":10089:10090   */\n  0x00\n    /* \"#utility.yul\":10082:10097   */\n  revert\n    /* \"#utility.yul\":10109:10300   */\ntag_23:\n    /* \"#utility.yul\":10149:10152   */\n  0x00\n    /* \"#utility.yul\":10168:10188   */\n  tag_193\n    /* \"#utility.yul\":10186:10187   */\n  dup3\n    /* \"#utility.yul\":10168:10188   */\n  tag_49\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10163:10188   */\n  swap2\n  pop\n    /* \"#utility.yul\":10202:10222   */\n  tag_194\n    /* \"#utility.yul\":10220:10221   */\n  dup4\n    /* \"#utility.yul\":10202:10222   */\n  tag_49\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":10197:10222   */\n  swap3\n  pop\n    /* \"#utility.yul\":10245:10246   */\n  dup3\n    /* \"#utility.yul\":10242:10243   */\n  dup3\n    /* \"#utility.yul\":10238:10247   */\n  add\n    /* \"#utility.yul\":10231:10247   */\n  swap1\n  pop\n    /* \"#utility.yul\":10266:10269   */\n  dup1\n    /* \"#utility.yul\":10263:10264   */\n  dup3\n    /* \"#utility.yul\":10260:10270   */\n  gt\n    /* \"#utility.yul\":10257:10293   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":10273:10291   */\n  tag_196\n  tag_71\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":10257:10293   */\ntag_195:\n    /* \"#utility.yul\":10109:10300   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10306:10424   */\ntag_72:\n    /* \"#utility.yul\":10393:10417   */\n  tag_198\n    /* \"#utility.yul\":10411:10416   */\n  dup2\n    /* \"#utility.yul\":10393:10417   */\n  tag_49\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":10388:10391   */\n  dup3\n    /* \"#utility.yul\":10381:10418   */\n  mstore\n    /* \"#utility.yul\":10306:10424   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10430:10872   */\ntag_27:\n    /* \"#utility.yul\":10579:10583   */\n  0x00\n    /* \"#utility.yul\":10617:10619   */\n  0x60\n    /* \"#utility.yul\":10606:10615   */\n  dup3\n    /* \"#utility.yul\":10602:10620   */\n  add\n    /* \"#utility.yul\":10594:10620   */\n  swap1\n  pop\n    /* \"#utility.yul\":10630:10701   */\n  tag_200\n    /* \"#utility.yul\":10698:10699   */\n  0x00\n    /* \"#utility.yul\":10687:10696   */\n  dup4\n    /* \"#utility.yul\":10683:10700   */\n  add\n    /* \"#utility.yul\":10674:10680   */\n  dup7\n    /* \"#utility.yul\":10630:10701   */\n  tag_70\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10711:10783   */\n  tag_201\n    /* \"#utility.yul\":10779:10781   */\n  0x20\n    /* \"#utility.yul\":10768:10777   */\n  dup4\n    /* \"#utility.yul\":10764:10782   */\n  add\n    /* \"#utility.yul\":10755:10761   */\n  dup6\n    /* \"#utility.yul\":10711:10783   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10793:10865   */\n  tag_202\n    /* \"#utility.yul\":10861:10863   */\n  0x40\n    /* \"#utility.yul\":10850:10859   */\n  dup4\n    /* \"#utility.yul\":10846:10864   */\n  add\n    /* \"#utility.yul\":10837:10843   */\n  dup5\n    /* \"#utility.yul\":10793:10865   */\n  tag_72\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10430:10872   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10878:11100   */\ntag_31:\n    /* \"#utility.yul\":10971:10975   */\n  0x00\n    /* \"#utility.yul\":11009:11011   */\n  0x20\n    /* \"#utility.yul\":10998:11007   */\n  dup3\n    /* \"#utility.yul\":10994:11012   */\n  add\n    /* \"#utility.yul\":10986:11012   */\n  swap1\n  pop\n    /* \"#utility.yul\":11022:11093   */\n  tag_204\n    /* \"#utility.yul\":11090:11091   */\n  0x00\n    /* \"#utility.yul\":11079:11088   */\n  dup4\n    /* \"#utility.yul\":11075:11092   */\n  add\n    /* \"#utility.yul\":11066:11072   */\n  dup5\n    /* \"#utility.yul\":11022:11093   */\n  tag_72\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10878:11100   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/level22.sol\":3146:3605  contract SwappableToken is ERC20 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/level22.sol\":3146:3605  contract SwappableToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe1f21c67\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level22.sol\":3425:3603  function approve(address owner, address spender, uint256 amount) public {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_59\n      jump\t// in\n    tag_79:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_59\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/level22.sol\":3425:3603  function approve(address owner, address spender, uint256 amount) public {... */\n    tag_56:\n        /* \"src/level22.sol\":3524:3528  _dex */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":3515:3528  owner != _dex */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/level22.sol\":3515:3520  owner */\n      dup4\n        /* \"src/level22.sol\":3515:3528  owner != _dex */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/level22.sol\":3507:3548  require(owner != _dex, \"InvalidApprover\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"src/level22.sol\":3558:3596  super._approve(owner, spender, amount) */\n      tag_92\n        /* \"src/level22.sol\":3573:3578  owner */\n      dup4\n        /* \"src/level22.sol\":3580:3587  spender */\n      dup4\n        /* \"src/level22.sol\":3589:3595  amount */\n      dup4\n        /* \"src/level22.sol\":3558:3572  super._approve */\n      tag_68\n        /* \"src/level22.sol\":3558:3596  super._approve(owner, spender, amount) */\n      jump\t// in\n    tag_92:\n        /* \"src/level22.sol\":3425:3603  function approve(address owner, address spender, uint256 amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_99\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_105\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_108\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_113\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_120\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_123)\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_127)\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_129:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_130:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_131:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_132:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_133:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_160\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_129\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":711:782   */\n      tag_161\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_130\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_162\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_131\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":881:910   */\n      tag_163\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_132\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_17:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_165\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_133\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_135:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_137:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_138:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_171\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_137\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_139:\n        /* \"#utility.yul\":1876:1900   */\n      tag_173\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_138\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_174:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_140:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_176\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_139\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_141:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_142:\n        /* \"#utility.yul\":2232:2256   */\n      tag_179\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_141\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_180:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_143:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_182\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_142\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_20:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_185\n      tag_135\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2525:2644   */\n    tag_184:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_186\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_140\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_187\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_143\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_144:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_145:\n        /* \"#utility.yul\":3089:3110   */\n      tag_190\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_23:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_192\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_145\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_146:\n        /* \"#utility.yul\":3426:3450   */\n      tag_194\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_141\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_27:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_196\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_146\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_30:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_199\n      tag_135\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3801:3920   */\n    tag_198:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_200\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_140\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_201\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_140\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_202\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_143\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_147:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_148:\n        /* \"#utility.yul\":4491:4513   */\n      tag_205\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_147\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_36:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_207\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_148\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_39:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_210\n      tag_135\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4822:4941   */\n    tag_209:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_211\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_140\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_51:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      dup1\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_214\n      tag_135\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5174:5293   */\n    tag_213:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_215\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_140\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_216\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_140\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_149:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_59:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_219:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_221\n      tag_149\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5977:6061   */\n    tag_220:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6238   */\n    tag_150:\n        /* \"#utility.yul\":6213:6230   */\n      0x496e76616c6964417070726f7665720000000000000000000000000000000000\n        /* \"#utility.yul\":6209:6210   */\n      0x00\n        /* \"#utility.yul\":6201:6207   */\n      dup3\n        /* \"#utility.yul\":6197:6211   */\n      add\n        /* \"#utility.yul\":6190:6231   */\n      mstore\n        /* \"#utility.yul\":6073:6238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6244:6610   */\n    tag_151:\n        /* \"#utility.yul\":6386:6389   */\n      0x00\n        /* \"#utility.yul\":6407:6474   */\n      tag_224\n        /* \"#utility.yul\":6471:6473   */\n      0x0f\n        /* \"#utility.yul\":6466:6469   */\n      dup4\n        /* \"#utility.yul\":6407:6474   */\n      tag_130\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6400:6474   */\n      swap2\n      pop\n        /* \"#utility.yul\":6483:6576   */\n      tag_225\n        /* \"#utility.yul\":6572:6575   */\n      dup3\n        /* \"#utility.yul\":6483:6576   */\n      tag_150\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6596:6599   */\n      dup3\n        /* \"#utility.yul\":6592:6604   */\n      add\n        /* \"#utility.yul\":6585:6604   */\n      swap1\n      pop\n        /* \"#utility.yul\":6244:6610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6616:7035   */\n    tag_91:\n        /* \"#utility.yul\":6782:6786   */\n      0x00\n        /* \"#utility.yul\":6820:6822   */\n      0x20\n        /* \"#utility.yul\":6809:6818   */\n      dup3\n        /* \"#utility.yul\":6805:6823   */\n      add\n        /* \"#utility.yul\":6797:6823   */\n      swap1\n      pop\n        /* \"#utility.yul\":6869:6878   */\n      dup2\n        /* \"#utility.yul\":6863:6867   */\n      dup2\n        /* \"#utility.yul\":6859:6879   */\n      sub\n        /* \"#utility.yul\":6855:6856   */\n      0x00\n        /* \"#utility.yul\":6844:6853   */\n      dup4\n        /* \"#utility.yul\":6840:6857   */\n      add\n        /* \"#utility.yul\":6833:6880   */\n      mstore\n        /* \"#utility.yul\":6897:7028   */\n      tag_227\n        /* \"#utility.yul\":7023:7027   */\n      dup2\n        /* \"#utility.yul\":6897:7028   */\n      tag_151\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6889:7028   */\n      swap1\n      pop\n        /* \"#utility.yul\":6616:7035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7041:7159   */\n    tag_152:\n        /* \"#utility.yul\":7128:7152   */\n      tag_229\n        /* \"#utility.yul\":7146:7151   */\n      dup2\n        /* \"#utility.yul\":7128:7152   */\n      tag_138\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7123:7126   */\n      dup3\n        /* \"#utility.yul\":7116:7153   */\n      mstore\n        /* \"#utility.yul\":7041:7159   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7607   */\n    tag_102:\n        /* \"#utility.yul\":7314:7318   */\n      0x00\n        /* \"#utility.yul\":7352:7354   */\n      0x60\n        /* \"#utility.yul\":7341:7350   */\n      dup3\n        /* \"#utility.yul\":7337:7355   */\n      add\n        /* \"#utility.yul\":7329:7355   */\n      swap1\n      pop\n        /* \"#utility.yul\":7365:7436   */\n      tag_231\n        /* \"#utility.yul\":7433:7434   */\n      0x00\n        /* \"#utility.yul\":7422:7431   */\n      dup4\n        /* \"#utility.yul\":7418:7435   */\n      add\n        /* \"#utility.yul\":7409:7415   */\n      dup7\n        /* \"#utility.yul\":7365:7436   */\n      tag_152\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7446:7518   */\n      tag_232\n        /* \"#utility.yul\":7514:7516   */\n      0x20\n        /* \"#utility.yul\":7503:7512   */\n      dup4\n        /* \"#utility.yul\":7499:7517   */\n      add\n        /* \"#utility.yul\":7490:7496   */\n      dup6\n        /* \"#utility.yul\":7446:7518   */\n      tag_146\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7528:7600   */\n      tag_233\n        /* \"#utility.yul\":7596:7598   */\n      0x40\n        /* \"#utility.yul\":7585:7594   */\n      dup4\n        /* \"#utility.yul\":7581:7599   */\n      add\n        /* \"#utility.yul\":7572:7578   */\n      dup5\n        /* \"#utility.yul\":7528:7600   */\n      tag_146\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7165:7607   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7613:7835   */\n    tag_107:\n        /* \"#utility.yul\":7706:7710   */\n      0x00\n        /* \"#utility.yul\":7744:7746   */\n      0x20\n        /* \"#utility.yul\":7733:7742   */\n      dup3\n        /* \"#utility.yul\":7729:7747   */\n      add\n        /* \"#utility.yul\":7721:7747   */\n      swap1\n      pop\n        /* \"#utility.yul\":7757:7828   */\n      tag_235\n        /* \"#utility.yul\":7825:7826   */\n      0x00\n        /* \"#utility.yul\":7814:7823   */\n      dup4\n        /* \"#utility.yul\":7810:7827   */\n      add\n        /* \"#utility.yul\":7801:7807   */\n      dup5\n        /* \"#utility.yul\":7757:7828   */\n      tag_152\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7613:7835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8021   */\n    tag_153:\n        /* \"#utility.yul\":7889:7966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x11\n        /* \"#utility.yul\":7983:7984   */\n      0x04\n        /* \"#utility.yul\":7976:7991   */\n      mstore\n        /* \"#utility.yul\":8010:8014   */\n      0x24\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8015   */\n      revert\n        /* \"#utility.yul\":8027:8218   */\n    tag_122:\n        /* \"#utility.yul\":8067:8070   */\n      0x00\n        /* \"#utility.yul\":8086:8106   */\n      tag_238\n        /* \"#utility.yul\":8104:8105   */\n      dup3\n        /* \"#utility.yul\":8086:8106   */\n      tag_141\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8081:8106   */\n      swap2\n      pop\n        /* \"#utility.yul\":8120:8140   */\n      tag_239\n        /* \"#utility.yul\":8138:8139   */\n      dup4\n        /* \"#utility.yul\":8120:8140   */\n      tag_141\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8115:8140   */\n      swap3\n      pop\n        /* \"#utility.yul\":8163:8164   */\n      dup3\n        /* \"#utility.yul\":8160:8161   */\n      dup3\n        /* \"#utility.yul\":8156:8165   */\n      add\n        /* \"#utility.yul\":8149:8165   */\n      swap1\n      pop\n        /* \"#utility.yul\":8184:8187   */\n      dup1\n        /* \"#utility.yul\":8181:8182   */\n      dup3\n        /* \"#utility.yul\":8178:8188   */\n      gt\n        /* \"#utility.yul\":8175:8211   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":8191:8209   */\n      tag_241\n      tag_153\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8175:8211   */\n    tag_240:\n        /* \"#utility.yul\":8027:8218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dc8eb9dfe3168f671d47ddb27a08bb57b1d3735078eb085e467965a470794b3764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1194": {
									"entryPoint": null,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 174,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 307,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11103:7",
										"nodeType": "YulBlock",
										"src": "0:11103:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "934:28:7",
													"nodeType": "YulBlock",
													"src": "934:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:7",
																		"nodeType": "YulLiteral",
																		"src": "951:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:7",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:7"
																},
																"nativeSrc": "944:12:7",
																"nodeType": "YulFunctionCall",
																"src": "944:12:7"
															},
															"nativeSrc": "944:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:7"
											},
											{
												"body": {
													"nativeSrc": "1057:28:7",
													"nodeType": "YulBlock",
													"src": "1057:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:7"
																},
																"nativeSrc": "1067:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:7"
															},
															"nativeSrc": "1067:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:7"
											},
											{
												"body": {
													"nativeSrc": "1139:54:7",
													"nodeType": "YulBlock",
													"src": "1139:54:7",
													"statements": [
														{
															"nativeSrc": "1149:38:7",
															"nodeType": "YulAssignment",
															"src": "1149:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:7"
																		},
																		"nativeSrc": "1163:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:7"
																		},
																		"nativeSrc": "1179:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:7"
																},
																"nativeSrc": "1159:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:7",
														"nodeType": "YulTypedName",
														"src": "1122:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"src": "1091:102:7"
											},
											{
												"body": {
													"nativeSrc": "1227:152:7",
													"nodeType": "YulBlock",
													"src": "1227:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:7"
																},
																"nativeSrc": "1237:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:7"
															},
															"nativeSrc": "1237:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:7"
															},
															"nativeSrc": "1334:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:7"
																},
																"nativeSrc": "1358:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:7"
															},
															"nativeSrc": "1358:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:7"
											},
											{
												"body": {
													"nativeSrc": "1428:238:7",
													"nodeType": "YulBlock",
													"src": "1428:238:7",
													"statements": [
														{
															"nativeSrc": "1438:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:7"
																		},
																		"nativeSrc": "1468:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:7"
																},
																"nativeSrc": "1456:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:7",
																"nodeType": "YulBlock",
																"src": "1607:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:7"
																			},
																			"nativeSrc": "1609:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:7"
																		},
																		"nativeSrc": "1609:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:7"
																		},
																		"nativeSrc": "1547:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:7"
																		},
																		"nativeSrc": "1583:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:7"
																},
																"nativeSrc": "1544:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:7"
															},
															"nativeSrc": "1541:88:7",
															"nodeType": "YulIf",
															"src": "1541:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:7"
																},
																"nativeSrc": "1638:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:7"
															},
															"nativeSrc": "1638:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:7",
														"nodeType": "YulTypedName",
														"src": "1414:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:7",
														"nodeType": "YulTypedName",
														"src": "1422:4:7",
														"type": ""
													}
												],
												"src": "1385:281:7"
											},
											{
												"body": {
													"nativeSrc": "1713:88:7",
													"nodeType": "YulBlock",
													"src": "1713:88:7",
													"statements": [
														{
															"nativeSrc": "1723:30:7",
															"nodeType": "YulAssignment",
															"src": "1723:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:7"
																},
																"nativeSrc": "1733:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:7"
																},
																"nativeSrc": "1762:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:7"
															},
															"nativeSrc": "1762:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:7",
														"nodeType": "YulTypedName",
														"src": "1697:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:7",
														"nodeType": "YulTypedName",
														"src": "1706:6:7",
														"type": ""
													}
												],
												"src": "1672:129:7"
											},
											{
												"body": {
													"nativeSrc": "1874:241:7",
													"nodeType": "YulBlock",
													"src": "1874:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:7",
																"nodeType": "YulBlock",
																"src": "1979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:7"
																			},
																			"nativeSrc": "1981:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:7"
																		},
																		"nativeSrc": "1981:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:7"
																},
																"nativeSrc": "1948:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:7"
															},
															"nativeSrc": "1945:56:7",
															"nodeType": "YulIf",
															"src": "1945:56:7"
														},
														{
															"nativeSrc": "2011:37:7",
															"nodeType": "YulAssignment",
															"src": "2011:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:7"
																},
																"nativeSrc": "2019:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:7"
																}
															]
														},
														{
															"nativeSrc": "2085:23:7",
															"nodeType": "YulAssignment",
															"src": "2085:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:7"
																},
																"nativeSrc": "2093:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:7",
														"nodeType": "YulTypedName",
														"src": "1858:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:7",
														"nodeType": "YulTypedName",
														"src": "1869:4:7",
														"type": ""
													}
												],
												"src": "1807:308:7"
											},
											{
												"body": {
													"nativeSrc": "2183:77:7",
													"nodeType": "YulBlock",
													"src": "2183:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2200:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2205:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2205:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2210:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2194:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:7"
																},
																"nativeSrc": "2194:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2194:23:7"
															},
															"nativeSrc": "2194:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "2194:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2237:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2237:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2242:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2233:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:7"
																		},
																		"nativeSrc": "2233:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2233:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2226:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:7"
																},
																"nativeSrc": "2226:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2226:27:7"
															},
															"nativeSrc": "2226:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2226:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:7",
														"nodeType": "YulTypedName",
														"src": "2165:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:7",
														"nodeType": "YulTypedName",
														"src": "2170:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:7",
														"nodeType": "YulTypedName",
														"src": "2175:6:7",
														"type": ""
													}
												],
												"src": "2121:139:7"
											},
											{
												"body": {
													"nativeSrc": "2361:339:7",
													"nodeType": "YulBlock",
													"src": "2361:339:7",
													"statements": [
														{
															"nativeSrc": "2371:75:7",
															"nodeType": "YulAssignment",
															"src": "2371:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2438:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2438:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2396:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2396:41:7"
																		},
																		"nativeSrc": "2396:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2380:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2380:15:7"
																},
																"nativeSrc": "2380:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2380:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2462:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:7"
																},
																"nativeSrc": "2455:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2455:21:7"
															},
															"nativeSrc": "2455:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2455:21:7"
														},
														{
															"nativeSrc": "2485:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2500:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2507:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2496:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:7"
																},
																"nativeSrc": "2496:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2496:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2489:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2489:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2550:83:7",
																"nodeType": "YulBlock",
																"src": "2550:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2552:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2552:77:7"
																			},
																			"nativeSrc": "2552:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:79:7"
																		},
																		"nativeSrc": "2552:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2531:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2531:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2536:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:7"
																		},
																		"nativeSrc": "2527:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2545:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2524:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2524:2:7"
																},
																"nativeSrc": "2524:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2524:25:7"
															},
															"nativeSrc": "2521:112:7",
															"nodeType": "YulIf",
															"src": "2521:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2677:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2677:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2682:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2682:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2687:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2642:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2642:34:7"
																},
																"nativeSrc": "2642:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2642:52:7"
															},
															"nativeSrc": "2642:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2642:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2266:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2334:3:7",
														"nodeType": "YulTypedName",
														"src": "2334:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2339:6:7",
														"nodeType": "YulTypedName",
														"src": "2339:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:7",
														"nodeType": "YulTypedName",
														"src": "2347:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2355:5:7",
														"nodeType": "YulTypedName",
														"src": "2355:5:7",
														"type": ""
													}
												],
												"src": "2266:434:7"
											},
											{
												"body": {
													"nativeSrc": "2793:282:7",
													"nodeType": "YulBlock",
													"src": "2793:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2842:83:7",
																"nodeType": "YulBlock",
																"src": "2842:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2844:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2844:77:7"
																			},
																			"nativeSrc": "2844:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2844:79:7"
																		},
																		"nativeSrc": "2844:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2844:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2829:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2829:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2817:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:7"
																				},
																				"nativeSrc": "2817:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2817:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2836:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:7"
																		},
																		"nativeSrc": "2813:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2806:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:7"
																},
																"nativeSrc": "2806:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2806:35:7"
															},
															"nativeSrc": "2803:122:7",
															"nodeType": "YulIf",
															"src": "2803:122:7"
														},
														{
															"nativeSrc": "2934:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2954:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2948:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:7"
																},
																"nativeSrc": "2948:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2948:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2938:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2970:99:7",
															"nodeType": "YulAssignment",
															"src": "2970:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3042:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3042:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3050:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3038:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:7"
																		},
																		"nativeSrc": "3038:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3057:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3057:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3065:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2979:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2979:58:7"
																},
																"nativeSrc": "2979:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2979:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2970:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2720:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2771:6:7",
														"nodeType": "YulTypedName",
														"src": "2771:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2779:3:7",
														"nodeType": "YulTypedName",
														"src": "2779:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2787:5:7",
														"nodeType": "YulTypedName",
														"src": "2787:5:7",
														"type": ""
													}
												],
												"src": "2720:355:7"
											},
											{
												"body": {
													"nativeSrc": "3126:32:7",
													"nodeType": "YulBlock",
													"src": "3126:32:7",
													"statements": [
														{
															"nativeSrc": "3136:16:7",
															"nodeType": "YulAssignment",
															"src": "3136:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3147:5:7",
																"nodeType": "YulIdentifier",
																"src": "3147:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3136:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3136:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3081:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:7",
														"nodeType": "YulTypedName",
														"src": "3108:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3118:7:7",
														"nodeType": "YulTypedName",
														"src": "3118:7:7",
														"type": ""
													}
												],
												"src": "3081:77:7"
											},
											{
												"body": {
													"nativeSrc": "3207:79:7",
													"nodeType": "YulBlock",
													"src": "3207:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:16:7",
																"nodeType": "YulBlock",
																"src": "3264:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3273:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3276:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3266:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:7"
																			},
																			"nativeSrc": "3266:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3266:12:7"
																		},
																		"nativeSrc": "3266:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3266:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3255:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3255:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3237:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3237:17:7"
																				},
																				"nativeSrc": "3237:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3237:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3227:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3227:2:7"
																		},
																		"nativeSrc": "3227:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3220:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:7"
																},
																"nativeSrc": "3220:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3220:43:7"
															},
															"nativeSrc": "3217:63:7",
															"nodeType": "YulIf",
															"src": "3217:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3164:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:7",
														"nodeType": "YulTypedName",
														"src": "3200:5:7",
														"type": ""
													}
												],
												"src": "3164:122:7"
											},
											{
												"body": {
													"nativeSrc": "3355:80:7",
													"nodeType": "YulBlock",
													"src": "3355:80:7",
													"statements": [
														{
															"nativeSrc": "3365:22:7",
															"nodeType": "YulAssignment",
															"src": "3365:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3380:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3374:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3374:5:7"
																},
																"nativeSrc": "3374:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3374:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3365:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3423:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3423:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3396:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3396:26:7"
																},
																"nativeSrc": "3396:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3396:33:7"
															},
															"nativeSrc": "3396:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3396:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3292:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3333:6:7",
														"nodeType": "YulTypedName",
														"src": "3333:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3341:3:7",
														"nodeType": "YulTypedName",
														"src": "3341:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3349:5:7",
														"nodeType": "YulTypedName",
														"src": "3349:5:7",
														"type": ""
													}
												],
												"src": "3292:143:7"
											},
											{
												"body": {
													"nativeSrc": "3589:1018:7",
													"nodeType": "YulBlock",
													"src": "3589:1018:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3636:83:7",
																"nodeType": "YulBlock",
																"src": "3636:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3638:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3638:77:7"
																			},
																			"nativeSrc": "3638:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3638:79:7"
																		},
																		"nativeSrc": "3638:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3610:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3610:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3619:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:7"
																		},
																		"nativeSrc": "3606:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3631:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3631:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:7"
																},
																"nativeSrc": "3602:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3602:33:7"
															},
															"nativeSrc": "3599:120:7",
															"nodeType": "YulIf",
															"src": "3599:120:7"
														},
														{
															"nativeSrc": "3729:128:7",
															"nodeType": "YulBlock",
															"src": "3729:128:7",
															"statements": [
																{
																	"nativeSrc": "3744:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3744:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3758:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3758:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3748:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3748:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3773:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3773:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3819:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3819:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3830:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3830:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3815:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3815:3:7"
																				},
																				"nativeSrc": "3815:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3815:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3839:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3783:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3783:31:7"
																		},
																		"nativeSrc": "3783:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3783:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3773:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3773:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3867:292:7",
															"nodeType": "YulBlock",
															"src": "3867:292:7",
															"statements": [
																{
																	"nativeSrc": "3882:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3882:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3906:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3906:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3917:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3917:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3902:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:7"
																				},
																				"nativeSrc": "3902:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3896:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3896:5:7"
																		},
																		"nativeSrc": "3896:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3896:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3886:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3886:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3968:83:7",
																		"nodeType": "YulBlock",
																		"src": "3968:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3970:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3970:77:7"
																					},
																					"nativeSrc": "3970:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3970:79:7"
																				},
																				"nativeSrc": "3970:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3970:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3940:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3940:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3948:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3948:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3937:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3937:2:7"
																		},
																		"nativeSrc": "3937:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3937:30:7"
																	},
																	"nativeSrc": "3934:117:7",
																	"nodeType": "YulIf",
																	"src": "3934:117:7"
																},
																{
																	"nativeSrc": "4065:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4065:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4121:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4121:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4132:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4132:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4117:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4117:3:7"
																				},
																				"nativeSrc": "4117:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4117:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4141:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4141:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4075:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4075:41:7"
																		},
																		"nativeSrc": "4075:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4075:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4065:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4065:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4169:292:7",
															"nodeType": "YulBlock",
															"src": "4169:292:7",
															"statements": [
																{
																	"nativeSrc": "4184:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4184:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4208:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4208:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4219:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4219:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4204:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4204:3:7"
																				},
																				"nativeSrc": "4204:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4198:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4198:5:7"
																		},
																		"nativeSrc": "4198:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4198:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4188:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4188:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4270:83:7",
																		"nodeType": "YulBlock",
																		"src": "4270:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4272:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4272:77:7"
																					},
																					"nativeSrc": "4272:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4272:79:7"
																				},
																				"nativeSrc": "4272:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4272:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4242:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4242:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4250:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4250:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4239:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4239:2:7"
																		},
																		"nativeSrc": "4239:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4239:30:7"
																	},
																	"nativeSrc": "4236:117:7",
																	"nodeType": "YulIf",
																	"src": "4236:117:7"
																},
																{
																	"nativeSrc": "4367:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4367:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4423:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4423:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4434:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4434:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4419:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:7"
																				},
																				"nativeSrc": "4419:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4419:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4443:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4377:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4377:41:7"
																		},
																		"nativeSrc": "4377:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4367:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4367:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4471:129:7",
															"nodeType": "YulBlock",
															"src": "4471:129:7",
															"statements": [
																{
																	"nativeSrc": "4486:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4486:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4500:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4490:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4490:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4516:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4516:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4562:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4562:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4573:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4573:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4558:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:7"
																				},
																				"nativeSrc": "4558:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4558:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4582:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4582:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4526:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4526:31:7"
																		},
																		"nativeSrc": "4526:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4526:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4516:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4516:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "3441:1166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:7",
														"nodeType": "YulTypedName",
														"src": "3535:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3546:7:7",
														"nodeType": "YulTypedName",
														"src": "3546:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3558:6:7",
														"nodeType": "YulTypedName",
														"src": "3558:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3566:6:7",
														"nodeType": "YulTypedName",
														"src": "3566:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3574:6:7",
														"nodeType": "YulTypedName",
														"src": "3574:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3582:6:7",
														"nodeType": "YulTypedName",
														"src": "3582:6:7",
														"type": ""
													}
												],
												"src": "3441:1166:7"
											},
											{
												"body": {
													"nativeSrc": "4672:40:7",
													"nodeType": "YulBlock",
													"src": "4672:40:7",
													"statements": [
														{
															"nativeSrc": "4683:22:7",
															"nodeType": "YulAssignment",
															"src": "4683:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4699:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4699:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:7"
																},
																"nativeSrc": "4693:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4693:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4683:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4613:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4655:5:7",
														"nodeType": "YulTypedName",
														"src": "4655:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4665:6:7",
														"nodeType": "YulTypedName",
														"src": "4665:6:7",
														"type": ""
													}
												],
												"src": "4613:99:7"
											},
											{
												"body": {
													"nativeSrc": "4746:152:7",
													"nodeType": "YulBlock",
													"src": "4746:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4763:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4763:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4766:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4756:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:7"
																},
																"nativeSrc": "4756:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4756:88:7"
															},
															"nativeSrc": "4756:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4756:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4860:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4860:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:7"
																},
																"nativeSrc": "4853:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4853:15:7"
															},
															"nativeSrc": "4853:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4853:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4884:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4887:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4887:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4877:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:7"
																},
																"nativeSrc": "4877:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4877:15:7"
															},
															"nativeSrc": "4877:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4877:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4718:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4718:180:7"
											},
											{
												"body": {
													"nativeSrc": "4955:269:7",
													"nodeType": "YulBlock",
													"src": "4955:269:7",
													"statements": [
														{
															"nativeSrc": "4965:22:7",
															"nodeType": "YulAssignment",
															"src": "4965:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4979:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4979:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4985:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4975:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:7"
																},
																"nativeSrc": "4975:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4975:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4965:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:7"
																}
															]
														},
														{
															"nativeSrc": "4996:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4996:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5026:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5026:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5032:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5022:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:7"
																},
																"nativeSrc": "5022:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5022:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5000:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5000:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5073:51:7",
																"nodeType": "YulBlock",
																"src": "5073:51:7",
																"statements": [
																	{
																		"nativeSrc": "5087:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5087:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5101:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5101:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5109:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5109:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5097:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5097:3:7"
																			},
																			"nativeSrc": "5097:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5053:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5053:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5046:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:7"
																},
																"nativeSrc": "5046:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5046:26:7"
															},
															"nativeSrc": "5043:81:7",
															"nodeType": "YulIf",
															"src": "5043:81:7"
														},
														{
															"body": {
																"nativeSrc": "5176:42:7",
																"nodeType": "YulBlock",
																"src": "5176:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5190:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5190:16:7"
																			},
																			"nativeSrc": "5190:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5190:18:7"
																		},
																		"nativeSrc": "5190:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5190:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5140:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5140:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5163:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5171:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5171:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5160:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5160:2:7"
																		},
																		"nativeSrc": "5160:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5137:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5137:2:7"
																},
																"nativeSrc": "5137:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5137:38:7"
															},
															"nativeSrc": "5134:84:7",
															"nodeType": "YulIf",
															"src": "5134:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4904:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4939:4:7",
														"nodeType": "YulTypedName",
														"src": "4939:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4948:6:7",
														"nodeType": "YulTypedName",
														"src": "4948:6:7",
														"type": ""
													}
												],
												"src": "4904:320:7"
											},
											{
												"body": {
													"nativeSrc": "5284:87:7",
													"nodeType": "YulBlock",
													"src": "5284:87:7",
													"statements": [
														{
															"nativeSrc": "5294:11:7",
															"nodeType": "YulAssignment",
															"src": "5294:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5302:3:7",
																"nodeType": "YulIdentifier",
																"src": "5302:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5322:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5325:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5315:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:7"
																},
																"nativeSrc": "5315:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5315:14:7"
															},
															"nativeSrc": "5315:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5315:14:7"
														},
														{
															"nativeSrc": "5338:26:7",
															"nodeType": "YulAssignment",
															"src": "5338:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5356:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5356:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5359:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5359:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5346:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5346:9:7"
																},
																"nativeSrc": "5346:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5346:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5338:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5338:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5230:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5271:3:7",
														"nodeType": "YulTypedName",
														"src": "5271:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5279:4:7",
														"nodeType": "YulTypedName",
														"src": "5279:4:7",
														"type": ""
													}
												],
												"src": "5230:141:7"
											},
											{
												"body": {
													"nativeSrc": "5421:49:7",
													"nodeType": "YulBlock",
													"src": "5421:49:7",
													"statements": [
														{
															"nativeSrc": "5431:33:7",
															"nodeType": "YulAssignment",
															"src": "5431:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5449:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5449:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5445:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:7"
																		},
																		"nativeSrc": "5445:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5441:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5441:3:7"
																},
																"nativeSrc": "5441:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5441:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5431:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5377:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5404:5:7",
														"nodeType": "YulTypedName",
														"src": "5404:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5414:6:7",
														"nodeType": "YulTypedName",
														"src": "5414:6:7",
														"type": ""
													}
												],
												"src": "5377:93:7"
											},
											{
												"body": {
													"nativeSrc": "5529:54:7",
													"nodeType": "YulBlock",
													"src": "5529:54:7",
													"statements": [
														{
															"nativeSrc": "5539:37:7",
															"nodeType": "YulAssignment",
															"src": "5539:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5564:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5564:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5570:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5570:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5560:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:7"
																},
																"nativeSrc": "5560:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5560:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5539:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5539:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5476:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5504:4:7",
														"nodeType": "YulTypedName",
														"src": "5504:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5510:5:7",
														"nodeType": "YulTypedName",
														"src": "5510:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5520:8:7",
														"nodeType": "YulTypedName",
														"src": "5520:8:7",
														"type": ""
													}
												],
												"src": "5476:107:7"
											},
											{
												"body": {
													"nativeSrc": "5665:317:7",
													"nodeType": "YulBlock",
													"src": "5665:317:7",
													"statements": [
														{
															"nativeSrc": "5675:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5675:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5696:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5696:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5708:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5708:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5692:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:7"
																},
																"nativeSrc": "5692:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5692:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5679:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5679:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5719:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5719:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5750:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5750:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5761:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5761:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5731:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5731:18:7"
																},
																"nativeSrc": "5731:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5731:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5723:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5723:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5837:51:7",
															"nodeType": "YulAssignment",
															"src": "5837:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5868:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5868:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5879:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5879:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5849:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5849:18:7"
																},
																"nativeSrc": "5849:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5849:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5837:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5837:8:7"
																}
															]
														},
														{
															"nativeSrc": "5897:30:7",
															"nodeType": "YulAssignment",
															"src": "5897:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5910:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5921:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5921:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:7"
																		},
																		"nativeSrc": "5917:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5917:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:7"
																},
																"nativeSrc": "5906:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5906:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5897:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5897:5:7"
																}
															]
														},
														{
															"nativeSrc": "5936:40:7",
															"nodeType": "YulAssignment",
															"src": "5936:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5949:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5949:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5960:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5960:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5970:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5970:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:7"
																		},
																		"nativeSrc": "5956:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5946:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5946:2:7"
																},
																"nativeSrc": "5946:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5946:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5589:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5626:5:7",
														"nodeType": "YulTypedName",
														"src": "5626:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5633:10:7",
														"nodeType": "YulTypedName",
														"src": "5633:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5645:8:7",
														"nodeType": "YulTypedName",
														"src": "5645:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5658:6:7",
														"nodeType": "YulTypedName",
														"src": "5658:6:7",
														"type": ""
													}
												],
												"src": "5589:393:7"
											},
											{
												"body": {
													"nativeSrc": "6020:28:7",
													"nodeType": "YulBlock",
													"src": "6020:28:7",
													"statements": [
														{
															"nativeSrc": "6030:12:7",
															"nodeType": "YulAssignment",
															"src": "6030:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6037:5:7",
																"nodeType": "YulIdentifier",
																"src": "6037:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6030:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5988:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6006:5:7",
														"nodeType": "YulTypedName",
														"src": "6006:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6016:3:7",
														"nodeType": "YulTypedName",
														"src": "6016:3:7",
														"type": ""
													}
												],
												"src": "5988:60:7"
											},
											{
												"body": {
													"nativeSrc": "6114:82:7",
													"nodeType": "YulBlock",
													"src": "6114:82:7",
													"statements": [
														{
															"nativeSrc": "6124:66:7",
															"nodeType": "YulAssignment",
															"src": "6124:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6182:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6182:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6164:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6164:17:7"
																				},
																				"nativeSrc": "6164:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6164:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6155:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6155:8:7"
																		},
																		"nativeSrc": "6155:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6137:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6137:17:7"
																},
																"nativeSrc": "6137:53:7",
																"nodeType": "YulFunctionCall",
																"src": "6137:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6124:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6124:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6054:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6094:5:7",
														"nodeType": "YulTypedName",
														"src": "6094:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6104:9:7",
														"nodeType": "YulTypedName",
														"src": "6104:9:7",
														"type": ""
													}
												],
												"src": "6054:142:7"
											},
											{
												"body": {
													"nativeSrc": "6249:28:7",
													"nodeType": "YulBlock",
													"src": "6249:28:7",
													"statements": [
														{
															"nativeSrc": "6259:12:7",
															"nodeType": "YulAssignment",
															"src": "6259:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6266:5:7",
																"nodeType": "YulIdentifier",
																"src": "6266:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6259:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6202:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:7",
														"nodeType": "YulTypedName",
														"src": "6235:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6245:3:7",
														"nodeType": "YulTypedName",
														"src": "6245:3:7",
														"type": ""
													}
												],
												"src": "6202:75:7"
											},
											{
												"body": {
													"nativeSrc": "6359:193:7",
													"nodeType": "YulBlock",
													"src": "6359:193:7",
													"statements": [
														{
															"nativeSrc": "6369:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6369:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6424:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6424:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6393:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6393:30:7"
																},
																"nativeSrc": "6393:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6393:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6373:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6373:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6448:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6448:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6488:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6488:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6482:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:7"
																				},
																				"nativeSrc": "6482:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6482:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6495:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6495:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6527:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6527:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6503:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6503:23:7"
																				},
																				"nativeSrc": "6503:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6454:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6454:27:7"
																		},
																		"nativeSrc": "6454:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6454:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6441:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:7"
																},
																"nativeSrc": "6441:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6441:105:7"
															},
															"nativeSrc": "6441:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6441:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6283:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6336:4:7",
														"nodeType": "YulTypedName",
														"src": "6336:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6342:6:7",
														"nodeType": "YulTypedName",
														"src": "6342:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6350:7:7",
														"nodeType": "YulTypedName",
														"src": "6350:7:7",
														"type": ""
													}
												],
												"src": "6283:269:7"
											},
											{
												"body": {
													"nativeSrc": "6607:24:7",
													"nodeType": "YulBlock",
													"src": "6607:24:7",
													"statements": [
														{
															"nativeSrc": "6617:8:7",
															"nodeType": "YulAssignment",
															"src": "6617:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6624:1:7",
																"nodeType": "YulLiteral",
																"src": "6624:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6617:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6558:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6603:3:7",
														"nodeType": "YulTypedName",
														"src": "6603:3:7",
														"type": ""
													}
												],
												"src": "6558:73:7"
											},
											{
												"body": {
													"nativeSrc": "6690:136:7",
													"nodeType": "YulBlock",
													"src": "6690:136:7",
													"statements": [
														{
															"nativeSrc": "6700:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6700:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6714:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6714:30:7"
																},
																"nativeSrc": "6714:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6714:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6704:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6704:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6799:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6799:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6805:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6755:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6755:43:7"
																},
																"nativeSrc": "6755:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6755:65:7"
															},
															"nativeSrc": "6755:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6755:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6637:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6676:4:7",
														"nodeType": "YulTypedName",
														"src": "6676:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6682:6:7",
														"nodeType": "YulTypedName",
														"src": "6682:6:7",
														"type": ""
													}
												],
												"src": "6637:189:7"
											},
											{
												"body": {
													"nativeSrc": "6882:136:7",
													"nodeType": "YulBlock",
													"src": "6882:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6949:63:7",
																"nodeType": "YulBlock",
																"src": "6949:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6993:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6993:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7000:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7000:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6963:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6963:29:7"
																			},
																			"nativeSrc": "6963:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6963:39:7"
																		},
																		"nativeSrc": "6963:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6963:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6902:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6902:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6909:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6909:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6899:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6899:2:7"
																},
																"nativeSrc": "6899:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6899:14:7"
															},
															"nativeSrc": "6892:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6914:26:7",
																"nodeType": "YulBlock",
																"src": "6914:26:7",
																"statements": [
																	{
																		"nativeSrc": "6916:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6916:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6929:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6929:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6936:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6936:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6925:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6925:3:7"
																			},
																			"nativeSrc": "6925:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6925:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6916:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6916:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6896:2:7",
																"nodeType": "YulBlock",
																"src": "6896:2:7",
																"statements": []
															},
															"src": "6892:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6832:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6870:5:7",
														"nodeType": "YulTypedName",
														"src": "6870:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:7",
														"nodeType": "YulTypedName",
														"src": "6877:3:7",
														"type": ""
													}
												],
												"src": "6832:186:7"
											},
											{
												"body": {
													"nativeSrc": "7103:464:7",
													"nodeType": "YulBlock",
													"src": "7103:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7129:431:7",
																"nodeType": "YulBlock",
																"src": "7129:431:7",
																"statements": [
																	{
																		"nativeSrc": "7143:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7143:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7191:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7191:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7159:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7159:31:7"
																			},
																			"nativeSrc": "7159:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7159:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7147:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7147:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7210:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7210:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7233:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7233:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7261:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7261:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7243:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7243:17:7"
																					},
																					"nativeSrc": "7243:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7243:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7229:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7229:3:7"
																			},
																			"nativeSrc": "7229:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7214:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7214:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7430:27:7",
																			"nodeType": "YulBlock",
																			"src": "7430:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7432:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7432:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7447:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7447:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7432:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7432:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7414:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7414:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7426:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7426:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7411:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7411:2:7"
																			},
																			"nativeSrc": "7411:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7411:18:7"
																		},
																		"nativeSrc": "7408:49:7",
																		"nodeType": "YulIf",
																		"src": "7408:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7499:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7499:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7516:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7516:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7544:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7544:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7526:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7526:17:7"
																							},
																							"nativeSrc": "7526:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7526:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7512:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7512:3:7"
																					},
																					"nativeSrc": "7512:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7512:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7470:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7470:28:7"
																			},
																			"nativeSrc": "7470:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:80:7"
																		},
																		"nativeSrc": "7470:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7120:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7120:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7117:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7117:2:7"
																},
																"nativeSrc": "7117:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7117:11:7"
															},
															"nativeSrc": "7114:446:7",
															"nodeType": "YulIf",
															"src": "7114:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7024:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7079:5:7",
														"nodeType": "YulTypedName",
														"src": "7079:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7086:3:7",
														"nodeType": "YulTypedName",
														"src": "7086:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7091:10:7",
														"nodeType": "YulTypedName",
														"src": "7091:10:7",
														"type": ""
													}
												],
												"src": "7024:543:7"
											},
											{
												"body": {
													"nativeSrc": "7636:54:7",
													"nodeType": "YulBlock",
													"src": "7636:54:7",
													"statements": [
														{
															"nativeSrc": "7646:37:7",
															"nodeType": "YulAssignment",
															"src": "7646:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7671:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7671:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7677:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7677:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7667:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7667:3:7"
																},
																"nativeSrc": "7667:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7667:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7646:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7646:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7573:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7611:4:7",
														"nodeType": "YulTypedName",
														"src": "7611:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7617:5:7",
														"nodeType": "YulTypedName",
														"src": "7617:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7627:8:7",
														"nodeType": "YulTypedName",
														"src": "7627:8:7",
														"type": ""
													}
												],
												"src": "7573:117:7"
											},
											{
												"body": {
													"nativeSrc": "7747:118:7",
													"nodeType": "YulBlock",
													"src": "7747:118:7",
													"statements": [
														{
															"nativeSrc": "7757:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7757:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7806:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7806:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7809:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7809:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7802:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7802:3:7"
																				},
																				"nativeSrc": "7802:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7802:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7821:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7821:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7817:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7817:3:7"
																				},
																				"nativeSrc": "7817:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7817:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7773:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7773:28:7"
																		},
																		"nativeSrc": "7773:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7773:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:7"
																},
																"nativeSrc": "7769:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7769:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7761:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7761:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7834:25:7",
															"nodeType": "YulAssignment",
															"src": "7834:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7848:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7848:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7854:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7854:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7844:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7844:3:7"
																},
																"nativeSrc": "7844:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7844:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7834:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7696:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7724:4:7",
														"nodeType": "YulTypedName",
														"src": "7724:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7730:5:7",
														"nodeType": "YulTypedName",
														"src": "7730:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7740:6:7",
														"nodeType": "YulTypedName",
														"src": "7740:6:7",
														"type": ""
													}
												],
												"src": "7696:169:7"
											},
											{
												"body": {
													"nativeSrc": "7951:214:7",
													"nodeType": "YulBlock",
													"src": "7951:214:7",
													"statements": [
														{
															"nativeSrc": "8084:37:7",
															"nodeType": "YulAssignment",
															"src": "8084:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8111:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8117:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8117:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8092:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8092:18:7"
																},
																"nativeSrc": "8092:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8092:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8084:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8084:4:7"
																}
															]
														},
														{
															"nativeSrc": "8130:29:7",
															"nodeType": "YulAssignment",
															"src": "8130:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8141:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8141:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8151:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8151:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8154:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8154:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:7"
																		},
																		"nativeSrc": "8147:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8147:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8138:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8138:2:7"
																},
																"nativeSrc": "8138:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8138:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8130:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8130:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7870:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7932:4:7",
														"nodeType": "YulTypedName",
														"src": "7932:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7938:3:7",
														"nodeType": "YulTypedName",
														"src": "7938:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7946:4:7",
														"nodeType": "YulTypedName",
														"src": "7946:4:7",
														"type": ""
													}
												],
												"src": "7870:295:7"
											},
											{
												"body": {
													"nativeSrc": "8262:1303:7",
													"nodeType": "YulBlock",
													"src": "8262:1303:7",
													"statements": [
														{
															"nativeSrc": "8273:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8273:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8320:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8320:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8287:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8287:32:7"
																},
																"nativeSrc": "8287:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8287:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8277:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8277:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8409:22:7",
																"nodeType": "YulBlock",
																"src": "8409:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8411:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8411:16:7"
																			},
																			"nativeSrc": "8411:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8411:18:7"
																		},
																		"nativeSrc": "8411:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8411:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8381:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8389:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8378:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:7"
																},
																"nativeSrc": "8378:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8378:30:7"
															},
															"nativeSrc": "8375:56:7",
															"nodeType": "YulIf",
															"src": "8375:56:7"
														},
														{
															"nativeSrc": "8441:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8441:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8487:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8487:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8481:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8481:5:7"
																		},
																		"nativeSrc": "8481:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8455:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8455:25:7"
																},
																"nativeSrc": "8455:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8455:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8445:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8445:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8586:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8592:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8592:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8600:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8600:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8540:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8540:45:7"
																},
																"nativeSrc": "8540:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8540:67:7"
															},
															"nativeSrc": "8540:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8540:67:7"
														},
														{
															"nativeSrc": "8617:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8617:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8634:1:7",
																"nodeType": "YulLiteral",
																"src": "8634:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8621:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8621:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8645:17:7",
															"nodeType": "YulAssignment",
															"src": "8645:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8658:4:7",
																"nodeType": "YulLiteral",
																"src": "8658:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8645:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8645:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8709:611:7",
																		"nodeType": "YulBlock",
																		"src": "8709:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8723:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8723:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8742:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8742:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8754:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8754:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8750:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8750:3:7"
																							},
																							"nativeSrc": "8750:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8750:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8738:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8738:3:7"
																					},
																					"nativeSrc": "8738:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8738:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8727:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8727:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8774:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8774:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8820:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8820:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8788:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8788:31:7"
																					},
																					"nativeSrc": "8788:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8788:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8778:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8778:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8838:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8838:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8847:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8847:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8842:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8842:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8906:163:7",
																					"nodeType": "YulBlock",
																					"src": "8906:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8931:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8931:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8949:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8949:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8954:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8954:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8945:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8945:3:7"
																												},
																												"nativeSrc": "8945:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8945:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8939:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8939:5:7"
																										},
																										"nativeSrc": "8939:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8939:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8924:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8924:6:7"
																								},
																								"nativeSrc": "8924:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8924:42:7"
																							},
																							"nativeSrc": "8924:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8924:42:7"
																						},
																						{
																							"nativeSrc": "8983:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8983:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8997:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8997:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9005:1:7",
																										"nodeType": "YulLiteral",
																										"src": "9005:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8993:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8993:3:7"
																								},
																								"nativeSrc": "8993:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8993:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8983:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8983:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9024:31:7",
																							"nodeType": "YulAssignment",
																							"src": "9024:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9041:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "9041:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9052:2:7",
																										"nodeType": "YulLiteral",
																										"src": "9052:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9037:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9037:3:7"
																								},
																								"nativeSrc": "9037:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9037:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9024:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "9024:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8872:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8872:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8875:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8875:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8869:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8869:2:7"
																					},
																					"nativeSrc": "8869:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8869:14:7"
																				},
																				"nativeSrc": "8861:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8884:21:7",
																					"nodeType": "YulBlock",
																					"src": "8884:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8886:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8886:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8895:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8895:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8898:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8898:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8891:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8891:3:7"
																								},
																								"nativeSrc": "8891:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8891:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8886:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8886:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8865:3:7",
																					"nodeType": "YulBlock",
																					"src": "8865:3:7",
																					"statements": []
																				},
																				"src": "8861:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "9105:156:7",
																					"nodeType": "YulBlock",
																					"src": "9105:156:7",
																					"statements": [
																						{
																							"nativeSrc": "9123:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9123:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9150:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9150:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9155:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9155:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9146:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9146:3:7"
																										},
																										"nativeSrc": "9146:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9146:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9140:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9140:5:7"
																								},
																								"nativeSrc": "9140:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9140:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9127:9:7",
																									"nodeType": "YulTypedName",
																									"src": "9127:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9190:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9190:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9217:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9217:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9232:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9232:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9240:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9240:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9228:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9228:3:7"
																												},
																												"nativeSrc": "9228:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9228:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9198:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9198:18:7"
																										},
																										"nativeSrc": "9198:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9198:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9183:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9183:6:7"
																								},
																								"nativeSrc": "9183:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9183:64:7"
																							},
																							"nativeSrc": "9183:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9183:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9088:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9088:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9097:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9097:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9085:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9085:2:7"
																					},
																					"nativeSrc": "9085:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9085:19:7"
																				},
																				"nativeSrc": "9082:179:7",
																				"nodeType": "YulIf",
																				"src": "9082:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9281:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9281:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9295:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9295:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9303:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9303:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9291:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9291:3:7"
																									},
																									"nativeSrc": "9291:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9291:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9307:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9307:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9287:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9287:3:7"
																							},
																							"nativeSrc": "9287:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9287:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9274:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9274:6:7"
																					},
																					"nativeSrc": "9274:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9274:36:7"
																				},
																				"nativeSrc": "9274:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9274:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8702:618:7",
																	"nodeType": "YulCase",
																	"src": "8702:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8707:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9337:222:7",
																		"nodeType": "YulBlock",
																		"src": "9337:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9351:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9351:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9364:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9364:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9355:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9355:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9388:67:7",
																					"nodeType": "YulBlock",
																					"src": "9388:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9406:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9406:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9425:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9425:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9430:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9430:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9421:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9421:3:7"
																										},
																										"nativeSrc": "9421:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9421:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9415:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9415:5:7"
																								},
																								"nativeSrc": "9415:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9415:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9406:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9406:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9381:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9381:6:7"
																				},
																				"nativeSrc": "9378:77:7",
																				"nodeType": "YulIf",
																				"src": "9378:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9475:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9475:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9534:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9534:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9541:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9541:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9481:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9481:52:7"
																							},
																							"nativeSrc": "9481:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9481:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9468:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:7"
																					},
																					"nativeSrc": "9468:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9468:81:7"
																				},
																				"nativeSrc": "9468:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9468:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9329:230:7",
																	"nodeType": "YulCase",
																	"src": "9329:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8682:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8682:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8690:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8690:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8679:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8679:2:7"
																},
																"nativeSrc": "8679:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8679:14:7"
															},
															"nativeSrc": "8672:887:7",
															"nodeType": "YulSwitch",
															"src": "8672:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8170:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8251:4:7",
														"nodeType": "YulTypedName",
														"src": "8251:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8257:3:7",
														"nodeType": "YulTypedName",
														"src": "8257:3:7",
														"type": ""
													}
												],
												"src": "8170:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9636:53:7",
													"nodeType": "YulBlock",
													"src": "9636:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9653:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9653:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9676:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9676:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9658:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9658:17:7"
																		},
																		"nativeSrc": "9658:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9658:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9646:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9646:6:7"
																},
																"nativeSrc": "9646:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9646:37:7"
															},
															"nativeSrc": "9646:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9646:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9571:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9624:5:7",
														"nodeType": "YulTypedName",
														"src": "9624:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9631:3:7",
														"nodeType": "YulTypedName",
														"src": "9631:3:7",
														"type": ""
													}
												],
												"src": "9571:118:7"
											},
											{
												"body": {
													"nativeSrc": "9793:124:7",
													"nodeType": "YulBlock",
													"src": "9793:124:7",
													"statements": [
														{
															"nativeSrc": "9803:26:7",
															"nodeType": "YulAssignment",
															"src": "9803:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9815:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9815:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9826:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9826:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:7"
																},
																"nativeSrc": "9811:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9811:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9803:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9803:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9883:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9883:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9896:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9896:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9907:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9907:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9892:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:7"
																		},
																		"nativeSrc": "9892:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9839:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9839:43:7"
																},
																"nativeSrc": "9839:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9839:71:7"
															},
															"nativeSrc": "9839:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9839:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9695:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9765:9:7",
														"nodeType": "YulTypedName",
														"src": "9765:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9777:6:7",
														"nodeType": "YulTypedName",
														"src": "9777:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9788:4:7",
														"nodeType": "YulTypedName",
														"src": "9788:4:7",
														"type": ""
													}
												],
												"src": "9695:222:7"
											},
											{
												"body": {
													"nativeSrc": "9951:152:7",
													"nodeType": "YulBlock",
													"src": "9951:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9968:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9968:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9971:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9971:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9961:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:7"
																},
																"nativeSrc": "9961:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9961:88:7"
															},
															"nativeSrc": "9961:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9961:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10065:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10065:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10068:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10068:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10058:6:7"
																},
																"nativeSrc": "10058:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10058:15:7"
															},
															"nativeSrc": "10058:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10058:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10089:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10089:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10092:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10092:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10082:6:7"
																},
																"nativeSrc": "10082:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10082:15:7"
															},
															"nativeSrc": "10082:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10082:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9923:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9923:180:7"
											},
											{
												"body": {
													"nativeSrc": "10153:147:7",
													"nodeType": "YulBlock",
													"src": "10153:147:7",
													"statements": [
														{
															"nativeSrc": "10163:25:7",
															"nodeType": "YulAssignment",
															"src": "10163:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10186:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10186:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10168:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10168:17:7"
																},
																"nativeSrc": "10168:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10168:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10163:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10163:1:7"
																}
															]
														},
														{
															"nativeSrc": "10197:25:7",
															"nodeType": "YulAssignment",
															"src": "10197:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10220:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10220:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10202:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10202:17:7"
																},
																"nativeSrc": "10202:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10202:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10197:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10197:1:7"
																}
															]
														},
														{
															"nativeSrc": "10231:16:7",
															"nodeType": "YulAssignment",
															"src": "10231:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10242:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10242:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10245:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10245:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10238:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10238:3:7"
																},
																"nativeSrc": "10238:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10238:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10231:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10231:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10271:22:7",
																"nodeType": "YulBlock",
																"src": "10271:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10273:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10273:16:7"
																			},
																			"nativeSrc": "10273:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10273:18:7"
																		},
																		"nativeSrc": "10273:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10273:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10263:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10263:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10266:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10266:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10260:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10260:2:7"
																},
																"nativeSrc": "10260:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10260:10:7"
															},
															"nativeSrc": "10257:36:7",
															"nodeType": "YulIf",
															"src": "10257:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10109:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10140:1:7",
														"nodeType": "YulTypedName",
														"src": "10140:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10143:1:7",
														"nodeType": "YulTypedName",
														"src": "10143:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10149:3:7",
														"nodeType": "YulTypedName",
														"src": "10149:3:7",
														"type": ""
													}
												],
												"src": "10109:191:7"
											},
											{
												"body": {
													"nativeSrc": "10371:53:7",
													"nodeType": "YulBlock",
													"src": "10371:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10388:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10388:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10411:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10411:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10393:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10393:17:7"
																		},
																		"nativeSrc": "10393:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10393:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10381:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10381:6:7"
																},
																"nativeSrc": "10381:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10381:37:7"
															},
															"nativeSrc": "10381:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10381:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10306:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10359:5:7",
														"nodeType": "YulTypedName",
														"src": "10359:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10366:3:7",
														"nodeType": "YulTypedName",
														"src": "10366:3:7",
														"type": ""
													}
												],
												"src": "10306:118:7"
											},
											{
												"body": {
													"nativeSrc": "10584:288:7",
													"nodeType": "YulBlock",
													"src": "10584:288:7",
													"statements": [
														{
															"nativeSrc": "10594:26:7",
															"nodeType": "YulAssignment",
															"src": "10594:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10606:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10606:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10617:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10617:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10602:3:7"
																},
																"nativeSrc": "10602:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10602:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10594:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10594:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10674:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10674:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10687:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10687:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10698:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10698:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10683:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10683:3:7"
																		},
																		"nativeSrc": "10683:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10683:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10630:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10630:43:7"
																},
																"nativeSrc": "10630:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10630:71:7"
															},
															"nativeSrc": "10630:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10630:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10755:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10755:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10768:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10768:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10779:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10779:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10764:3:7"
																		},
																		"nativeSrc": "10764:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10764:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10711:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10711:43:7"
																},
																"nativeSrc": "10711:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10711:72:7"
															},
															"nativeSrc": "10711:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10711:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10837:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10837:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10850:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10850:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10861:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10861:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10846:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10846:3:7"
																		},
																		"nativeSrc": "10846:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10846:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10793:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10793:43:7"
																},
																"nativeSrc": "10793:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10793:72:7"
															},
															"nativeSrc": "10793:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10793:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10430:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10540:9:7",
														"nodeType": "YulTypedName",
														"src": "10540:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10552:6:7",
														"nodeType": "YulTypedName",
														"src": "10552:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10560:6:7",
														"nodeType": "YulTypedName",
														"src": "10560:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10568:6:7",
														"nodeType": "YulTypedName",
														"src": "10568:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10579:4:7",
														"nodeType": "YulTypedName",
														"src": "10579:4:7",
														"type": ""
													}
												],
												"src": "10430:442:7"
											},
											{
												"body": {
													"nativeSrc": "10976:124:7",
													"nodeType": "YulBlock",
													"src": "10976:124:7",
													"statements": [
														{
															"nativeSrc": "10986:26:7",
															"nodeType": "YulAssignment",
															"src": "10986:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10998:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10998:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11009:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11009:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10994:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10994:3:7"
																},
																"nativeSrc": "10994:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10994:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10986:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10986:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11066:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11066:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11079:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11079:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11090:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11090:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11075:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11075:3:7"
																		},
																		"nativeSrc": "11075:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11075:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11022:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11022:43:7"
																},
																"nativeSrc": "11022:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11022:71:7"
															},
															"nativeSrc": "11022:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11022:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10878:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10948:9:7",
														"nodeType": "YulTypedName",
														"src": "10948:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10960:6:7",
														"nodeType": "YulTypedName",
														"src": "10960:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10971:4:7",
														"nodeType": "YulTypedName",
														"src": "10971:4:7",
														"type": ""
													}
												],
												"src": "10878:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161189638038061189683398181016040528101906100319190610526565b8282816003908161004291906107c6565b50806004908161005291906107c6565b50505061006533826100ae60201b60201c565b8360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505061097a565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361011e575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161011591906108a4565b60405180910390fd5b61012f5f838361013360201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610183578060025f82825461017791906108ea565b92505081905550610251565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561020c578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016102039392919061092c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610298578060025f82825403925050819055506102e2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161033f9190610961565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103868261035d565b9050919050565b6103968161037c565b81146103a0575f80fd5b50565b5f815190506103b18161038d565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610405826103bf565b810181811067ffffffffffffffff82111715610424576104236103cf565b5b80604052505050565b5f61043661034c565b905061044282826103fc565b919050565b5f67ffffffffffffffff821115610461576104606103cf565b5b61046a826103bf565b9050602081019050919050565b8281835e5f83830152505050565b5f61049761049284610447565b61042d565b9050828152602081018484840111156104b3576104b26103bb565b5b6104be848285610477565b509392505050565b5f82601f8301126104da576104d96103b7565b5b81516104ea848260208601610485565b91505092915050565b5f819050919050565b610505816104f3565b811461050f575f80fd5b50565b5f81519050610520816104fc565b92915050565b5f805f806080858703121561053e5761053d610355565b5b5f61054b878288016103a3565b945050602085015167ffffffffffffffff81111561056c5761056b610359565b5b610578878288016104c6565b935050604085015167ffffffffffffffff81111561059957610598610359565b5b6105a5878288016104c6565b92505060606105b687828801610512565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061061057607f821691505b602082108103610623576106226105cc565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261064a565b61068f868361064a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6106ca6106c56106c0846104f3565b6106a7565b6104f3565b9050919050565b5f819050919050565b6106e3836106b0565b6106f76106ef826106d1565b848454610656565b825550505050565b5f90565b61070b6106ff565b6107168184846106da565b505050565b5b818110156107395761072e5f82610703565b60018101905061071c565b5050565b601f82111561077e5761074f81610629565b6107588461063b565b81016020851015610767578190505b61077b6107738561063b565b83018261071b565b50505b505050565b5f82821c905092915050565b5f61079e5f1984600802610783565b1980831691505092915050565b5f6107b6838361078f565b9150826002028217905092915050565b6107cf826105c2565b67ffffffffffffffff8111156107e8576107e76103cf565b5b6107f282546105f9565b6107fd82828561073d565b5f60209050601f83116001811461082e575f841561081c578287015190505b61082685826107ab565b86555061088d565b601f19841661083c86610629565b5f5b828110156108635784890151825560018201915060208501945060208101905061083e565b86831015610880578489015161087c601f89168261078f565b8355505b6001600288020188555050505b505050505050565b61089e8161037c565b82525050565b5f6020820190506108b75f830184610895565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108f4826104f3565b91506108ff836104f3565b9250828201905080821115610917576109166108bd565b5b92915050565b610926816104f3565b82525050565b5f60608201905061093f5f830186610895565b61094c602083018561091d565b610959604083018461091d565b949350505050565b5f6020820190506109745f83018461091d565b92915050565b610f0f806109875f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461015a57806395d89b411461018a578063a9059cbb146101a8578063dd62ed3e146101d8578063e1f21c67146102085761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b20565b60405180910390f35b6100d860048036038101906100d39190610bd1565b6102b4565b6040516100e59190610c29565b60405180910390f35b6100f66102d6565b6040516101039190610c51565b60405180910390f35b61012660048036038101906101219190610c6a565b6102df565b6040516101339190610c29565b60405180910390f35b61014461030d565b6040516101519190610cd5565b60405180910390f35b610174600480360381019061016f9190610cee565b610315565b6040516101819190610c51565b60405180910390f35b61019261035a565b60405161019f9190610b20565b60405180910390f35b6101c260048036038101906101bd9190610bd1565b6103ea565b6040516101cf9190610c29565b60405180910390f35b6101f260048036038101906101ed9190610d19565b61040c565b6040516101ff9190610c51565b60405180910390f35b610222600480360381019061021d9190610c6a565b61048e565b005b60606003805461023390610d84565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d84565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61052d565b90506102cb818585610534565b600191505092915050565b5f600254905090565b5f806102e961052d565b90506102f6858285610546565b6103018585856105d8565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461036990610d84565b80601f016020809104026020016040519081016040528092919081815260200182805461039590610d84565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b5050505050905090565b5f806103f461052d565b90506104018185856105d8565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610dfe565b60405180910390fd5b610528838383610534565b505050565b5f33905090565b61054183838360016106c8565b505050565b5f610551848461040c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105d257818110156105c3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016105ba93929190610e2b565b60405180910390fd5b6105d184848484035f6106c8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610648575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161063f9190610e60565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106b8575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106af9190610e60565b60405180910390fd5b6106c3838383610897565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610738575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161072f9190610e60565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107a8575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161079f9190610e60565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610891578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108889190610c51565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108e7578060025f8282546108db9190610ea6565b925050819055506109b5565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610970578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161096793929190610e2b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109fc578060025f8282540392505081905550610a46565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610aa39190610c51565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610af282610ab0565b610afc8185610aba565b9350610b0c818560208601610aca565b610b1581610ad8565b840191505092915050565b5f6020820190508181035f830152610b388184610ae8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b6d82610b44565b9050919050565b610b7d81610b63565b8114610b87575f80fd5b50565b5f81359050610b9881610b74565b92915050565b5f819050919050565b610bb081610b9e565b8114610bba575f80fd5b50565b5f81359050610bcb81610ba7565b92915050565b5f8060408385031215610be757610be6610b40565b5b5f610bf485828601610b8a565b9250506020610c0585828601610bbd565b9150509250929050565b5f8115159050919050565b610c2381610c0f565b82525050565b5f602082019050610c3c5f830184610c1a565b92915050565b610c4b81610b9e565b82525050565b5f602082019050610c645f830184610c42565b92915050565b5f805f60608486031215610c8157610c80610b40565b5b5f610c8e86828701610b8a565b9350506020610c9f86828701610b8a565b9250506040610cb086828701610bbd565b9150509250925092565b5f60ff82169050919050565b610ccf81610cba565b82525050565b5f602082019050610ce85f830184610cc6565b92915050565b5f60208284031215610d0357610d02610b40565b5b5f610d1084828501610b8a565b91505092915050565b5f8060408385031215610d2f57610d2e610b40565b5b5f610d3c85828601610b8a565b9250506020610d4d85828601610b8a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d9b57607f821691505b602082108103610dae57610dad610d57565b5b50919050565b7f496e76616c6964417070726f76657200000000000000000000000000000000005f82015250565b5f610de8600f83610aba565b9150610df382610db4565b602082019050919050565b5f6020820190508181035f830152610e1581610ddc565b9050919050565b610e2581610b63565b82525050565b5f606082019050610e3e5f830186610e1c565b610e4b6020830185610c42565b610e586040830184610c42565b949350505050565b5f602082019050610e735f830184610e1c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610eb082610b9e565b9150610ebb83610b9e565b9250828201905080821115610ed357610ed2610e79565b5b9291505056fea2646970667358221220dc8eb9dfe3168f671d47ddb27a08bb57b1d3735078eb085e467965a470794b3764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1896 CODESIZE SUB DUP1 PUSH2 0x1896 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST POP POP POP PUSH2 0x65 CALLER DUP3 PUSH2 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x97A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F PUSH0 DUP4 DUP4 PUSH2 0x133 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x183 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x8EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x251 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x298 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2E2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x386 DUP3 PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x396 DUP2 PUSH2 0x37C JUMP JUMPDEST DUP2 EQ PUSH2 0x3A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B1 DUP2 PUSH2 0x38D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x405 DUP3 PUSH2 0x3BF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x424 JUMPI PUSH2 0x423 PUSH2 0x3CF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x436 PUSH2 0x34C JUMP JUMPDEST SWAP1 POP PUSH2 0x442 DUP3 DUP3 PUSH2 0x3FC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x3CF JUMP JUMPDEST JUMPDEST PUSH2 0x46A DUP3 PUSH2 0x3BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x497 PUSH2 0x492 DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4B3 JUMPI PUSH2 0x4B2 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH2 0x4BE DUP5 DUP3 DUP6 PUSH2 0x477 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DA JUMPI PUSH2 0x4D9 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x485 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x505 DUP2 PUSH2 0x4F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x50F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x520 DUP2 PUSH2 0x4FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x355 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x54B DUP8 DUP3 DUP9 ADD PUSH2 0x3A3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56C JUMPI PUSH2 0x56B PUSH2 0x359 JUMP JUMPDEST JUMPDEST PUSH2 0x578 DUP8 DUP3 DUP9 ADD PUSH2 0x4C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x599 JUMPI PUSH2 0x598 PUSH2 0x359 JUMP JUMPDEST JUMPDEST PUSH2 0x5A5 DUP8 DUP3 DUP9 ADD PUSH2 0x4C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x5B6 DUP8 DUP3 DUP9 ADD PUSH2 0x512 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x610 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x623 JUMPI PUSH2 0x622 PUSH2 0x5CC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x685 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x68F DUP7 DUP4 PUSH2 0x64A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6CA PUSH2 0x6C5 PUSH2 0x6C0 DUP5 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E3 DUP4 PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x6EF DUP3 PUSH2 0x6D1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x656 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x716 DUP2 DUP5 DUP5 PUSH2 0x6DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x739 JUMPI PUSH2 0x72E PUSH0 DUP3 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x71C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x77E JUMPI PUSH2 0x74F DUP2 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x758 DUP5 PUSH2 0x63B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x767 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x77B PUSH2 0x773 DUP6 PUSH2 0x63B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x71B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x783 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7B6 DUP4 DUP4 PUSH2 0x78F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7CF DUP3 PUSH2 0x5C2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E8 JUMPI PUSH2 0x7E7 PUSH2 0x3CF JUMP JUMPDEST JUMPDEST PUSH2 0x7F2 DUP3 SLOAD PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x7FD DUP3 DUP3 DUP6 PUSH2 0x73D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x82E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x81C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x826 DUP6 DUP3 PUSH2 0x7AB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x88D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x83C DUP7 PUSH2 0x629 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x863 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x83E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x880 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x87C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x78F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x89E DUP2 PUSH2 0x37C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x895 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8F4 DUP3 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FF DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x917 JUMPI PUSH2 0x916 PUSH2 0x8BD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0x4F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x93F PUSH0 DUP4 ADD DUP7 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x94C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x959 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x91D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x974 PUSH0 DUP4 ADD DUP5 PUSH2 0x91D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0F DUP1 PUSH2 0x987 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x208 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F4 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH2 0x401 DUP2 DUP6 DUP6 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x528 DUP4 DUP4 DUP4 PUSH2 0x534 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x541 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x551 DUP5 DUP5 PUSH2 0x40C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5D2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5C3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6C8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x648 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C3 DUP4 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x738 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x891 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x970 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9FC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA46 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF2 DUP3 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0xAFC DUP2 DUP6 PUSH2 0xABA JUMP JUMPDEST SWAP4 POP PUSH2 0xB0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB15 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB38 DUP2 DUP5 PUSH2 0xAE8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB6D DUP3 PUSH2 0xB44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7D DUP2 PUSH2 0xB63 JUMP JUMPDEST DUP2 EQ PUSH2 0xB87 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB0 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCB DUP2 PUSH2 0xBA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF4 DUP6 DUP3 DUP7 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC05 DUP6 DUP3 DUP7 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0xC0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3C PUSH0 DUP4 ADD DUP5 PUSH2 0xC1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4B DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC64 PUSH0 DUP4 ADD DUP5 PUSH2 0xC42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCF DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE8 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD10 DUP5 DUP3 DUP6 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH2 0xD2E PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD3C DUP6 DUP3 DUP7 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD4D DUP6 DUP3 DUP7 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDAE JUMPI PUSH2 0xDAD PUSH2 0xD57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964417070726F7665720000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE8 PUSH1 0xF DUP4 PUSH2 0xABA JUMP JUMPDEST SWAP2 POP PUSH2 0xDF3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE15 DUP2 PUSH2 0xDDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0xB63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE3E PUSH0 DUP4 ADD DUP7 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0xE4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC42 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE73 PUSH0 DUP4 ADD DUP5 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEB0 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xEBB DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED2 PUSH2 0xE79 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP15 0xB9 0xDF 0xE3 AND DUP16 PUSH8 0x1D47DDB27A08BB57 0xB1 0xD3 PUSH20 0x5078EB085E467965A470794B3764736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "3146:459:6:-:0;;;3212:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3324:4;3330:6;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;3352:32:6::1;3358:10;3370:13;3352:5;;;:32;;:::i;:::-;3401:11;3394:4;;:18;;;;;;;;;;;;;;;;;;3212:207:::0;;;;3146:459;;7458:208:2;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:139::-;2210:6;2205:3;2200;2194:23;2251:1;2242:6;2237:3;2233:16;2226:27;2121:139;;;:::o;2266:434::-;2355:5;2380:66;2396:49;2438:6;2396:49;:::i;:::-;2380:66;:::i;:::-;2371:75;;2469:6;2462:5;2455:21;2507:4;2500:5;2496:16;2545:3;2536:6;2531:3;2527:16;2524:25;2521:112;;;2552:79;;:::i;:::-;2521:112;2642:52;2687:6;2682:3;2677;2642:52;:::i;:::-;2361:339;2266:434;;;;;:::o;2720:355::-;2787:5;2836:3;2829:4;2821:6;2817:17;2813:27;2803:122;;2844:79;;:::i;:::-;2803:122;2954:6;2948:13;2979:90;3065:3;3057:6;3050:4;3042:6;3038:17;2979:90;:::i;:::-;2970:99;;2793:282;2720:355;;;;:::o;3081:77::-;3118:7;3147:5;3136:16;;3081:77;;;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:143::-;3349:5;3380:6;3374:13;3365:22;;3396:33;3423:5;3396:33;:::i;:::-;3292:143;;;;:::o;3441:1166::-;3558:6;3566;3574;3582;3631:3;3619:9;3610:7;3606:23;3602:33;3599:120;;;3638:79;;:::i;:::-;3599:120;3758:1;3783:64;3839:7;3830:6;3819:9;3815:22;3783:64;:::i;:::-;3773:74;;3729:128;3917:2;3906:9;3902:18;3896:25;3948:18;3940:6;3937:30;3934:117;;;3970:79;;:::i;:::-;3934:117;4075:74;4141:7;4132:6;4121:9;4117:22;4075:74;:::i;:::-;4065:84;;3867:292;4219:2;4208:9;4204:18;4198:25;4250:18;4242:6;4239:30;4236:117;;;4272:79;;:::i;:::-;4236:117;4377:74;4443:7;4434:6;4423:9;4419:22;4377:74;:::i;:::-;4367:84;;4169:292;4500:2;4526:64;4582:7;4573:6;4562:9;4558:22;4526:64;:::i;:::-;4516:74;;4471:129;3441:1166;;;;;;;:::o;4613:99::-;4665:6;4699:5;4693:12;4683:22;;4613:99;;;:::o;4718:180::-;4766:77;4763:1;4756:88;4863:4;4860:1;4853:15;4887:4;4884:1;4877:15;4904:320;4948:6;4985:1;4979:4;4975:12;4965:22;;5032:1;5026:4;5022:12;5053:18;5043:81;;5109:4;5101:6;5097:17;5087:27;;5043:81;5171:2;5163:6;5160:14;5140:18;5137:38;5134:84;;5190:18;;:::i;:::-;5134:84;4955:269;4904:320;;;:::o;5230:141::-;5279:4;5302:3;5294:11;;5325:3;5322:1;5315:14;5359:4;5356:1;5346:18;5338:26;;5230:141;;;:::o;5377:93::-;5414:6;5461:2;5456;5449:5;5445:14;5441:23;5431:33;;5377:93;;;:::o;5476:107::-;5520:8;5570:5;5564:4;5560:16;5539:37;;5476:107;;;;:::o;5589:393::-;5658:6;5708:1;5696:10;5692:18;5731:97;5761:66;5750:9;5731:97;:::i;:::-;5849:39;5879:8;5868:9;5849:39;:::i;:::-;5837:51;;5921:4;5917:9;5910:5;5906:21;5897:30;;5970:4;5960:8;5956:19;5949:5;5946:30;5936:40;;5665:317;;5589:393;;;;;:::o;5988:60::-;6016:3;6037:5;6030:12;;5988:60;;;:::o;6054:142::-;6104:9;6137:53;6155:34;6164:24;6182:5;6164:24;:::i;:::-;6155:34;:::i;:::-;6137:53;:::i;:::-;6124:66;;6054:142;;;:::o;6202:75::-;6245:3;6266:5;6259:12;;6202:75;;;:::o;6283:269::-;6393:39;6424:7;6393:39;:::i;:::-;6454:91;6503:41;6527:16;6503:41;:::i;:::-;6495:6;6488:4;6482:11;6454:91;:::i;:::-;6448:4;6441:105;6359:193;6283:269;;;:::o;6558:73::-;6603:3;6558:73;:::o;6637:189::-;6714:32;;:::i;:::-;6755:65;6813:6;6805;6799:4;6755:65;:::i;:::-;6690:136;6637:189;;:::o;6832:186::-;6892:120;6909:3;6902:5;6899:14;6892:120;;;6963:39;7000:1;6993:5;6963:39;:::i;:::-;6936:1;6929:5;6925:13;6916:22;;6892:120;;;6832:186;;:::o;7024:543::-;7125:2;7120:3;7117:11;7114:446;;;7159:38;7191:5;7159:38;:::i;:::-;7243:29;7261:10;7243:29;:::i;:::-;7233:8;7229:44;7426:2;7414:10;7411:18;7408:49;;;7447:8;7432:23;;7408:49;7470:80;7526:22;7544:3;7526:22;:::i;:::-;7516:8;7512:37;7499:11;7470:80;:::i;:::-;7129:431;;7114:446;7024:543;;;:::o;7573:117::-;7627:8;7677:5;7671:4;7667:16;7646:37;;7573:117;;;;:::o;7696:169::-;7740:6;7773:51;7821:1;7817:6;7809:5;7806:1;7802:13;7773:51;:::i;:::-;7769:56;7854:4;7848;7844:15;7834:25;;7747:118;7696:169;;;;:::o;7870:295::-;7946:4;8092:29;8117:3;8111:4;8092:29;:::i;:::-;8084:37;;8154:3;8151:1;8147:11;8141:4;8138:21;8130:29;;7870:295;;;;:::o;8170:1395::-;8287:37;8320:3;8287:37;:::i;:::-;8389:18;8381:6;8378:30;8375:56;;;8411:18;;:::i;:::-;8375:56;8455:38;8487:4;8481:11;8455:38;:::i;:::-;8540:67;8600:6;8592;8586:4;8540:67;:::i;:::-;8634:1;8658:4;8645:17;;8690:2;8682:6;8679:14;8707:1;8702:618;;;;9364:1;9381:6;9378:77;;;9430:9;9425:3;9421:19;9415:26;9406:35;;9378:77;9481:67;9541:6;9534:5;9481:67;:::i;:::-;9475:4;9468:81;9337:222;8672:887;;8702:618;8754:4;8750:9;8742:6;8738:22;8788:37;8820:4;8788:37;:::i;:::-;8847:1;8861:208;8875:7;8872:1;8869:14;8861:208;;;8954:9;8949:3;8945:19;8939:26;8931:6;8924:42;9005:1;8997:6;8993:14;8983:24;;9052:2;9041:9;9037:18;9024:31;;8898:4;8895:1;8891:12;8886:17;;8861:208;;;9097:6;9088:7;9085:19;9082:179;;;9155:9;9150:3;9146:19;9140:26;9198:48;9240:4;9232:6;9228:17;9217:9;9198:48;:::i;:::-;9190:6;9183:64;9105:156;9082:179;9307:1;9303;9295:6;9291:14;9287:22;9281:4;9274:36;8709:611;;;8672:887;;8262:1303;;;8170:1395;;:::o;9571:118::-;9658:24;9676:5;9658:24;:::i;:::-;9653:3;9646:37;9571:118;;:::o;9695:222::-;9788:4;9826:2;9815:9;9811:18;9803:26;;9839:71;9907:1;9896:9;9892:17;9883:6;9839:71;:::i;:::-;9695:222;;;;:::o;9923:180::-;9971:77;9968:1;9961:88;10068:4;10065:1;10058:15;10092:4;10089:1;10082:15;10109:191;10149:3;10168:20;10186:1;10168:20;:::i;:::-;10163:25;;10202:20;10220:1;10202:20;:::i;:::-;10197:25;;10245:1;10242;10238:9;10231:16;;10266:3;10263:1;10260:10;10257:36;;;10273:18;;:::i;:::-;10257:36;10109:191;;;;:::o;10306:118::-;10393:24;10411:5;10393:24;:::i;:::-;10388:3;10381:37;10306:118;;:::o;10430:442::-;10579:4;10617:2;10606:9;10602:18;10594:26;;10630:71;10698:1;10687:9;10683:17;10674:6;10630:71;:::i;:::-;10711:72;10779:2;10768:9;10764:18;10755:6;10711:72;:::i;:::-;10793;10861:2;10850:9;10846:18;10837:6;10793:72;:::i;:::-;10430:442;;;;;;:::o;10878:222::-;10971:4;11009:2;10998:9;10994:18;10986:26;;11022:71;11090:1;11079:9;11075:17;11066:6;11022:71;:::i;:::-;10878:222;;;;:::o;3146:459:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1332,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1736,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1325,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1350,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1496,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2199,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1036,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1219": {
									"entryPoint": 1166,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_450": {
									"entryPoint": 692,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 789,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 781,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 548,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 858,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 726,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 735,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 1002,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2762,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce": {
									"entryPoint": 3508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8221:7",
										"nodeType": "YulBlock",
										"src": "0:8221:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5164:391:7",
													"nodeType": "YulBlock",
													"src": "5164:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:7",
																"nodeType": "YulBlock",
																"src": "5210:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:7"
																			},
																			"nativeSrc": "5212:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:7"
																		},
																		"nativeSrc": "5212:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:7"
																		},
																		"nativeSrc": "5181:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:7"
																},
																"nativeSrc": "5177:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:7"
															},
															"nativeSrc": "5174:119:7",
															"nodeType": "YulIf",
															"src": "5174:119:7"
														},
														{
															"nativeSrc": "5303:117:7",
															"nodeType": "YulBlock",
															"src": "5303:117:7",
															"statements": [
																{
																	"nativeSrc": "5318:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:7"
																				},
																				"nativeSrc": "5378:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:7"
																		},
																		"nativeSrc": "5357:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:7",
															"nodeType": "YulBlock",
															"src": "5430:118:7",
															"statements": [
																{
																	"nativeSrc": "5445:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:7"
																				},
																				"nativeSrc": "5506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:7"
																		},
																		"nativeSrc": "5485:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:7",
														"nodeType": "YulTypedName",
														"src": "5126:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:7",
														"nodeType": "YulTypedName",
														"src": "5137:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:7",
														"nodeType": "YulTypedName",
														"src": "5149:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:7",
														"nodeType": "YulTypedName",
														"src": "5157:6:7",
														"type": ""
													}
												],
												"src": "5081:474:7"
											},
											{
												"body": {
													"nativeSrc": "5589:152:7",
													"nodeType": "YulBlock",
													"src": "5589:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:7"
																},
																"nativeSrc": "5599:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:7"
															},
															"nativeSrc": "5599:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:7"
																},
																"nativeSrc": "5696:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:7"
															},
															"nativeSrc": "5696:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:7"
																},
																"nativeSrc": "5720:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:7"
															},
															"nativeSrc": "5720:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:7"
											},
											{
												"body": {
													"nativeSrc": "5798:269:7",
													"nodeType": "YulBlock",
													"src": "5798:269:7",
													"statements": [
														{
															"nativeSrc": "5808:22:7",
															"nodeType": "YulAssignment",
															"src": "5808:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:7"
																},
																"nativeSrc": "5818:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:7"
																}
															]
														},
														{
															"nativeSrc": "5839:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:7"
																},
																"nativeSrc": "5865:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:7",
																"nodeType": "YulBlock",
																"src": "5916:51:7",
																"statements": [
																	{
																		"nativeSrc": "5930:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:7"
																			},
																			"nativeSrc": "5940:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:7"
																},
																"nativeSrc": "5889:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:7"
															},
															"nativeSrc": "5886:81:7",
															"nodeType": "YulIf",
															"src": "5886:81:7"
														},
														{
															"body": {
																"nativeSrc": "6019:42:7",
																"nodeType": "YulBlock",
																"src": "6019:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:7"
																			},
																			"nativeSrc": "6033:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:7"
																		},
																		"nativeSrc": "6033:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:7"
																		},
																		"nativeSrc": "6003:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:7"
																},
																"nativeSrc": "5980:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:7"
															},
															"nativeSrc": "5977:84:7",
															"nodeType": "YulIf",
															"src": "5977:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:7",
														"nodeType": "YulTypedName",
														"src": "5782:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:7",
														"nodeType": "YulTypedName",
														"src": "5791:6:7",
														"type": ""
													}
												],
												"src": "5747:320:7"
											},
											{
												"body": {
													"nativeSrc": "6179:59:7",
													"nodeType": "YulBlock",
													"src": "6179:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6201:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6201:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6209:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6209:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6197:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:7"
																		},
																		"nativeSrc": "6197:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6197:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964417070726f766572",
																		"kind": "string",
																		"nativeSrc": "6213:17:7",
																		"nodeType": "YulLiteral",
																		"src": "6213:17:7",
																		"type": "",
																		"value": "InvalidApprover"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6190:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:7"
																},
																"nativeSrc": "6190:41:7",
																"nodeType": "YulFunctionCall",
																"src": "6190:41:7"
															},
															"nativeSrc": "6190:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "6190:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce",
												"nativeSrc": "6073:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6171:6:7",
														"nodeType": "YulTypedName",
														"src": "6171:6:7",
														"type": ""
													}
												],
												"src": "6073:165:7"
											},
											{
												"body": {
													"nativeSrc": "6390:220:7",
													"nodeType": "YulBlock",
													"src": "6390:220:7",
													"statements": [
														{
															"nativeSrc": "6400:74:7",
															"nodeType": "YulAssignment",
															"src": "6400:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6466:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6466:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6471:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6407:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6407:58:7"
																},
																"nativeSrc": "6407:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6407:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6572:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce",
																	"nativeSrc": "6483:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6483:88:7"
																},
																"nativeSrc": "6483:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6483:93:7"
															},
															"nativeSrc": "6483:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6483:93:7"
														},
														{
															"nativeSrc": "6585:19:7",
															"nodeType": "YulAssignment",
															"src": "6585:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6596:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6596:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6601:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6592:3:7"
																},
																"nativeSrc": "6592:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6592:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6244:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6378:3:7",
														"nodeType": "YulTypedName",
														"src": "6378:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6386:3:7",
														"nodeType": "YulTypedName",
														"src": "6386:3:7",
														"type": ""
													}
												],
												"src": "6244:366:7"
											},
											{
												"body": {
													"nativeSrc": "6787:248:7",
													"nodeType": "YulBlock",
													"src": "6787:248:7",
													"statements": [
														{
															"nativeSrc": "6797:26:7",
															"nodeType": "YulAssignment",
															"src": "6797:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6809:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6809:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6820:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6820:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6805:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6805:3:7"
																},
																"nativeSrc": "6805:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6805:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6797:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6797:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6844:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6844:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6855:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6855:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6840:3:7"
																		},
																		"nativeSrc": "6840:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6840:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6863:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6863:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6869:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6869:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6859:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6859:3:7"
																		},
																		"nativeSrc": "6859:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6859:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6833:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6833:6:7"
																},
																"nativeSrc": "6833:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6833:47:7"
															},
															"nativeSrc": "6833:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6833:47:7"
														},
														{
															"nativeSrc": "6889:139:7",
															"nodeType": "YulAssignment",
															"src": "6889:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7023:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7023:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6897:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6897:124:7"
																},
																"nativeSrc": "6897:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6897:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6889:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6889:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6616:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6767:9:7",
														"nodeType": "YulTypedName",
														"src": "6767:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6782:4:7",
														"nodeType": "YulTypedName",
														"src": "6782:4:7",
														"type": ""
													}
												],
												"src": "6616:419:7"
											},
											{
												"body": {
													"nativeSrc": "7106:53:7",
													"nodeType": "YulBlock",
													"src": "7106:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7123:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7146:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7146:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7128:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7128:17:7"
																		},
																		"nativeSrc": "7128:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7128:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7116:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7116:6:7"
																},
																"nativeSrc": "7116:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7116:37:7"
															},
															"nativeSrc": "7116:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7116:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7041:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7094:5:7",
														"nodeType": "YulTypedName",
														"src": "7094:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7101:3:7",
														"nodeType": "YulTypedName",
														"src": "7101:3:7",
														"type": ""
													}
												],
												"src": "7041:118:7"
											},
											{
												"body": {
													"nativeSrc": "7319:288:7",
													"nodeType": "YulBlock",
													"src": "7319:288:7",
													"statements": [
														{
															"nativeSrc": "7329:26:7",
															"nodeType": "YulAssignment",
															"src": "7329:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7341:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7341:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7352:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7337:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7337:3:7"
																},
																"nativeSrc": "7337:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7337:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7329:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7329:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7409:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7409:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7422:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7422:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7433:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7433:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7418:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7418:3:7"
																		},
																		"nativeSrc": "7418:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7418:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7365:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7365:43:7"
																},
																"nativeSrc": "7365:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7365:71:7"
															},
															"nativeSrc": "7365:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7365:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7490:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7490:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7503:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7514:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7514:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7499:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:7"
																		},
																		"nativeSrc": "7499:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7499:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7446:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7446:43:7"
																},
																"nativeSrc": "7446:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7446:72:7"
															},
															"nativeSrc": "7446:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7446:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7572:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7572:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7585:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7585:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7596:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7596:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7581:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7581:3:7"
																		},
																		"nativeSrc": "7581:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7581:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7528:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7528:43:7"
																},
																"nativeSrc": "7528:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7528:72:7"
															},
															"nativeSrc": "7528:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7528:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7165:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7275:9:7",
														"nodeType": "YulTypedName",
														"src": "7275:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7287:6:7",
														"nodeType": "YulTypedName",
														"src": "7287:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7295:6:7",
														"nodeType": "YulTypedName",
														"src": "7295:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7303:6:7",
														"nodeType": "YulTypedName",
														"src": "7303:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7314:4:7",
														"nodeType": "YulTypedName",
														"src": "7314:4:7",
														"type": ""
													}
												],
												"src": "7165:442:7"
											},
											{
												"body": {
													"nativeSrc": "7711:124:7",
													"nodeType": "YulBlock",
													"src": "7711:124:7",
													"statements": [
														{
															"nativeSrc": "7721:26:7",
															"nodeType": "YulAssignment",
															"src": "7721:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7733:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7733:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7729:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:7"
																},
																"nativeSrc": "7729:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7729:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7721:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7721:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7801:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7801:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7814:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7814:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7825:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7825:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7810:3:7"
																		},
																		"nativeSrc": "7810:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7810:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7757:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7757:43:7"
																},
																"nativeSrc": "7757:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7757:71:7"
															},
															"nativeSrc": "7757:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7757:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7613:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7683:9:7",
														"nodeType": "YulTypedName",
														"src": "7683:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7695:6:7",
														"nodeType": "YulTypedName",
														"src": "7695:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7706:4:7",
														"nodeType": "YulTypedName",
														"src": "7706:4:7",
														"type": ""
													}
												],
												"src": "7613:222:7"
											},
											{
												"body": {
													"nativeSrc": "7869:152:7",
													"nodeType": "YulBlock",
													"src": "7869:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:7"
																},
																"nativeSrc": "7879:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:7"
															},
															"nativeSrc": "7879:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:7"
																},
																"nativeSrc": "7976:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:7"
															},
															"nativeSrc": "7976:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:7"
																},
																"nativeSrc": "8000:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:7"
															},
															"nativeSrc": "8000:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7841:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:7"
											},
											{
												"body": {
													"nativeSrc": "8071:147:7",
													"nodeType": "YulBlock",
													"src": "8071:147:7",
													"statements": [
														{
															"nativeSrc": "8081:25:7",
															"nodeType": "YulAssignment",
															"src": "8081:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8104:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8104:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8086:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8086:17:7"
																},
																"nativeSrc": "8086:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8086:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8081:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8081:1:7"
																}
															]
														},
														{
															"nativeSrc": "8115:25:7",
															"nodeType": "YulAssignment",
															"src": "8115:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8138:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8138:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8120:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8120:17:7"
																},
																"nativeSrc": "8120:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8120:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8115:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8115:1:7"
																}
															]
														},
														{
															"nativeSrc": "8149:16:7",
															"nodeType": "YulAssignment",
															"src": "8149:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8160:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8160:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8163:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8163:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8156:3:7"
																},
																"nativeSrc": "8156:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8156:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8149:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8149:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8189:22:7",
																"nodeType": "YulBlock",
																"src": "8189:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8191:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8191:16:7"
																			},
																			"nativeSrc": "8191:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8191:18:7"
																		},
																		"nativeSrc": "8191:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8191:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8181:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8181:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8184:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8184:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8178:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8178:2:7"
																},
																"nativeSrc": "8178:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8178:10:7"
															},
															"nativeSrc": "8175:36:7",
															"nodeType": "YulIf",
															"src": "8175:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8027:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8058:1:7",
														"nodeType": "YulTypedName",
														"src": "8058:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8061:1:7",
														"nodeType": "YulTypedName",
														"src": "8061:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8067:3:7",
														"nodeType": "YulTypedName",
														"src": "8067:3:7",
														"type": ""
													}
												],
												"src": "8027:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"InvalidApprover\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461015a57806395d89b411461018a578063a9059cbb146101a8578063dd62ed3e146101d8578063e1f21c67146102085761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b20565b60405180910390f35b6100d860048036038101906100d39190610bd1565b6102b4565b6040516100e59190610c29565b60405180910390f35b6100f66102d6565b6040516101039190610c51565b60405180910390f35b61012660048036038101906101219190610c6a565b6102df565b6040516101339190610c29565b60405180910390f35b61014461030d565b6040516101519190610cd5565b60405180910390f35b610174600480360381019061016f9190610cee565b610315565b6040516101819190610c51565b60405180910390f35b61019261035a565b60405161019f9190610b20565b60405180910390f35b6101c260048036038101906101bd9190610bd1565b6103ea565b6040516101cf9190610c29565b60405180910390f35b6101f260048036038101906101ed9190610d19565b61040c565b6040516101ff9190610c51565b60405180910390f35b610222600480360381019061021d9190610c6a565b61048e565b005b60606003805461023390610d84565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d84565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61052d565b90506102cb818585610534565b600191505092915050565b5f600254905090565b5f806102e961052d565b90506102f6858285610546565b6103018585856105d8565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461036990610d84565b80601f016020809104026020016040519081016040528092919081815260200182805461039590610d84565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b5050505050905090565b5f806103f461052d565b90506104018185856105d8565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610dfe565b60405180910390fd5b610528838383610534565b505050565b5f33905090565b61054183838360016106c8565b505050565b5f610551848461040c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105d257818110156105c3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016105ba93929190610e2b565b60405180910390fd5b6105d184848484035f6106c8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610648575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161063f9190610e60565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106b8575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106af9190610e60565b60405180910390fd5b6106c3838383610897565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610738575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161072f9190610e60565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107a8575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161079f9190610e60565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610891578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108889190610c51565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108e7578060025f8282546108db9190610ea6565b925050819055506109b5565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610970578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161096793929190610e2b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109fc578060025f8282540392505081905550610a46565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610aa39190610c51565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610af282610ab0565b610afc8185610aba565b9350610b0c818560208601610aca565b610b1581610ad8565b840191505092915050565b5f6020820190508181035f830152610b388184610ae8565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b6d82610b44565b9050919050565b610b7d81610b63565b8114610b87575f80fd5b50565b5f81359050610b9881610b74565b92915050565b5f819050919050565b610bb081610b9e565b8114610bba575f80fd5b50565b5f81359050610bcb81610ba7565b92915050565b5f8060408385031215610be757610be6610b40565b5b5f610bf485828601610b8a565b9250506020610c0585828601610bbd565b9150509250929050565b5f8115159050919050565b610c2381610c0f565b82525050565b5f602082019050610c3c5f830184610c1a565b92915050565b610c4b81610b9e565b82525050565b5f602082019050610c645f830184610c42565b92915050565b5f805f60608486031215610c8157610c80610b40565b5b5f610c8e86828701610b8a565b9350506020610c9f86828701610b8a565b9250506040610cb086828701610bbd565b9150509250925092565b5f60ff82169050919050565b610ccf81610cba565b82525050565b5f602082019050610ce85f830184610cc6565b92915050565b5f60208284031215610d0357610d02610b40565b5b5f610d1084828501610b8a565b91505092915050565b5f8060408385031215610d2f57610d2e610b40565b5b5f610d3c85828601610b8a565b9250506020610d4d85828601610b8a565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610d9b57607f821691505b602082108103610dae57610dad610d57565b5b50919050565b7f496e76616c6964417070726f76657200000000000000000000000000000000005f82015250565b5f610de8600f83610aba565b9150610df382610db4565b602082019050919050565b5f6020820190508181035f830152610e1581610ddc565b9050919050565b610e2581610b63565b82525050565b5f606082019050610e3e5f830186610e1c565b610e4b6020830185610c42565b610e586040830184610c42565b949350505050565b5f602082019050610e735f830184610e1c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610eb082610b9e565b9150610ebb83610b9e565b9250828201905080821115610ed357610ed2610e79565b5b9291505056fea2646970667358221220dc8eb9dfe3168f671d47ddb27a08bb57b1d3735078eb085e467965a470794b3764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x208 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xBD1 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0xD84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F4 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH2 0x401 DUP2 DUP6 DUP6 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x528 DUP4 DUP4 DUP4 PUSH2 0x534 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x541 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x551 DUP5 DUP5 PUSH2 0x40C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5D2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5C3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6C8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x648 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C3 DUP4 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x738 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x891 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x970 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9FC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA46 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF2 DUP3 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0xAFC DUP2 DUP6 PUSH2 0xABA JUMP JUMPDEST SWAP4 POP PUSH2 0xB0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB15 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB38 DUP2 DUP5 PUSH2 0xAE8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB6D DUP3 PUSH2 0xB44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7D DUP2 PUSH2 0xB63 JUMP JUMPDEST DUP2 EQ PUSH2 0xB87 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB0 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCB DUP2 PUSH2 0xBA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE6 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF4 DUP6 DUP3 DUP7 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC05 DUP6 DUP3 DUP7 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0xC0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3C PUSH0 DUP4 ADD DUP5 PUSH2 0xC1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4B DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC64 PUSH0 DUP4 ADD DUP5 PUSH2 0xC42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCF DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE8 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD10 DUP5 DUP3 DUP6 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH2 0xD2E PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD3C DUP6 DUP3 DUP7 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD4D DUP6 DUP3 DUP7 ADD PUSH2 0xB8A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDAE JUMPI PUSH2 0xDAD PUSH2 0xD57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964417070726F7665720000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE8 PUSH1 0xF DUP4 PUSH2 0xABA JUMP JUMPDEST SWAP2 POP PUSH2 0xDF3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE15 DUP2 PUSH2 0xDDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0xB63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE3E PUSH0 DUP4 ADD DUP7 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0xE4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC42 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE73 PUSH0 DUP4 ADD DUP5 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEB0 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xEBB DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xED3 JUMPI PUSH2 0xED2 PUSH2 0xE79 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP15 0xB9 0xDF 0xE3 AND DUP16 PUSH8 0x1D47DDB27A08BB57 0xB1 0xD3 PUSH20 0x5078EB085E467965A470794B3764736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "3146:459:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3425:178:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;3425:178:6:-;3524:4;;;;;;;;;;;3515:13;;:5;:13;;;3507:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3558:38;3573:5;3580:7;3589:6;3558:14;:38::i;:::-;3425:178;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:165::-;6213:17;6209:1;6201:6;6197:14;6190:41;6073:165;:::o;6244:366::-;6386:3;6407:67;6471:2;6466:3;6407:67;:::i;:::-;6400:74;;6483:93;6572:3;6483:93;:::i;:::-;6601:2;6596:3;6592:12;6585:19;;6244:366;;;:::o;6616:419::-;6782:4;6820:2;6809:9;6805:18;6797:26;;6869:9;6863:4;6859:20;6855:1;6844:9;6840:17;6833:47;6897:131;7023:4;6897:131;:::i;:::-;6889:139;;6616:419;;;:::o;7041:118::-;7128:24;7146:5;7128:24;:::i;:::-;7123:3;7116:37;7041:118;;:::o;7165:442::-;7314:4;7352:2;7341:9;7337:18;7329:26;;7365:71;7433:1;7422:9;7418:17;7409:6;7365:71;:::i;:::-;7446:72;7514:2;7503:9;7499:18;7490:6;7446:72;:::i;:::-;7528;7596:2;7585:9;7581:18;7572:6;7528:72;:::i;:::-;7165:442;;;;;;:::o;7613:222::-;7706:4;7744:2;7733:9;7729:18;7721:26;;7757:71;7825:1;7814:9;7810:17;7801:6;7757:71;:::i;:::-;7613:222;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:191;8067:3;8086:20;8104:1;8086:20;:::i;:::-;8081:25;;8120:20;8138:1;8120:20;:::i;:::-;8115:25;;8163:1;8160;8156:9;8149:16;;8184:3;8181:1;8178:10;8175:36;;;8191:18;;:::i;:::-;8175:36;8027:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "771000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,address,uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2829",
								"decimals()": "427",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3146,
									"end": 3605,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3212,
									"end": 3419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3324,
									"end": 3328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3336,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3352,
									"end": 3384,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 3358,
									"end": 3368,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 3370,
									"end": 3383,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3352,
									"end": 3357,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3352,
									"end": 3357,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3352,
									"end": 3357,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3352,
									"end": 3384,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3352,
									"end": 3384,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3352,
									"end": 3384,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3352,
									"end": 3384,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 3352,
									"end": 3384,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3401,
									"end": 3412,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3398,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 3394,
									"end": 3398,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3412,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3419,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2205,
									"end": 2208,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2194,
									"end": 2217,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2252,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2248,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2240,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2233,
									"end": 2249,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2253,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2360,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2396,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2380,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2455,
									"end": 2476,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2511,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2500,
									"end": 2505,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2496,
									"end": 2512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2548,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2536,
									"end": 2542,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2543,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2549,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2552,
									"end": 2631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2687,
									"end": 2693,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 2685,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2680,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2642,
									"end": 2694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2361,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2787,
									"end": 2792,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 2833,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2821,
									"end": 2827,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2817,
									"end": 2834,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2813,
									"end": 2840,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2844,
									"end": 2923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2948,
									"end": 2961,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3065,
									"end": 3068,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3057,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3050,
									"end": 3054,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3042,
									"end": 3048,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3055,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2979,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3125,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3152,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3237,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3230,
									"end": 3235,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3262,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3349,
									"end": 3354,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3374,
									"end": 3387,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3423,
									"end": 3428,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3396,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3292,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3558,
									"end": 3564,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3566,
									"end": 3572,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3634,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3619,
									"end": 3628,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3617,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3606,
									"end": 3629,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3638,
									"end": 3717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3758,
									"end": 3759,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3839,
									"end": 3846,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3830,
									"end": 3836,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3828,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3837,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3783,
									"end": 3847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3847,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3847,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3729,
									"end": 3857,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3917,
									"end": 3919,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 3920,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3896,
									"end": 3921,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3948,
									"end": 3966,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3940,
									"end": 3946,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3937,
									"end": 3967,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 4051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 4051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3934,
									"end": 4051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3970,
									"end": 4049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3970,
									"end": 4049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3970,
									"end": 4049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3970,
									"end": 4049,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3970,
									"end": 4049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 4051,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3934,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4075,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4141,
									"end": 4148,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4132,
									"end": 4138,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4121,
									"end": 4130,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4117,
									"end": 4139,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4075,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 4075,
									"end": 4149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4075,
									"end": 4149,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4075,
									"end": 4149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4149,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 4159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4221,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4208,
									"end": 4217,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4204,
									"end": 4222,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4198,
									"end": 4223,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4250,
									"end": 4268,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4242,
									"end": 4248,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4239,
									"end": 4269,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4353,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4353,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4236,
									"end": 4353,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4351,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4272,
									"end": 4351,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4272,
									"end": 4351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4351,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4272,
									"end": 4351,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4353,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4236,
									"end": 4353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4443,
									"end": 4450,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4434,
									"end": 4440,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4423,
									"end": 4432,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4419,
									"end": 4441,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 4377,
									"end": 4451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4451,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4169,
									"end": 4461,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4500,
									"end": 4502,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4582,
									"end": 4589,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4573,
									"end": 4579,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4558,
									"end": 4580,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4526,
									"end": 4590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4471,
									"end": 4600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 4607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 4671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4699,
									"end": 4704,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4693,
									"end": 4705,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4766,
									"end": 4843,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4763,
									"end": 4764,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4756,
									"end": 4844,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4863,
									"end": 4867,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4860,
									"end": 4861,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4853,
									"end": 4868,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4887,
									"end": 4891,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4884,
									"end": 4885,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4877,
									"end": 4892,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4948,
									"end": 4954,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4979,
									"end": 4983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4975,
									"end": 4987,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5032,
									"end": 5033,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5026,
									"end": 5030,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5034,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5071,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5109,
									"end": 5113,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 5101,
									"end": 5107,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5097,
									"end": 5114,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5171,
									"end": 5173,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5169,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5160,
									"end": 5174,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5140,
									"end": 5158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5137,
									"end": 5175,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 5190,
									"end": 5208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4955,
									"end": 5224,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4904,
									"end": 5224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5279,
									"end": 5283,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5325,
									"end": 5328,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5322,
									"end": 5323,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5315,
									"end": 5329,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5359,
									"end": 5363,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5356,
									"end": 5357,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5346,
									"end": 5364,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5230,
									"end": 5371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5414,
									"end": 5420,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5461,
									"end": 5463,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5456,
									"end": 5458,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5449,
									"end": 5454,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5445,
									"end": 5459,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5441,
									"end": 5464,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5520,
									"end": 5528,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5570,
									"end": 5575,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5564,
									"end": 5568,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 5576,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5476,
									"end": 5583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 5664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5708,
									"end": 5709,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5696,
									"end": 5706,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5692,
									"end": 5710,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5761,
									"end": 5827,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5750,
									"end": 5759,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 5731,
									"end": 5828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5879,
									"end": 5887,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5868,
									"end": 5877,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 5849,
									"end": 5888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5921,
									"end": 5925,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5917,
									"end": 5926,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5910,
									"end": 5915,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5906,
									"end": 5927,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5970,
									"end": 5974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5960,
									"end": 5968,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5956,
									"end": 5975,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5949,
									"end": 5954,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5976,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6016,
									"end": 6019,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6037,
									"end": 6042,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 6048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6104,
									"end": 6113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6182,
									"end": 6187,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 6164,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6155,
									"end": 6189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 6137,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 6248,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6266,
									"end": 6271,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6202,
									"end": 6277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6424,
									"end": 6431,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6393,
									"end": 6432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6527,
									"end": 6543,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 6503,
									"end": 6544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6501,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6488,
									"end": 6492,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6482,
									"end": 6493,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 6454,
									"end": 6545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6448,
									"end": 6452,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6441,
									"end": 6546,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6359,
									"end": 6552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6603,
									"end": 6606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6558,
									"end": 6631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 6714,
									"end": 6746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6813,
									"end": 6819,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6805,
									"end": 6811,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6799,
									"end": 6803,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 6755,
									"end": 6820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6690,
									"end": 6826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6637,
									"end": 6826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6909,
									"end": 6912,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6902,
									"end": 6907,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6899,
									"end": 6913,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7000,
									"end": 7001,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6993,
									"end": 6998,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6963,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 6937,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6929,
									"end": 6934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6832,
									"end": 7018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7125,
									"end": 7127,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7120,
									"end": 7123,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7117,
									"end": 7128,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 7159,
									"end": 7197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7261,
									"end": 7271,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 7243,
									"end": 7272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7233,
									"end": 7241,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7273,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7426,
									"end": 7428,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7414,
									"end": 7424,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7411,
									"end": 7429,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7447,
									"end": 7455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7544,
									"end": 7547,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 7526,
									"end": 7548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7516,
									"end": 7524,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7549,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7499,
									"end": 7510,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7470,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7024,
									"end": 7567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7635,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7677,
									"end": 7682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 7675,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7667,
									"end": 7683,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7573,
									"end": 7690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7740,
									"end": 7746,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7821,
									"end": 7822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7817,
									"end": 7823,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7809,
									"end": 7814,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7806,
									"end": 7807,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7802,
									"end": 7815,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7773,
									"end": 7824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7769,
									"end": 7825,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7854,
									"end": 7858,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7848,
									"end": 7852,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7859,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7747,
									"end": 7865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7946,
									"end": 7950,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8117,
									"end": 8120,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8111,
									"end": 8115,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 8092,
									"end": 8121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8154,
									"end": 8157,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8151,
									"end": 8152,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8147,
									"end": 8158,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8141,
									"end": 8145,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8138,
									"end": 8159,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 8165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8320,
									"end": 8323,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 8287,
									"end": 8324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8389,
									"end": 8407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8381,
									"end": 8387,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8378,
									"end": 8408,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8411,
									"end": 8429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8487,
									"end": 8491,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8481,
									"end": 8492,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 8455,
									"end": 8493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8592,
									"end": 8598,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8586,
									"end": 8590,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 8540,
									"end": 8607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8634,
									"end": 8635,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8662,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8692,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8682,
									"end": 8688,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8679,
									"end": 8693,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8707,
									"end": 8708,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9364,
									"end": 9365,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9381,
									"end": 9387,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9430,
									"end": 9439,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9425,
									"end": 9428,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9421,
									"end": 9440,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9415,
									"end": 9441,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 9541,
									"end": 9547,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9534,
									"end": 9539,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 9481,
									"end": 9548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9475,
									"end": 9479,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9468,
									"end": 9549,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9337,
									"end": 9559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8758,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8750,
									"end": 8759,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8742,
									"end": 8748,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 8760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8820,
									"end": 8824,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 8788,
									"end": 8825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8848,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8875,
									"end": 8882,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8872,
									"end": 8873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8869,
									"end": 8883,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8954,
									"end": 8963,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8949,
									"end": 8952,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8945,
									"end": 8964,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8939,
									"end": 8965,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8931,
									"end": 8937,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8924,
									"end": 8966,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9005,
									"end": 9006,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8997,
									"end": 9003,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8993,
									"end": 9007,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9052,
									"end": 9054,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9041,
									"end": 9050,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9037,
									"end": 9055,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8898,
									"end": 8902,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8895,
									"end": 8896,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8891,
									"end": 8903,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9097,
									"end": 9103,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9088,
									"end": 9095,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9085,
									"end": 9104,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9155,
									"end": 9164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9150,
									"end": 9153,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9146,
									"end": 9165,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9140,
									"end": 9166,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9240,
									"end": 9244,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9232,
									"end": 9238,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9228,
									"end": 9245,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9226,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 9198,
									"end": 9246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9190,
									"end": 9196,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9183,
									"end": 9247,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9105,
									"end": 9261,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9307,
									"end": 9308,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9303,
									"end": 9304,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9295,
									"end": 9301,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9291,
									"end": 9305,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9287,
									"end": 9309,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9281,
									"end": 9285,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9274,
									"end": 9310,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 9565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9676,
									"end": 9681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 9658,
									"end": 9682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9653,
									"end": 9656,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9646,
									"end": 9683,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9571,
									"end": 9689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9788,
									"end": 9792,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9826,
									"end": 9828,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9815,
									"end": 9824,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9811,
									"end": 9829,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9829,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9829,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9907,
									"end": 9908,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9896,
									"end": 9905,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9892,
									"end": 9909,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9883,
									"end": 9889,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 9839,
									"end": 9910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9695,
									"end": 9917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9923,
									"end": 10103,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 9923,
									"end": 10103,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9971,
									"end": 10048,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9968,
									"end": 9969,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9961,
									"end": 10049,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10072,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 10065,
									"end": 10066,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 10058,
									"end": 10073,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10092,
									"end": 10096,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 10089,
									"end": 10090,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10082,
									"end": 10097,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 10109,
									"end": 10300,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 10109,
									"end": 10300,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10149,
									"end": 10152,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10168,
									"end": 10188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 10186,
									"end": 10187,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10168,
									"end": 10188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 10168,
									"end": 10188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10168,
									"end": 10188,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 10168,
									"end": 10188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10163,
									"end": 10188,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10163,
									"end": 10188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10202,
									"end": 10222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 10220,
									"end": 10221,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10202,
									"end": 10222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 10202,
									"end": 10222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10202,
									"end": 10222,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 10202,
									"end": 10222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10197,
									"end": 10222,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10197,
									"end": 10222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10245,
									"end": 10246,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10242,
									"end": 10243,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10238,
									"end": 10247,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10247,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10247,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10266,
									"end": 10269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10263,
									"end": 10264,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10260,
									"end": 10270,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10257,
									"end": 10293,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10257,
									"end": 10293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 10257,
									"end": 10293,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10273,
									"end": 10291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 10273,
									"end": 10291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 10273,
									"end": 10291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10273,
									"end": 10291,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 10273,
									"end": 10291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10257,
									"end": 10293,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 10257,
									"end": 10293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10109,
									"end": 10300,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10109,
									"end": 10300,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10109,
									"end": 10300,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10109,
									"end": 10300,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10109,
									"end": 10300,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10424,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 10306,
									"end": 10424,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10393,
									"end": 10417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 10411,
									"end": 10416,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10393,
									"end": 10417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 10393,
									"end": 10417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10393,
									"end": 10417,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 10393,
									"end": 10417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10388,
									"end": 10391,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10381,
									"end": 10418,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10424,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10579,
									"end": 10583,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10617,
									"end": 10619,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10606,
									"end": 10615,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10602,
									"end": 10620,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10594,
									"end": 10620,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10594,
									"end": 10620,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10630,
									"end": 10701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10698,
									"end": 10699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10687,
									"end": 10696,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10683,
									"end": 10700,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10674,
									"end": 10680,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10630,
									"end": 10701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 10630,
									"end": 10701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10630,
									"end": 10701,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10630,
									"end": 10701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10779,
									"end": 10781,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10768,
									"end": 10777,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10764,
									"end": 10782,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10755,
									"end": 10761,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 10711,
									"end": 10783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10783,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10711,
									"end": 10783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10793,
									"end": 10865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10861,
									"end": 10863,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10850,
									"end": 10859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10846,
									"end": 10864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10837,
									"end": 10843,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10793,
									"end": 10865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 10793,
									"end": 10865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10793,
									"end": 10865,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10793,
									"end": 10865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10430,
									"end": 10872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10878,
									"end": 11100,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 10878,
									"end": 11100,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10971,
									"end": 10975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11009,
									"end": 11011,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10998,
									"end": 11007,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10994,
									"end": 11012,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10986,
									"end": 11012,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10986,
									"end": 11012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11022,
									"end": 11093,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 11090,
									"end": 11091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11079,
									"end": 11088,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11075,
									"end": 11092,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11066,
									"end": 11072,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11022,
									"end": 11093,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 11022,
									"end": 11093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11022,
									"end": 11093,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 11022,
									"end": 11093,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10878,
									"end": 11100,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10878,
									"end": 11100,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10878,
									"end": 11100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10878,
									"end": 11100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10878,
									"end": 11100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 3605,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc8eb9dfe3168f671d47ddb27a08bb57b1d3735078eb085e467965a470794b3764736f6c634300081a0033",
									".code": [
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "E1F21C67"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3425,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3425,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3507,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3507,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3558,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3558,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6238,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 6073,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6213,
											"end": 6230,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964417070726F7665720000000000000000000000000000000000"
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6231,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6610,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6244,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6466,
											"end": 6469,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6407,
											"end": 6474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6407,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6400,
											"end": 6474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6400,
											"end": 6474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6572,
											"end": 6575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 6483,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6576,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6483,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6596,
											"end": 6599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 7035,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6616,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6822,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6859,
											"end": 6879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6853,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6833,
											"end": 6880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 7023,
											"end": 7027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6897,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 7028,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 6897,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 7028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 7028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 7035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 7035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 7035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 7035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7159,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7041,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 7146,
											"end": 7151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7128,
											"end": 7152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7116,
											"end": 7153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7314,
											"end": 7318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7354,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7341,
											"end": 7350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7337,
											"end": 7355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7365,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7436,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7365,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7514,
											"end": 7516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7503,
											"end": 7512,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7490,
											"end": 7496,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7446,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7446,
											"end": 7518,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7446,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7596,
											"end": 7598,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7585,
											"end": 7594,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7578,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7528,
											"end": 7600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7600,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7528,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7835,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 7613,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7746,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7733,
											"end": 7742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7825,
											"end": 7826,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7810,
											"end": 7827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7757,
											"end": 7828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7828,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7757,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 7966,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8015,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8218,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 8027,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8067,
											"end": 8070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8086,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8138,
											"end": 8139,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8120,
											"end": 8140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8140,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8120,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8140,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8156,
											"end": 8165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8149,
											"end": 8165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8149,
											"end": 8165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8187,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8188,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8175,
											"end": 8211,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 8191,
											"end": 8209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8211,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8175,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8218,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"src/level22.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,address,uint256)": "e1f21c67",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dexInstance\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/level22.sol\":\"SwappableToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/level22.sol\":{\"keccak256\":\"0x6a0332e4e92b1d079c7667fe90ff0c210f2937f63b97a6bad278d2514c8bc2a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c2a2a48f72a3b8b3b981f22bd510fc66ba1766e81cb7c725dc384fb1721d7d\",\"dweb:/ipfs/Qmco2ZAHvksLiqsjaoMjeeKyV2YtEmk9Yq4CFgJ8FUZE7X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "src/level22.sol:SwappableToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "src/level22.sol:SwappableToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "src/level22.sol:SwappableToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "src/level22.sol:SwappableToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "src/level22.sol:SwappableToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1168,
								"contract": "src/level22.sol:SwappableToken",
								"label": "_dex",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"src/level22.sol": {
				"ast": {
					"absolutePath": "src/level22.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Dex": [
							1164
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"SwappableToken": [
							1220
						]
					},
					"id": 1221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1212:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1221,
							"sourceUnit": 878,
							"src": "1237:109:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1221,
							"sourceUnit": 800,
							"src": "1347:108:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1221,
							"sourceUnit": 148,
							"src": "1456:105:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "Ownable",
										"nameLocations": [
											"1579:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1579:7:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "1579:7:6"
								}
							],
							"canonicalName": "Dex",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164,
								147,
								933
							],
							"name": "Dex",
							"nameLocation": "1572:3:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 942,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "1608:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "1593:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 941,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "25be124e",
									"id": 944,
									"mutability": "mutable",
									"name": "token2",
									"nameLocation": "1635:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1164,
									"src": "1620:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 943,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1620:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "1747:2:6",
										"statements": []
									},
									"id": 952,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 947,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 949,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 946,
												"name": "Ownable",
												"nameLocations": [
													"1727:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1727:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1727:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1724:2:6"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:0:6"
									},
									"scope": 1164,
									"src": "1713:36:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "1825:59:6",
										"statements": [
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 961,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "1835:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 962,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1844:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1835:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "1835:16:6"
											},
											{
												"expression": {
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 965,
														"name": "token2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1861:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 966,
														"name": "_token2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "1870:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1861:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "1861:16:6"
											}
										]
									},
									"functionSelector": "cbc7854e",
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 959,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 958,
												"name": "onlyOwner",
												"nameLocations": [
													"1815:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1815:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1815:9:6"
										}
									],
									"name": "setTokens",
									"nameLocation": "1764:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "1782:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "1774:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "_token2",
												"nameLocation": "1799:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "1791:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:34:6"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:0:6"
									},
									"scope": 1164,
									"src": "1755:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "1968:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 983,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2013:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2017:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2013:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 987,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2033:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2025:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2025:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2025:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "2040:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 980,
																	"name": "token_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "1985:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 979,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "1978:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1978:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2000:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "1978:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "1978:69:6"
											}
										]
									},
									"functionSelector": "56688700",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 977,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 976,
												"name": "onlyOwner",
												"nameLocations": [
													"1958:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1958:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1958:9:6"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "1899:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "token_address",
												"nameLocation": "1920:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1912:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1943:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1935:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:39:6"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:0:6"
									},
									"scope": 1164,
									"src": "1890:164:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2123:455:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1003,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "2142:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1004,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "2150:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2142:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1006,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "2160:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1007,
																				"name": "token2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "2166:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2160:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2142:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2141:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1011,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "2178:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1012,
																				"name": "token2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "2186:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2178:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1014,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "2196:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1015,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "2202:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2196:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2178:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1018,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2177:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2141:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e73",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2211:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3",
																"typeString": "literal_string \"Invalid tokens\""
															},
															"value": "Invalid tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3",
																"typeString": "literal_string \"Invalid tokens\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2133:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2133:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "2133:95:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1028,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2269:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2273:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2269:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1025,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "2253:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1024,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "2246:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2246:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2259:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 834,
																	"src": "2246:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2246:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1031,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "2284:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2246:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f2073776170",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2292:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc",
																"typeString": "literal_string \"Not enough to swap\""
															},
															"value": "Not enough to swap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68246103c1af9f868e02771dfde8a2d9eada4e23252186e1bbb1f04b5d2267cc",
																"typeString": "literal_string \"Not enough to swap\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2238:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2238:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "2238:75:6"
											},
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"mutability": "mutable",
														"name": "swapAmount",
														"nameLocation": "2331:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "2323:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2323:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1043,
												"initialValue": {
													"arguments": [
														{
															"id": 1039,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "2357:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "2363:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "2367:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1038,
														"name": "getSwapPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "2344:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) view returns (uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2323:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2410:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2414:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2410:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1052,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2430:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																],
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2422:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1050,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2422:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2422:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "2437:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1045,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2391:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1044,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2384:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2384:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2397:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "2384:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "2384:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1063,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2481:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																],
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2473:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1061,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2473:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2473:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "swapAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "2488:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1058,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "2461:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1057,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2454:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2454:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2465:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "2454:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2454:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "2454:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1074,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2541:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Dex_$1164",
																		"typeString": "contract Dex"
																	}
																],
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2533:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1072,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2533:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2533:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1076,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2548:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2552:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2548:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "swapAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "2560:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1069,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "2516:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1068,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2509:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2520:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "2509:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "2509:62:6"
											}
										]
									},
									"functionSelector": "df791e50",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2069:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2082:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2074:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2088:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2108:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2100:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:42:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2123:0:6"
									},
									"scope": 1164,
									"src": "2060:518:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "2678:112:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1093,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "2697:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1100,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2735:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Dex_$1164",
																								"typeString": "contract Dex"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_Dex_$1164",
																								"typeString": "contract Dex"
																							}
																						],
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2727:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1098,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2727:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1101,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2727:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1095,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1086,
																							"src": "2713:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1094,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "2706:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 1096,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2706:10:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2717:9:6",
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 834,
																				"src": "2706:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2706:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2697:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1104,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2696:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1111,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2776:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Dex_$1164",
																					"typeString": "contract Dex"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Dex_$1164",
																					"typeString": "contract Dex"
																				}
																			],
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2768:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1109,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2768:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2768:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1106,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1084,
																				"src": "2752:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1105,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "2745:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2745:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2758:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 834,
																	"src": "2745:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2745:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2696:86:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1115,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2695:88:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1116,
												"nodeType": "Return",
												"src": "2688:95:6"
											}
										]
									},
									"functionSelector": "bfd7e00d",
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSwapPrice",
									"nameLocation": "2593:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2614:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2606:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2606:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2628:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2620:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2640:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2632:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2605:42:6"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2669:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:9:6"
									},
									"scope": 1164,
									"src": "2584:206:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "2853:145:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2894:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2898:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2894:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "2906:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "2915:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1126,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "2878:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1125,
																"name": "SwappableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "2863:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SwappableToken_$1220_$",
																	"typeString": "type(contract SwappableToken)"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2863:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SwappableToken_$1220",
																"typeString": "contract SwappableToken"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2886:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "2863:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2863:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2963:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2967:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2963:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "2975:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "2984:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1136,
																	"name": "token2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "2947:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1135,
																"name": "SwappableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "2932:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SwappableToken_$1220_$",
																	"typeString": "type(contract SwappableToken)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2932:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SwappableToken_$1220",
																"typeString": "contract SwappableToken"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2955:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "2932:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2932:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2932:59:6"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2805:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2821:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2813:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2838:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2830:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:33:6"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:0:6"
									},
									"scope": 1164,
									"src": "2796:202:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "3085:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1159,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "3126:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1156,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "3109:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1155,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "3102:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "3102:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3102:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1161,
												"nodeType": "Return",
												"src": "3095:39:6"
											}
										]
									},
									"functionSelector": "f7888aec",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3031:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3023:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3046:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3038:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:32:6"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3076:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3076:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:9:6"
									},
									"scope": 1164,
									"src": "3004:137:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1221,
							"src": "1563:1580:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1165,
										"name": "ERC20",
										"nameLocations": [
											"3173:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "3173:5:6"
									},
									"id": 1166,
									"nodeType": "InheritanceSpecifier",
									"src": "3173:5:6"
								}
							],
							"canonicalName": "SwappableToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1220,
							"linearizedBaseContracts": [
								1220,
								799,
								189,
								903,
								877,
								933
							],
							"name": "SwappableToken",
							"nameLocation": "3155:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_dex",
									"nameLocation": "3201:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1220,
									"src": "3185:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3185:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "3342:77:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3358:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3362:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3358:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3370:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1183,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3352:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3352:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "3352:32:6"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1189,
														"name": "_dex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "3394:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "dexInstance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "3401:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3394:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "3394:18:6"
											}
										]
									},
									"id": 1194,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1179,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "3324:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1180,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1174,
													"src": "3330:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1181,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1178,
												"name": "ERC20",
												"nameLocations": [
													"3318:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "3318:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3318:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "dexInstance",
												"nameLocation": "3232:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3224:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3224:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3259:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3245:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3245:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "3279:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3265:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3265:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "3295:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3287:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:86:6"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3342:0:6"
									},
									"scope": 1220,
									"src": "3212:207:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "3497:106:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1204,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "3515:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1205,
																"name": "_dex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "3524:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3515:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964417070726f766572",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3530:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce",
																"typeString": "literal_string \"InvalidApprover\""
															},
															"value": "InvalidApprover"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb338f77770f4bebf08768ff981451eae87c07fdb0e2d78a2d7eae754baa53ce",
																"typeString": "literal_string \"InvalidApprover\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3507:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3507:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "3507:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "3573:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "3580:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3589:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1210,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3558:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SwappableToken_$1220_$",
																"typeString": "type(contract super SwappableToken)"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3564:8:6",
														"memberName": "_approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "3558:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3558:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "3558:38:6"
											}
										]
									},
									"functionSelector": "e1f21c67",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3434:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3450:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3442:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3465:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3457:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3457:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3482:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3474:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:48:6"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3497:0:6"
									},
									"scope": 1220,
									"src": "3425:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1221,
							"src": "3146:459:6",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "1212:2394:6"
				},
				"id": 6
			}
		}
	}
}